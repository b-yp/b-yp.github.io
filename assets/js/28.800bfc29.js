(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{1190:function(t,n,e){"use strict";e.r(n);var a=e(24),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"今日内容-基础加强"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#今日内容-基础加强"}},[t._v("#")]),t._v(" 今日内容（基础加强）")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. Junit单元测试\n2. 反射\n3. 注解\n")])])]),e("h3",{attrs:{id:"junit单元测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#junit单元测试"}},[t._v("#")]),t._v(" Junit单元测试：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 测试分类：\n\t1. 黑盒测试：不需要写代码，给输入值，看程序是否能够输出期望的值。\n\t2. 白盒测试：需要写代码的。关注程序具体的执行流程。\n\n* Junit使用：白盒测试\n\t* 步骤：\n\t\t1. 定义一个测试类(测试用例)\n\t\t\t* 建议：\n\t\t\t\t* 测试类名：被测试的类名Test\t\tCalculatorTest\n\t\t\t\t* 包名：xxx.xxx.xx.test\t\tcn.itcast.test\n\n\t\t2. 定义测试方法：可以独立运行\n\t\t\t* 建议：\n\t\t\t\t* 方法名：test测试的方法名\t\ttestAdd()  \n\t\t\t\t* 返回值：void\n\t\t\t\t* 参数列表：空参\n\n\t\t3. 给方法加@Test\n\t\t4. 导入junit依赖环境\n\n\t* 判定结果：\n\t\t* 红色：失败\n\t\t* 绿色：成功\n\t\t* 一般我们会使用断言操作来处理结果\n\t\t\t* Assert.assertEquals(期望的结果,运算的结果);\n\n\t* 补充：\n\t\t* @Before:\n\t\t\t* 修饰的方法会在测试方法之前被自动执行\n\t\t* @After:\n\t\t\t* 修饰的方法会在测试方法执行之后自动被执行\n")])])]),e("h3",{attrs:{id:"反射-框架设计的灵魂"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反射-框架设计的灵魂"}},[t._v("#")]),t._v(" 反射：框架设计的灵魂")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 框架：半成品软件。可以在框架的基础上进行软件开发，简化编码\n* 反射：将类的各个组成部分封装为其他对象，这就是反射机制\n\t* 好处：\n\t\t1. 可以在程序运行过程中，操作这些对象。\n\t\t2. 可以解耦，提高程序的可扩展性。\n\n\n* 获取Class对象的方式：\n\t1. Class.forName("全类名")：将字节码文件加载进内存，返回Class对象\n\t\t* 多用于配置文件，将类名定义在配置文件中。读取文件，加载类\n\t2. 类名.class：通过类名的属性class获取\n\t\t* 多用于参数的传递\n\t3. 对象.getClass()：getClass()方法在Object类中定义着。\n\t\t* 多用于对象的获取字节码的方式\n\n\t* 结论：\n\t\t同一个字节码文件(*.class)在一次程序运行过程中，只会被加载一次，不论通过哪一种方式获取的Class对象都是同一个。\n\n\n* Class对象功能：\n\t* 获取功能：\n\t\t1. 获取成员变量们\n\t\t\t* Field[] getFields() ：获取所有public修饰的成员变量\n\t\t\t* Field getField(String name)   获取指定名称的 public修饰的成员变量\n\n\t\t\t* Field[] getDeclaredFields()  获取所有的成员变量，不考虑修饰符\n\t\t\t* Field getDeclaredField(String name)  \n\t\t2. 获取构造方法们\n\t\t\t* Constructor<?>[] getConstructors()  \n\t\t\t* Constructor<T> getConstructor(类<?>... parameterTypes)  \n\n\t\t\t* Constructor<T> getDeclaredConstructor(类<?>... parameterTypes)  \n\t\t\t* Constructor<?>[] getDeclaredConstructors()  \n\t\t3. 获取成员方法们：\n\t\t\t* Method[] getMethods()  \n\t\t\t* Method getMethod(String name, 类<?>... parameterTypes)  \n\n\t\t\t* Method[] getDeclaredMethods()  \n\t\t\t* Method getDeclaredMethod(String name, 类<?>... parameterTypes)  \n\n\t\t4. 获取全类名\t\n\t\t\t* String getName()  \n\n\n* Field：成员变量\n\t* 操作：\n\t\t1. 设置值\n\t\t\t* void set(Object obj, Object value)  \n\t\t2. 获取值\n\t\t\t* get(Object obj) \n\n\t\t3. 忽略访问权限修饰符的安全检查\n\t\t\t* setAccessible(true):暴力反射\n\n\n\n* Constructor:构造方法\n\t* 创建对象：\n\t\t* T newInstance(Object... initargs)  \n\n\t\t* 如果使用空参数构造方法创建对象，操作可以简化：Class对象的newInstance方法\n\n\n* Method：方法对象\n\t* 执行方法：\n\t\t* Object invoke(Object obj, Object... args)  \n\n\t* 获取方法名称：\n\t\t* String getName:获取方法名\n\n\n* 案例：\n\t* 需求：写一个"框架"，不能改变该类的任何代码的前提下，可以帮我们创建任意类的对象，并且执行其中任意方法\n\t\t* 实现：\n\t\t\t1. 配置文件\n\t\t\t2. 反射\n\t\t* 步骤：\n\t\t\t1. 将需要创建的对象的全类名和需要执行的方法定义在配置文件中\n\t\t\t2. 在程序中加载读取配置文件\n\t\t\t3. 使用反射技术来加载类文件进内存\n\t\t\t4. 创建对象\n\t\t\t5. 执行方法\n')])])]),e("h3",{attrs:{id:"注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[t._v("#")]),t._v(" 注解：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 概念：说明程序的。给计算机看的\n* 注释：用文字描述程序的。给程序员看的\n\n* 定义：注解（Annotation），也叫元数据。一种代码级别的说明。它是JDK1.5及以后版本引入的一个特性，与类、接口、枚举是在同一个层次。它可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行说明，注释。\n* 概念描述：\n\t* JDK1.5之后的新特性\n\t* 说明程序的\n\t* 使用注解：@注解名称\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 作用分类：\n\t①编写文档：通过代码里标识的注解生成文档【生成文档doc文档】\n\t②代码分析：通过代码里标识的注解对代码进行分析【使用反射】\n\t③编译检查：通过代码里标识的注解让编译器能够实现基本的编译检查【Override】\n\n\n* JDK中预定义的一些注解\n\t* @Override\t：检测被该注解标注的方法是否是继承自父类(接口)的\n\t* @Deprecated：该注解标注的内容，表示已过时\n\t* @SuppressWarnings：压制警告\n\t\t* 一般传递参数all  @SuppressWarnings("all")\n\n* 自定义注解\n\t* 格式：\n\t\t元注解\n\t\tpublic @interface 注解名称{\n\t\t\t属性列表;\n\t\t}\n\n\t* 本质：注解本质上就是一个接口，该接口默认继承Annotation接口\n\t\t* public interface MyAnno extends java.lang.annotation.Annotation {}\n\n\t* 属性：接口中的抽象方法\n\t\t* 要求：\n\t\t\t1. 属性的返回值类型有下列取值\n\t\t\t\t* 基本数据类型\n\t\t\t\t* String\n\t\t\t\t* 枚举\n\t\t\t\t* 注解\n\t\t\t\t* 以上类型的数组\n\n\t\t\t2. 定义了属性，在使用时需要给属性赋值\n\t\t\t\t1. 如果定义属性时，使用default关键字给属性默认初始化值，则使用注解时，可以不进行属性的赋值。\n\t\t\t\t2. 如果只有一个属性需要赋值，并且属性的名称是value，则value可以省略，直接定义值即可。\n\t\t\t\t3. 数组赋值时，值使用{}包裹。如果数组中只有一个值，则{}可以省略\n\t\n\t* 元注解：用于描述注解的注解\n\t\t* @Target：描述注解能够作用的位置\n\t\t\t* ElementType取值：\n\t\t\t\t* TYPE：可以作用于类上\n\t\t\t\t* METHOD：可以作用于方法上\n\t\t\t\t* FIELD：可以作用于成员变量上\n\t\t* @Retention：描述注解被保留的阶段\n\t\t\t* @Retention(RetentionPolicy.RUNTIME)：当前被描述的注解，会保留到class字节码文件中，并被JVM读取到\n\t\t* @Documented：描述注解是否被抽取到api文档中\n\t\t* @Inherited：描述注解是否被子类继承\n\n\n* 在程序使用(解析)注解：获取注解中定义的属性值\n\t1. 获取注解定义的位置的对象  （Class，Method,Field）\n\t2. 获取指定的注解\n\t\t* getAnnotation(Class)\n\t\t//其实就是在内存中生成了一个该注解接口的子类实现对象\n\n\t            public class ProImpl implements Pro{\n\t                public String className(){\n\t                    return "cn.itcast.annotation.Demo1";\n\t                }\n\t                public String methodName(){\n\t                    return "show";\n\t                }\n\t            }\n\t3. 调用注解中的抽象方法获取配置的属性值\n\n\n* 案例：简单的测试框架\n* 小结：\n\t1. 以后大多数时候，我们会使用注解，而不是自定义注解\n\t2. 注解给谁用？\n\t\t1. 编译器\n\t\t2. 给解析程序用\n\t3. 注解不是程序的一部分，可以理解为注解就是一个标签\n')])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"mysql基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql基础"}},[t._v("#")]),t._v(" MySQL基础")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("数据库的基本概念")])]),t._v(" "),e("li",[e("p",[t._v("MySQL数据库软件")]),t._v(" "),e("ol",[e("li",[t._v("安装")]),t._v(" "),e("li",[t._v("卸载")]),t._v(" "),e("li",[t._v("配置")])])]),t._v(" "),e("li",[e("p",[t._v("SQL")])])]),t._v(" "),e("h3",{attrs:{id:"数据库的基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库的基本概念"}},[t._v("#")]),t._v(" 数据库的基本概念")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 数据库的英文单词： DataBase 简称 ： DB\n2. 什么数据库？\n\t* 用于存储和管理数据的仓库。\n\n3. 数据库的特点：\n\t1. 持久化存储数据的。其实数据库就是一个文件系统\n\t2. 方便存储和管理数据\n\t3. 使用了统一的方式操作数据库 -- SQL\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("4. 常见的数据库软件\n\t* 参见《MySQL基础.pdf》\n")])])]),e("h2",{attrs:{id:"mysql数据库软件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql数据库软件"}},[t._v("#")]),t._v(" MySQL数据库软件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 安装\n\t* 参见《MySQL基础.pdf》\n2. 卸载\n\t1. 去mysql的安装目录找到my.ini文件\n\t\t* 复制 datadir="C:/ProgramData/MySQL/MySQL Server 5.5/Data/"\n\t2. 卸载MySQL\n\t3. 删除C:/ProgramData目录下的MySQL文件夹。\n\t\n3. 配置\n\t* MySQL服务启动\n\t\t1. 手动。\n\t\t2. cmd--\x3e services.msc 打开服务的窗口\n\t\t3. 使用管理员打开cmd\n\t\t\t* net start mysql : 启动mysql的服务\n\t\t\t* net stop mysql:关闭mysql服务\n\t* MySQL登录\n\t\t1. mysql -uroot -p密码\n\t\t2. mysql -hip -uroot -p连接目标的密码\n\t\t3. mysql --host=ip --user=root --password=连接目标的密码\n\t* MySQL退出\n\t\t1. exit\n\t\t2. quit\n\n\t* MySQL目录结构\n\t\t1. MySQL安装目录：basedir="D:/develop/MySQL/"\n\t\t\t* 配置文件 my.ini\n\t\t2. MySQL数据目录：datadir="C:/ProgramData/MySQL/MySQL Server 5.5/Data/"\n\t\t\t* 几个概念\n\t\t\t\t* 数据库：文件夹\n\t\t\t\t* 表：文件\n\t\t\t\t* 数据：数据\n')])])]),e("h2",{attrs:{id:"sql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql"}},[t._v("#")]),t._v(" SQL")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1.什么是SQL？\n\tStructured Query Language：结构化查询语言\n\t其实就是定义了操作所有关系型数据库的规则。每一种数据库操作的方式存在不一样的地方，称为“方言”。\n\t\n2.SQL通用语法\n\t1. SQL 语句可以单行或多行书写，以分号结尾。\n\t2. 可使用空格和缩进来增强语句的可读性。\n\t3. MySQL 数据库的 SQL 语句不区分大小写，关键字建议使用大写。\n\t4. 3 种注释\n\t\t* 单行注释: -- 注释内容 或 ## 注释内容(mysql 特有) \n\t\t* 多行注释: /* 注释 */\n\t\n3. SQL分类\n\t1) DDL(Data Definition Language)数据定义语言\n\t\t用来定义数据库对象：数据库，表，列等。关键字：create, drop,alter 等\n\t2) DML(Data Manipulation Language)数据操作语言\n\t\t用来对数据库中表的数据进行增删改。关键字：insert, delete, update 等\n\t3) DQL(Data Query Language)数据查询语言\n\t\t用来查询数据库中表的记录(数据)。关键字：select, where 等\n\t4) DCL(Data Control Language)数据控制语言(了解)\n\t\t用来定义数据库的访问权限和安全级别，及创建用户。关键字：GRANT， REVOKE 等\n")])])]),e("h3",{attrs:{id:"ddl-操作数据库、表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ddl-操作数据库、表"}},[t._v("#")]),t._v(" DDL:操作数据库、表")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 操作数据库：CRUD\n\t1. C(Create):创建\n\t\t* 创建数据库：\n\t\t\t* create database 数据库名称;\n\t\t* 创建数据库，判断不存在，再创建：\n\t\t\t* create database if not exists 数据库名称;\n\t\t* 创建数据库，并指定字符集\n\t\t\t* create database 数据库名称 character set 字符集名;\n\n\t\t* 练习： 创建db4数据库，判断是否存在，并制定字符集为gbk\n\t\t\t* create database if not exists db4 character set gbk;\n\t2. R(Retrieve)：查询\n\t\t* 查询所有数据库的名称:\n\t\t\t* show databases;\n\t\t* 查询某个数据库的字符集:查询某个数据库的创建语句\n\t\t\t* show create database 数据库名称;\n\t3. U(Update):修改\n\t\t* 修改数据库的字符集\n\t\t\t* alter database 数据库名称 character set 字符集名称;\n\t4. D(Delete):删除\n\t\t* 删除数据库\n\t\t\t* drop database 数据库名称;\n\t\t* 判断数据库存在，存在再删除\n\t\t\t* drop database if exists 数据库名称;\n\t5. 使用数据库\n\t\t* 查询当前正在使用的数据库名称\n\t\t\t* select database();\n\t\t* 使用数据库\n\t\t\t* use 数据库名称;\n\n\n2. 操作表\n\t1. C(Create):创建\n\t\t1. 语法：\n\t\t\tcreate table 表名(\n\t\t\t\t列名1 数据类型1,\n\t\t\t\t列名2 数据类型2,\n\t\t\t\t....\n\t\t\t\t列名n 数据类型n\n\t\t\t);\n\t\t\t* 注意：最后一列，不需要加逗号（,）\n\t\t\t* 数据库类型：\n\t\t\t\t1. int：整数类型\n\t\t\t\t\t* age int,\n\t\t\t\t2. double:小数类型\n\t\t\t\t\t* score double(5,2)\n\t\t\t\t3. date:日期，只包含年月日，yyyy-MM-dd\n\t\t\t\t4. datetime:日期，包含年月日时分秒\t yyyy-MM-dd HH:mm:ss\n\t\t\t\t5. timestamp:时间错类型\t包含年月日时分秒\t yyyy-MM-dd HH:mm:ss\t\n\t\t\t\t\t* 如果将来不给这个字段赋值，或赋值为null，则默认使用当前的系统时间，来自动赋值\n\n\t\t\t\t6. varchar：字符串\n\t\t\t\t\t* name varchar(20):姓名最大20个字符\n\t\t\t\t\t* zhangsan 8个字符  张三 2个字符\n\n\n\t\t* 创建表\n\t\t\tcreate table student(\n\t\t\t\tid int,\n\t\t\t\tname varchar(32),\n\t\t\t\tage int ,\n\t\t\t\tscore double(4,1),\n\t\t\t\tbirthday date,\n\t\t\t\tinsert_time timestamp\n\t\t\t);\n\t\t* 复制表：\n\t\t\t* create table 表名 like 被复制的表名;\t  \t\n\t2. R(Retrieve)：查询\n\t\t* 查询某个数据库中所有的表名称\n\t\t\t* show tables;\n\t\t* 查询表结构\n\t\t\t* desc 表名;\n\t3. U(Update):修改\n\t\t1. 修改表名\n\t\t\talter table 表名 rename to 新的表名;\n\t\t2. 修改表的字符集\n\t\t\talter table 表名 character set 字符集名称;\n\t\t3. 添加一列\n\t\t\talter table 表名 add 列名 数据类型;\n\t\t4. 修改列名称 类型\n\t\t\talter table 表名 change 列名 新列别 新数据类型;\n\t\t\talter table 表名 modify 列名 新数据类型;\n\t\t5. 删除列\n\t\t\talter table 表名 drop 列名;\n\t4. D(Delete):删除\n\t\t* drop table 表名;\n\t\t* drop table  if exists 表名 ;\n")])])]),e("ul",[e("li",[t._v("客户端图形化工具：SQLYog")])]),t._v(" "),e("h3",{attrs:{id:"dml-增删改表中数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dml-增删改表中数据"}},[t._v("#")]),t._v(" DML：增删改表中数据")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 添加数据：\n\t* 语法：\n\t\t* insert into 表名(列名1,列名2,...列名n) values(值1,值2,...值n);\n\t* 注意：\n\t\t1. 列名和值要一一对应。\n\t\t2. 如果表名后，不定义列名，则默认给所有列添加值\n\t\t\tinsert into 表名 values(值1,值2,...值n);\n\t\t3. 除了数字类型，其他类型需要使用引号(单双都可以)引起来\n2. 删除数据：\n\t* 语法：\n\t\t* delete from 表名 [where 条件]\n\t* 注意：\n\t\t1. 如果不加条件，则删除表中所有记录。\n\t\t2. 如果要删除所有记录\n\t\t\t1. delete from 表名; -- 不推荐使用。有多少条记录就会执行多少次删除操作\n\t\t\t2. TRUNCATE TABLE 表名; -- 推荐使用，效率更高 先删除表，然后再创建一张一样的表。\n3. 修改数据：\n\t* 语法：\n\t\t* update 表名 set 列名1 = 值1, 列名2 = 值2,... [where 条件];\n\n\t* 注意：\n\t\t1. 如果不加任何条件，则会将表中所有记录全部修改。\n")])])]),e("h3",{attrs:{id:"dql-查询表中的记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dql-查询表中的记录"}},[t._v("#")]),t._v(" DQL：查询表中的记录")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* select * from 表名;\n\n1. 语法：\n\tselect\n\t\t字段列表\n\tfrom\n\t\t表名列表\n\twhere\n\t\t条件列表\n\tgroup by\n\t\t分组字段\n\thaving\n\t\t分组之后的条件\n\torder by\n\t\t排序\n\tlimit\n\t\t分页限定\n\n\n2. 基础查询\n\t1. 多个字段的查询\n\t\tselect 字段名1，字段名2... from 表名；\n\t\t* 注意：\n\t\t\t* 如果查询所有字段，则可以使用*来替代字段列表。\n\t2. 去除重复：\n\t\t* distinct\n\t3. 计算列\n\t\t* 一般可以使用四则运算计算一些列的值。（一般只会进行数值型的计算）\n\t\t* ifnull(表达式1,表达式2)：null参与的运算，计算结果都为null\n\t\t\t* 表达式1：哪个字段需要判断是否为null\n\t\t\t* 如果该字段为null后的替换值。\n\t4. 起别名：\n\t\t* as：as也可以省略\n\n\n3. 条件查询\n\t1. where子句后跟条件\n\t2. 运算符\n\t\t* > 、< 、<= 、>= 、= 、<>\n\t\t* BETWEEN...AND  \n\t\t* IN( 集合) \n\t\t* LIKE：模糊查询\n\t\t\t* 占位符：\n\t\t\t\t* _:单个任意字符\n\t\t\t\t* %：多个任意字符\n\t\t* IS NULL  \n\t\t* and  或 &&\n\t\t* or  或 || \n\t\t* not  或 !\n\t\t\n\t\t\t-- 查询年龄大于20岁\n\n\t\t\tSELECT * FROM student WHERE age > 20;\n\t\t\t\n\t\t\tSELECT * FROM student WHERE age >= 20;\n\t\t\t\n\t\t\t-- 查询年龄等于20岁\n\t\t\tSELECT * FROM student WHERE age = 20;\n\t\t\t\n\t\t\t-- 查询年龄不等于20岁\n\t\t\tSELECT * FROM student WHERE age != 20;\n\t\t\tSELECT * FROM student WHERE age <> 20;\n\t\t\t\n\t\t\t-- 查询年龄大于等于20 小于等于30\n\t\t\t\n\t\t\tSELECT * FROM student WHERE age >= 20 &&  age <=30;\n\t\t\tSELECT * FROM student WHERE age >= 20 AND  age <=30;\n\t\t\tSELECT * FROM student WHERE age BETWEEN 20 AND 30;\n\t\t\t\n\t\t\t-- 查询年龄22岁，18岁，25岁的信息\n\t\t\tSELECT * FROM student WHERE age = 22 OR age = 18 OR age = 25\n\t\t\tSELECT * FROM student WHERE age IN (22,18,25);\n\t\t\t\n\t\t\t-- 查询英语成绩为null\n\t\t\tSELECT * FROM student WHERE english = NULL; -- 不对的。null值不能使用 = （!=） 判断\n\t\t\t\n\t\t\tSELECT * FROM student WHERE english IS NULL;\n\t\t\t\n\t\t\t-- 查询英语成绩不为null\n\t\t\tSELECT * FROM student WHERE english  IS NOT NULL;\n\n\n\n\t\t\t-- 查询姓马的有哪些？ like\n\t\t\tSELECT * FROM student WHERE NAME LIKE '马%';\n\t\t\t-- 查询姓名第二个字是化的人\n\t\t\t\n\t\t\tSELECT * FROM student WHERE NAME LIKE \"_化%\";\n\t\t\t\n\t\t\t-- 查询姓名是3个字的人\n\t\t\tSELECT * FROM student WHERE NAME LIKE '___';\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t-- 查询姓名中包含德的人\n\t\t\tSELECT * FROM student WHERE NAME LIKE '%德%';\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"mysql约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql约束"}},[t._v("#")]),t._v(" MySQL约束")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. DQL:查询语句\n\t1. 排序查询\n\t2. 聚合函数\n\t3. 分组查询\n\t4. 分页查询\n\n2. 约束\n3. 多表之间的关系\n4. 范式\n5. 数据库的备份和还原\n")])])]),e("h2",{attrs:{id:"dql-查询语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dql-查询语句"}},[t._v("#")]),t._v(" DQL:查询语句")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 排序查询\n\t* 语法：order by 子句\n\t\t* order by 排序字段1 排序方式1 ，  排序字段2 排序方式2...\n\n\t* 排序方式：\n\t\t* ASC：升序，默认的。\n\t\t* DESC：降序。\n\n\t* 注意：\n\t\t* 如果有多个排序条件，则当前边的条件值一样时，才会判断第二条件。\n\n\n2. 聚合函数：将一列数据作为一个整体，进行纵向的计算。\n\t1. count：计算个数\n\t\t1. 一般选择非空的列：主键\n\t\t2. count(*)\n\t2. max：计算最大值\n\t3. min：计算最小值\n\t4. sum：计算和\n\t5. avg：计算平均值\n\n\n\t* 注意：聚合函数的计算，排除null值。\n\t\t解决方案：\n\t\t\t1. 选择不包含非空的列进行计算\n\t\t\t2. IFNULL函数\n\n3. 分组查询:\n\t1. 语法：group by 分组字段；\n\t2. 注意：\n\t\t1. 分组之后查询的字段：分组字段、聚合函数\n\t\t2. where 和 having 的区别？\n\t\t\t1. where 在分组之前进行限定，如果不满足条件，则不参与分组。having在分组之后进行限定，如果不满足结果，则不会被查询出来\n\t\t\t2. where 后不可以跟聚合函数，having可以进行聚合函数的判断。\n\n\t\t-- 按照性别分组。分别查询男、女同学的平均分\n\n\t\tSELECT sex , AVG(math) FROM student GROUP BY sex;\n\t\t\n\t\t-- 按照性别分组。分别查询男、女同学的平均分,人数\n\t\t\n\t\tSELECT sex , AVG(math),COUNT(id) FROM student GROUP BY sex;\n\t\t\n\t\t--  按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组\n\t\tSELECT sex , AVG(math),COUNT(id) FROM student WHERE math > 70 GROUP BY sex;\n\t\t\n\t\t--  按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组,分组之后。人数要大于2个人\n\t\tSELECT sex , AVG(math),COUNT(id) FROM student WHERE math > 70 GROUP BY sex HAVING COUNT(id) > 2;\n\t\t\n\t\tSELECT sex , AVG(math),COUNT(id) 人数 FROM student WHERE math > 70 GROUP BY sex HAVING 人数 > 2;\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('4. 分页查询\n\t1. 语法：limit 开始的索引,每页查询的条数;\n\t2. 公式：开始的索引 = （当前的页码 - 1） * 每页显示的条数\n\t\t-- 每页显示3条记录 \n\n\t\tSELECT * FROM student LIMIT 0,3; -- 第1页\n\t\t\n\t\tSELECT * FROM student LIMIT 3,3; -- 第2页\n\t\t\n\t\tSELECT * FROM student LIMIT 6,3; -- 第3页\n\n\t3. limit 是一个MySQL"方言"\n')])])]),e("h3",{attrs:{id:"约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#约束"}},[t._v("#")]),t._v(" 约束")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 概念： 对表中的数据进行限定，保证数据的正确性、有效性和完整性。\t\n* 分类：\n\t1. 主键约束：primary key\n\t2. 非空约束：not null\n\t3. 唯一约束：unique\n\t4. 外键约束：foreign key\n\n* 非空约束：not null，值不能为null\n\t1. 创建表时添加约束\n\t\tCREATE TABLE stu(\n\t\t\tid INT,\n\t\t\tNAME VARCHAR(20) NOT NULL -- name为非空\n\t\t);\n\t2. 创建表完后，添加非空约束\n\t\tALTER TABLE stu MODIFY NAME VARCHAR(20) NOT NULL;\n\n\t3. 删除name的非空约束\n\t\tALTER TABLE stu MODIFY NAME VARCHAR(20);\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 唯一约束：unique，值不能重复\n\t1. 创建表时，添加唯一约束\n\t\tCREATE TABLE stu(\n\t\t\tid INT,\n\t\t\tphone_number VARCHAR(20) UNIQUE -- 添加了唯一约束\n\t\t\n\t\t);\n\t\t* 注意mysql中，唯一约束限定的列的值可以有多个null\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t2. 删除唯一约束\n\t\n\t\tALTER TABLE stu DROP INDEX phone_number;\n\t\n\t3. 在创建表后，添加唯一约束\n\t\tALTER TABLE stu MODIFY phone_number VARCHAR(20) UNIQUE;\n\n* 主键约束：primary key。\n\t1. 注意：\n\t\t1. 含义：非空且唯一\n\t\t2. 一张表只能有一个字段为主键\n\t\t3. 主键就是表中记录的唯一标识\n\n\t2. 在创建表时，添加主键约束\n\t\tcreate table stu(\n\t\t\tid int primary key,-- 给id添加主键约束\n\t\t\tname varchar(20)\n\t\t);\n\n\t3. 删除主键\n\t\t-- 错误 alter table stu modify id int ;\n\t\tALTER TABLE stu DROP PRIMARY KEY;\n\n\t4. 创建完表后，添加主键\n\t\tALTER TABLE stu MODIFY id INT PRIMARY KEY;\n\n\t5. 自动增长：\n\t\t1.  概念：如果某一列是数值类型的，使用 auto_increment 可以来完成值得自动增长\n\n\t\t2. 在创建表时，添加主键约束，并且完成主键自增长\n\t\tcreate table stu(\n\t\t\tid int primary key auto_increment,-- 给id添加主键约束\n\t\t\tname varchar(20)\n\t\t);\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t3. 删除自动增长\n\t\tALTER TABLE stu MODIFY id INT;\n\t\t4. 添加自动增长\n\t\tALTER TABLE stu MODIFY id INT AUTO_INCREMENT;\n\n\n* 外键约束：foreign key,让表于表产生关系，从而保证数据的正确性。\n\t1. 在创建表时，可以添加外键\n\t\t* 语法：\n\t\t\tcreate table 表名(\n\t\t\t\t....\n\t\t\t\t外键列\n\t\t\t\tconstraint 外键名称 foreign key (外键列名称) references 主表名称(主表列名称)\n\t\t\t);\n\n\t2. 删除外键\n\t\tALTER TABLE 表名 DROP FOREIGN KEY 外键名称;\n\n\t3. 创建表之后，添加外键\n\t\tALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称);\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t4. 级联操作\n\t\t1. 添加级联操作\n\t\t\t语法：ALTER TABLE 表名 ADD CONSTRAINT 外键名称 \n\t\t\t\t\tFOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称) ON UPDATE CASCADE ON DELETE CASCADE  ;\n\t\t2. 分类：\n\t\t\t1. 级联更新：ON UPDATE CASCADE \n\t\t\t2. 级联删除：ON DELETE CASCADE \n")])])]),e("h3",{attrs:{id:"数据库的设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库的设计"}},[t._v("#")]),t._v(" 数据库的设计")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 多表之间的关系\n\t1. 分类：\n\t\t1. 一对一(了解)：\n\t\t\t* 如：人和身份证\n\t\t\t* 分析：一个人只有一个身份证，一个身份证只能对应一个人\n\t\t2. 一对多(多对一)：\n\t\t\t* 如：部门和员工\n\t\t\t* 分析：一个部门有多个员工，一个员工只能对应一个部门\n\t\t3. 多对多：\n\t\t\t* 如：学生和课程\n\t\t\t* 分析：一个学生可以选择很多门课程，一个课程也可以被很多学生选择\n\t2. 实现关系：\n\t\t1. 一对多(多对一)：\n\t\t\t* 如：部门和员工\n\t\t\t* 实现方式：在多的一方建立外键，指向一的一方的主键。\n\t\t2. 多对多：\n\t\t\t* 如：学生和课程\n\t\t\t* 实现方式：多对多关系实现需要借助第三张中间表。中间表至少包含两个字段，这两个字段作为第三张表的外键，分别指向两张表的主键\n\t\t3. 一对一(了解)：\n\t\t\t* 如：人和身份证\n\t\t\t* 实现方式：一对一关系实现，可以在任意一方添加唯一外键指向另一方的主键。\n\n\t3. 案例\n\t\t-- 创建旅游线路分类表 tab_category\n\t\t-- cid 旅游线路分类主键，自动增长\n\t\t-- cname 旅游线路分类名称非空，唯一，字符串 100\n\t\tCREATE TABLE tab_category (\n\t\t\tcid INT PRIMARY KEY AUTO_INCREMENT,\n\t\t\tcname VARCHAR(100) NOT NULL UNIQUE\n\t\t);\n\t\t\n\t\t-- 创建旅游线路表 tab_route\n\t\t/*\n\t\trid 旅游线路主键，自动增长\n\t\trname 旅游线路名称非空，唯一，字符串 100\n\t\tprice 价格\n\t\trdate 上架时间，日期类型\n\t\tcid 外键，所属分类\n\t\t*/\n\t\tCREATE TABLE tab_route(\n\t\t\trid INT PRIMARY KEY AUTO_INCREMENT,\n\t\t\trname VARCHAR(100) NOT NULL UNIQUE,\n\t\t\tprice DOUBLE,\n\t\t\trdate DATE,\n\t\t\tcid INT,\n\t\t\tFOREIGN KEY (cid) REFERENCES tab_category(cid)\n\t\t);\n\t\t\n\t\t/*创建用户表 tab_user\n\t\tuid 用户主键，自增长\n\t\tusername 用户名长度 100，唯一，非空\n\t\tpassword 密码长度 30，非空\n\t\tname 真实姓名长度 100\n\t\tbirthday 生日\n\t\tsex 性别，定长字符串 1\n\t\ttelephone 手机号，字符串 11\n\t\temail 邮箱，字符串长度 100\n\t\t*/\n\t\tCREATE TABLE tab_user (\n\t\t\tuid INT PRIMARY KEY AUTO_INCREMENT,\n\t\t\tusername VARCHAR(100) UNIQUE NOT NULL,\n\t\t\tPASSWORD VARCHAR(30) NOT NULL,\n\t\t\tNAME VARCHAR(100),\n\t\t\tbirthday DATE,\n\t\t\tsex CHAR(1) DEFAULT '男',\n\t\t\ttelephone VARCHAR(11),\n\t\t\temail VARCHAR(100)\n\t\t);\n\t\t\n\t\t/*\n\t\t创建收藏表 tab_favorite\n\t\trid 旅游线路 id，外键\n\t\tdate 收藏时间\n\t\tuid 用户 id，外键\n\t\trid 和 uid 不能重复，设置复合主键，同一个用户不能收藏同一个线路两次\n\t\t*/\n\t\tCREATE TABLE tab_favorite (\n\t\t\trid INT, -- 线路id\n\t\t\tDATE DATETIME,\n\t\t\tuid INT, -- 用户id\n\t\t\t-- 创建复合主键\n\t\t\tPRIMARY KEY(rid,uid), -- 联合主键\n\t\t\tFOREIGN KEY (rid) REFERENCES tab_route(rid),\n\t\t\tFOREIGN KEY(uid) REFERENCES tab_user(uid)\n\t\t);\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("2. 数据库设计的范式\n\t* 概念：设计数据库时，需要遵循的一些规范。要遵循后边的范式要求，必须先遵循前边的所有范式要求\n\n\t\t设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求被称为不同的范式，各种范式呈递次规范，越高的范式数据库冗余越小。\n\t\t目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称完美范式）。\n\n\t* 分类：\n\t\t1. 第一范式（1NF）：每一列都是不可分割的原子数据项\n\t\t2. 第二范式（2NF）：在1NF的基础上，非码属性必须完全依赖于码（在1NF基础上消除非主属性对主码的部分函数依赖）\n\t\t\t* 几个概念：\n\t\t\t\t1. 函数依赖：A--\x3eB,如果通过A属性(属性组)的值，可以确定唯一B属性的值。则称B依赖于A\n\t\t\t\t\t例如：学号--\x3e姓名。  （学号，课程名称） --\x3e 分数\n\t\t\t\t2. 完全函数依赖：A--\x3eB， 如果A是一个属性组，则B属性值得确定需要依赖于A属性组中所有的属性值。\n\t\t\t\t\t例如：（学号，课程名称） --\x3e 分数\n\t\t\t\t3. 部分函数依赖：A--\x3eB， 如果A是一个属性组，则B属性值得确定只需要依赖于A属性组中某一些值即可。\n\t\t\t\t\t例如：（学号，课程名称） -- > 姓名\n\t\t\t\t4. 传递函数依赖：A--\x3eB, B -- >C . 如果通过A属性(属性组)的值，可以确定唯一B属性的值，在通过B属性（属性组）的值可以确定唯一C属性的值，则称 C 传递函数依赖于A\n\t\t\t\t\t例如：学号--\x3e系名，系名--\x3e系主任\n\t\t\t\t5. 码：如果在一张表中，一个属性或属性组，被其他所有属性所完全依赖，则称这个属性(属性组)为该表的码\n\t\t\t\t\t例如：该表中码为：（学号，课程名称）\n\t\t\t\t\t* 主属性：码属性组中的所有属性\n\t\t\t\t\t* 非主属性：除过码属性组的属性\n\t\t\t\t\t\n\t\t3. 第三范式（3NF）：在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖）\n")])])]),e("h3",{attrs:{id:"数据库的备份和还原"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库的备份和还原"}},[t._v("#")]),t._v(" 数据库的备份和还原")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 命令行：\n\t* 语法：\n\t\t* 备份： mysqldump -u用户名 -p密码 数据库名称 > 保存的路径\n\t\t* 还原：\n\t\t\t1. 登录数据库\n\t\t\t2. 创建数据库\n\t\t\t3. 使用数据库\n\t\t\t4. 执行文件。source 文件路径\n2. 图形化工具：\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"mysql多表-事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql多表-事务"}},[t._v("#")]),t._v(" MySQL多表&事务")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 多表查询\n\n2. 事务\n\n3. DCL\n")])])]),e("h3",{attrs:{id:"多表查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[t._v("#")]),t._v(" 多表查询：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 查询语法：\n\tselect\n\t\t列名列表\n\tfrom\n\t\t表名列表\n\twhere....\n* 准备sql\n\t## 创建部门表\n\tCREATE TABLE dept(\n\t\tid INT PRIMARY KEY AUTO_INCREMENT,\n\t\tNAME VARCHAR(20)\n\t);\n\tINSERT INTO dept (NAME) VALUES ('开发部'),('市场部'),('财务部');\n\t## 创建员工表\n\tCREATE TABLE emp (\n\t\tid INT PRIMARY KEY AUTO_INCREMENT,\n\t\tNAME VARCHAR(10),\n\t\tgender CHAR(1), -- 性别\n\t\tsalary DOUBLE, -- 工资\n\t\tjoin_date DATE, -- 入职日期\n\t\tdept_id INT,\n\t\tFOREIGN KEY (dept_id) REFERENCES dept(id) -- 外键，关联部门表(部门表的主键)\n\t);\n\tINSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('孙悟空','男',7200,'2013-02-24',1);\n\tINSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('猪八戒','男',3600,'2010-12-02',2);\n\tINSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('唐僧','男',9000,'2008-08-08',2);\n\tINSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('白骨精','女',5000,'2015-10-07',3);\n\tINSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES('蜘蛛精','女',4500,'2011-03-14',1);\n* 笛卡尔积：\n\t* 有两个集合A,B .取这两个集合的所有组成情况。\n\t* 要完成多表查询，需要消除无用的数据\n* 多表查询的分类：\n\t1. 内连接查询：\n\t\t1. 隐式内连接：使用where条件消除无用数据\n\t\t\t* 例子：\n\t\t\t-- 查询所有员工信息和对应的部门信息\n\n\t\t\tSELECT * FROM emp,dept WHERE emp.`dept_id` = dept.`id`;\n\t\t\t\n\t\t\t-- 查询员工表的名称，性别。部门表的名称\n\t\t\tSELECT emp.name,emp.gender,dept.name FROM emp,dept WHERE emp.`dept_id` = dept.`id`;\n\t\t\t\n\t\t\tSELECT \n\t\t\t\tt1.name, -- 员工表的姓名\n\t\t\t\tt1.gender,-- 员工表的性别\n\t\t\t\tt2.name -- 部门表的名称\n\t\t\tFROM\n\t\t\t\temp t1,\n\t\t\t\tdept t2\n\t\t\tWHERE \n\t\t\t\tt1.`dept_id` = t2.`id`;\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t2. 显式内连接：\n\t\t\t* 语法： select 字段列表 from 表名1 [inner] join 表名2 on 条件\n\t\t\t* 例如：\n\t\t\t\t* SELECT * FROM emp INNER JOIN dept ON emp.`dept_id` = dept.`id`;\t\n\t\t\t\t* SELECT * FROM emp JOIN dept ON emp.`dept_id` = dept.`id`;\t\n\n\t\t3. 内连接查询：\n\t\t\t1. 从哪些表中查询数据\n\t\t\t2. 条件是什么\n\t\t\t3. 查询哪些字段\n\t2. 外链接查询：\n\t\t1. 左外连接：\n\t\t\t* 语法：select 字段列表 from 表1 left [outer] join 表2 on 条件；\n\t\t\t* 查询的是左表所有数据以及其交集部分。\n\t\t\t* 例子：\n\t\t\t\t-- 查询所有员工信息，如果员工有部门，则查询部门名称，没有部门，则不显示部门名称\n\t\t\t\tSELECT \tt1.*,t2.`name` FROM emp t1 LEFT JOIN dept t2 ON t1.`dept_id` = t2.`id`;\n\t\t2. 右外连接：\n\t\t\t* 语法：select 字段列表 from 表1 right [outer] join 表2 on 条件；\n\t\t\t* 查询的是右表所有数据以及其交集部分。\n\t\t\t* 例子：\n\t\t\t\tSELECT \t* FROM dept t2 RIGHT JOIN emp t1 ON t1.`dept_id` = t2.`id`;\n\t3. 子查询：\n\t\t* 概念：查询中嵌套查询，称嵌套查询为子查询。\n\t\t\t-- 查询工资最高的员工信息\n\t\t\t-- 1 查询最高的工资是多少 9000\n\t\t\tSELECT MAX(salary) FROM emp;\n\t\t\t\n\t\t\t-- 2 查询员工信息，并且工资等于9000的\n\t\t\tSELECT * FROM emp WHERE emp.`salary` = 9000;\n\t\t\t\n\t\t\t-- 一条sql就完成这个操作。子查询\n\t\t\tSELECT * FROM emp WHERE emp.`salary` = (SELECT MAX(salary) FROM emp);\n\n\t\t* 子查询不同情况\n\t\t\t1. 子查询的结果是单行单列的：\n\t\t\t\t* 子查询可以作为条件，使用运算符去判断。 运算符： > >= < <= =\n\t\t\t\t* \n\t\t\t\t-- 查询员工工资小于平均工资的人\n\t\t\t\tSELECT * FROM emp WHERE emp.salary < (SELECT AVG(salary) FROM emp);\n\t\t\t2. 子查询的结果是多行单列的：\n\t\t\t\t* 子查询可以作为条件，使用运算符in来判断\n\t\t\t\t-- 查询'财务部'和'市场部'所有的员工信息\n\t\t\t\tSELECT id FROM dept WHERE NAME = '财务部' OR NAME = '市场部';\n\t\t\t\tSELECT * FROM emp WHERE dept_id = 3 OR dept_id = 2;\n\t\t\t\t-- 子查询\n\t\t\t\tSELECT * FROM emp WHERE dept_id IN (SELECT id FROM dept WHERE NAME = '财务部' OR NAME = '市场部');\n\n\t\t\t3. 子查询的结果是多行多列的：\n\t\t\t\t* 子查询可以作为一张虚拟表参与查询\n\t\t\t\t-- 查询员工入职日期是2011-11-11日之后的员工信息和部门信息\n\t\t\t\t-- 子查询\n\t\t\t\tSELECT * FROM dept t1 ,(SELECT * FROM emp WHERE emp.`join_date` > '2011-11-11') t2\n\t\t\t\tWHERE t1.id = t2.dept_id;\n\t\t\t\t\n\t\t\t\t-- 普通内连接\n\t\t\t\tSELECT * FROM emp t1,dept t2 WHERE t1.`dept_id` = t2.`id` AND t1.`join_date` >  '2011-11-11'\n\n\t* 多表查询练习\n\n\t\t\t-- 部门表\n\t\t\tCREATE TABLE dept (\n\t\t\t  id INT PRIMARY KEY PRIMARY KEY, -- 部门id\n\t\t\t  dname VARCHAR(50), -- 部门名称\n\t\t\t  loc VARCHAR(50) -- 部门所在地\n\t\t\t);\n\t\t\t\n\t\t\t-- 添加4个部门\n\t\t\tINSERT INTO dept(id,dname,loc) VALUES \n\t\t\t(10,'教研部','北京'),\n\t\t\t(20,'学工部','上海'),\n\t\t\t(30,'销售部','广州'),\n\t\t\t(40,'财务部','深圳');\n")])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t-- 职务表，职务名称，职务描述\n\t\t\tCREATE TABLE job (\n\t\t\t  id INT PRIMARY KEY,\n\t\t\t  jname VARCHAR(20),\n\t\t\t  description VARCHAR(50)\n\t\t\t);\n\t\t\t\n\t\t\t-- 添加4个职务\n\t\t\tINSERT INTO job (id, jname, description) VALUES\n\t\t\t(1, '董事长', '管理整个公司，接单'),\n\t\t\t(2, '经理', '管理部门员工'),\n\t\t\t(3, '销售员', '向客人推销产品'),\n\t\t\t(4, '文员', '使用办公软件');\n")])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t-- 员工表\n\t\t\tCREATE TABLE emp (\n\t\t\t  id INT PRIMARY KEY, -- 员工id\n\t\t\t  ename VARCHAR(50), -- 员工姓名\n\t\t\t  job_id INT, -- 职务id\n\t\t\t  mgr INT , -- 上级领导\n\t\t\t  joindate DATE, -- 入职日期\n\t\t\t  salary DECIMAL(7,2), -- 工资\n\t\t\t  bonus DECIMAL(7,2), -- 奖金\n\t\t\t  dept_id INT, -- 所在部门编号\n\t\t\t  CONSTRAINT emp_jobid_ref_job_id_fk FOREIGN KEY (job_id) REFERENCES job (id),\n\t\t\t  CONSTRAINT emp_deptid_ref_dept_id_fk FOREIGN KEY (dept_id) REFERENCES dept (id)\n\t\t\t);\n\t\t\t\n\t\t\t-- 添加员工\n\t\t\tINSERT INTO emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) VALUES \n\t\t\t(1001,'孙悟空',4,1004,'2000-12-17','8000.00',NULL,20),\n\t\t\t(1002,'卢俊义',3,1006,'2001-02-20','16000.00','3000.00',30),\n\t\t\t(1003,'林冲',3,1006,'2001-02-22','12500.00','5000.00',30),\n\t\t\t(1004,'唐僧',2,1009,'2001-04-02','29750.00',NULL,20),\n\t\t\t(1005,'李逵',4,1006,'2001-09-28','12500.00','14000.00',30),\n\t\t\t(1006,'宋江',2,1009,'2001-05-01','28500.00',NULL,30),\n\t\t\t(1007,'刘备',2,1009,'2001-09-01','24500.00',NULL,10),\n\t\t\t(1008,'猪八戒',4,1004,'2007-04-19','30000.00',NULL,20),\n\t\t\t(1009,'罗贯中',1,NULL,'2001-11-17','50000.00',NULL,10),\n\t\t\t(1010,'吴用',3,1006,'2001-09-08','15000.00','0.00',30),\n\t\t\t(1011,'沙僧',4,1004,'2007-05-23','11000.00',NULL,20),\n\t\t\t(1012,'李逵',4,1006,'2001-12-03','9500.00',NULL,30),\n\t\t\t(1013,'小白龙',4,1004,'2001-12-03','30000.00',NULL,20),\n\t\t\t(1014,'关羽',4,1007,'2002-01-23','13000.00',NULL,10);\n")])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t-- 工资等级表\n\t\t\tCREATE TABLE salarygrade (\n\t\t\t  grade INT PRIMARY KEY,   -- 级别\n\t\t\t  losalary INT,  -- 最低工资\n\t\t\t  hisalary INT -- 最高工资\n\t\t\t);\n\t\t\t\n\t\t\t-- 添加5个工资等级\n\t\t\tINSERT INTO salarygrade(grade,losalary,hisalary) VALUES \n\t\t\t(1,7000,12000),\n\t\t\t(2,12010,14000),\n\t\t\t(3,14010,20000),\n\t\t\t(4,20010,30000),\n\t\t\t(5,30010,99990);\n\t\t\t\n\t\t\t-- 需求：\n\t\t\t\n\t\t\t-- 1.查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述\n\t\t\t/*\n\t\t\t\t分析：\n\t\t\t\t\t1.员工编号，员工姓名，工资，需要查询emp表  职务名称，职务描述 需要查询job表\n\t\t\t\t\t2.查询条件 emp.job_id = job.id\n\t\t\t\n\t\t\t*/\n\t\t\tSELECT \n\t\t\t\tt1.`id`, -- 员工编号\n\t\t\t\tt1.`ename`, -- 员工姓名\n\t\t\t\tt1.`salary`,-- 工资\n\t\t\t\tt2.`jname`, -- 职务名称\n\t\t\t\tt2.`description` -- 职务描述\n\t\t\tFROM \n\t\t\t\temp t1, job t2\n\t\t\tWHERE \n\t\t\t\tt1.`job_id` = t2.`id`;\n")])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t-- 2.查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置\n\t\t\t/*\n\t\t\t\t分析：\n\t\t\t\t\t1. 员工编号，员工姓名，工资 emp  职务名称，职务描述 job  部门名称，部门位置 dept\n\t\t\t\t\t2. 条件： emp.job_id = job.id and emp.dept_id = dept.id\n\t\t\t*/\n\t\t\t\n\t\t\tSELECT \n\t\t\t\tt1.`id`, -- 员工编号\n\t\t\t\tt1.`ename`, -- 员工姓名\n\t\t\t\tt1.`salary`,-- 工资\n\t\t\t\tt2.`jname`, -- 职务名称\n\t\t\t\tt2.`description`, -- 职务描述\n\t\t\t\tt3.`dname`, -- 部门名称\n\t\t\t\tt3.`loc` -- 部门位置\n\t\t\tFROM \n\t\t\t\temp t1, job t2,dept t3\n\t\t\tWHERE \n\t\t\t\tt1.`job_id` = t2.`id` AND t1.`dept_id` = t3.`id`;\n\t\t\t   \n\t\t\t-- 3.查询员工姓名，工资，工资等级\n\t\t\t/*\n\t\t\t\t分析：\n\t\t\t\t\t1.员工姓名，工资 emp  工资等级 salarygrade\n\t\t\t\t\t2.条件 emp.salary >= salarygrade.losalary and emp.salary <= salarygrade.hisalary\n\t\t\t\t\t\temp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary\n\t\t\t*/\n\t\t\tSELECT \n\t\t\t\tt1.ename ,\n\t\t\t\tt1.`salary`,\n\t\t\t\tt2.*\n\t\t\tFROM emp t1, salarygrade t2\n\t\t\tWHERE t1.`salary` BETWEEN t2.`losalary` AND t2.`hisalary`;\n")])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t-- 4.查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级\n\t\t\t/*\n\t\t\t\t分析：\n\t\t\t\t\t1. 员工姓名，工资 emp ， 职务名称，职务描述 job 部门名称，部门位置，dept  工资等级 salarygrade\n\t\t\t\t\t2. 条件： emp.job_id = job.id and emp.dept_id = dept.id and emp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary\n\t\t\t\t\t\t\n\t\t\t*/\n\t\t\tSELECT \n\t\t\t\tt1.`ename`,\n\t\t\t\tt1.`salary`,\n\t\t\t\tt2.`jname`,\n\t\t\t\tt2.`description`,\n\t\t\t\tt3.`dname`,\n\t\t\t\tt3.`loc`,\n\t\t\t\tt4.`grade`\n\t\t\tFROM \n\t\t\t\temp t1,job t2,dept t3,salarygrade t4\n\t\t\tWHERE \n\t\t\t\tt1.`job_id` = t2.`id` \n\t\t\t\tAND t1.`dept_id` = t3.`id`\n\t\t\t\tAND t1.`salary` BETWEEN t4.`losalary` AND t4.`hisalary`;\n")])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t-- 5.查询出部门编号、部门名称、部门位置、部门人数\n\t\t\t\n\t\t\t/*\n\t\t\t\t分析：\n\t\t\t\t\t1.部门编号、部门名称、部门位置 dept 表。 部门人数 emp表\n\t\t\t\t\t2.使用分组查询。按照emp.dept_id完成分组，查询count(id)\n\t\t\t\t\t3.使用子查询将第2步的查询结果和dept表进行关联查询\n\t\t\t\t\t\n\t\t\t*/\n\t\t\tSELECT \n\t\t\t\tt1.`id`,t1.`dname`,t1.`loc` , t2.total\n\t\t\tFROM \n\t\t\t\tdept t1,\n\t\t\t\t(SELECT\n\t\t\t\t\tdept_id,COUNT(id) total\n\t\t\t\tFROM \n\t\t\t\t\temp\n\t\t\t\tGROUP BY dept_id) t2\n\t\t\tWHERE t1.`id` = t2.dept_id;\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t-- 6.查询所有员工的姓名及其直接上级的姓名,没有领导的员工也需要查询\n\t\t\t\n\t\t\t/*\n\t\t\t\t分析：\n\t\t\t\t\t1.姓名 emp， 直接上级的姓名 emp\n\t\t\t\t\t\t* emp表的id 和 mgr 是自关联\n\t\t\t\t\t2.条件 emp.id = emp.mgr\n\t\t\t\t\t3.查询左表的所有数据，和 交集数据\n\t\t\t\t\t\t* 使用左外连接查询\n\t\t\t\t\n\t\t\t*/\n\t\t\t/*\n\t\t\tselect\n\t\t\t\tt1.ename,\n\t\t\t\tt1.mgr,\n\t\t\t\tt2.`id`,\n\t\t\t\tt2.ename\n\t\t\tfrom emp t1, emp t2\n\t\t\twhere t1.mgr = t2.`id`;\n\t\t\t\n\t\t\t*/\n\t\t\t\n\t\t\tSELECT \n\t\t\t\tt1.ename,\n\t\t\t\tt1.mgr,\n\t\t\t\tt2.`id`,\n\t\t\t\tt2.`ename`\n\t\t\tFROM emp t1\n\t\t\tLEFT JOIN emp t2\n\t\t\tON t1.`mgr` = t2.`id`;\n")])])]),e("h3",{attrs:{id:"事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 事务的基本介绍\n\t1. 概念：\n\t\t*  如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。\n\t\t\n\t2. 操作：\n\t\t1. 开启事务： start transaction;\n\t\t2. 回滚：rollback;\n\t\t3. 提交：commit;\n\t3. 例子：\n\t\tCREATE TABLE account (\n\t\t\tid INT PRIMARY KEY AUTO_INCREMENT,\n\t\t\tNAME VARCHAR(10),\n\t\t\tbalance DOUBLE\n\t\t);\n\t\t-- 添加数据\n\t\tINSERT INTO account (NAME, balance) VALUES ('zhangsan', 1000), ('lisi', 1000);\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\tSELECT * FROM account;\n\t\tUPDATE account SET balance = 1000;\n\t\t-- 张三给李四转账 500 元\n\t\t\n\t\t-- 0. 开启事务\n\t\tSTART TRANSACTION;\n\t\t-- 1. 张三账户 -500\n\t\t\n\t\tUPDATE account SET balance = balance - 500 WHERE NAME = 'zhangsan';\n\t\t-- 2. 李四账户 +500\n\t\t-- 出错了...\n\t\tUPDATE account SET balance = balance + 500 WHERE NAME = 'lisi';\n\t\t\n\t\t-- 发现执行没有问题，提交事务\n\t\tCOMMIT;\n\t\t\n\t\t-- 发现出问题了，回滚事务\n\t\tROLLBACK;\n\t4. MySQL数据库中事务默认自动提交\n\t\t\n\t\t* 事务提交的两种方式：\n\t\t\t* 自动提交：\n\t\t\t\t* mysql就是自动提交的\n\t\t\t\t* 一条DML(增删改)语句会自动提交一次事务。\n\t\t\t* 手动提交：\n\t\t\t\t* Oracle 数据库默认是手动提交事务\n\t\t\t\t* 需要先开启事务，再提交\n\t\t* 修改事务的默认提交方式：\n\t\t\t* 查看事务的默认提交方式：SELECT @@autocommit; -- 1 代表自动提交  0 代表手动提交\n\t\t\t* 修改默认提交方式： set @@autocommit = 0;\n\n\n2. 事务的四大特征：\n\t1. 原子性：是不可分割的最小操作单位，要么同时成功，要么同时失败。\n\t2. 持久性：当事务提交或回滚后，数据库会持久化的保存数据。\n\t3. 隔离性：多个事务之间。相互独立。\n\t4. 一致性：事务操作前后，数据总量不变\n3. 事务的隔离级别（了解）\n\t* 概念：多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。\n\t* 存在问题：\n\t\t1. 脏读：一个事务，读取到另一个事务中没有提交的数据\n\t\t2. 不可重复读(虚读)：在同一个事务中，两次读取到的数据不一样。\n\t\t3. 幻读：一个事务操作(DML)数据表中所有记录，另一个事务添加了一条数据，则第一个事务查询不到自己的修改。\n\t* 隔离级别：\n\t\t1. read uncommitted：读未提交\n\t\t\t* 产生的问题：脏读、不可重复读、幻读\n\t\t2. read committed：读已提交 （Oracle）\n\t\t\t* 产生的问题：不可重复读、幻读\n\t\t3. repeatable read：可重复读 （MySQL默认）\n\t\t\t* 产生的问题：幻读\n\t\t4. serializable：串行化\n\t\t\t* 可以解决所有的问题\n\n\t\t* 注意：隔离级别从小到大安全性越来越高，但是效率越来越低\n\t\t* 数据库查询隔离级别：\n\t\t\t* select @@tx_isolation;\n\t\t* 数据库设置隔离级别：\n\t\t\t* set global transaction isolation level  级别字符串;\n\n\t* 演示：\n\t\tset global transaction isolation level read uncommitted;\n\t\tstart transaction;\n\t\t-- 转账操作\n\t\tupdate account set balance = balance - 500 where id = 1;\n\t\tupdate account set balance = balance + 500 where id = 2;\n")])])]),e("h3",{attrs:{id:"dcl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dcl"}},[t._v("#")]),t._v(" DCL：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* SQL分类：\n\t1. DDL：操作数据库和表\n\t2. DML：增删改表中数据\n\t3. DQL：查询表中数据\n\t4. DCL：管理用户，授权\n\n* DBA：数据库管理员\n\n* DCL：管理用户，授权\n\t1. 管理用户\n\t\t1. 添加用户：\n\t\t\t* 语法：CREATE USER '用户名'@'主机名' IDENTIFIED BY '密码';\n\t\t2. 删除用户：\n\t\t\t* 语法：DROP USER '用户名'@'主机名';\n\t\t3. 修改用户密码：\n\t\t\t\n\t\t\tUPDATE USER SET PASSWORD = PASSWORD('新密码') WHERE USER = '用户名';\n\t\t\tUPDATE USER SET PASSWORD = PASSWORD('abc') WHERE USER = 'lisi';\n\t\t\t\n\t\t\tSET PASSWORD FOR '用户名'@'主机名' = PASSWORD('新密码');\n\t\t\tSET PASSWORD FOR 'root'@'localhost' = PASSWORD('123');\n\n\t\t\t* mysql中忘记了root用户的密码？\n\t\t\t\t1. cmd -- > net stop mysql 停止mysql服务\n\t\t\t\t\t* 需要管理员运行该cmd\n\n\t\t\t\t2. 使用无验证方式启动mysql服务： mysqld --skip-grant-tables\n\t\t\t\t3. 打开新的cmd窗口,直接输入mysql命令，敲回车。就可以登录成功\n\t\t\t\t4. use mysql;\n\t\t\t\t5. update user set password = password('你的新密码') where user = 'root';\n\t\t\t\t6. 关闭两个窗口\n\t\t\t\t7. 打开任务管理器，手动结束mysqld.exe 的进程\n\t\t\t\t8. 启动mysql服务\n\t\t\t\t9. 使用新密码登录。\n\t\t4. 查询用户：\n\t\t\t-- 1. 切换到mysql数据库\n\t\t\tUSE myql;\n\t\t\t-- 2. 查询user表\n\t\t\tSELECT * FROM USER;\n\t\t\t\n\t\t\t* 通配符： % 表示可以在任意主机使用用户登录数据库\n\n\t2. 权限管理：\n\t\t1. 查询权限：\n\t\t\t-- 查询权限\n\t\t\tSHOW GRANTS FOR '用户名'@'主机名';\n\t\t\tSHOW GRANTS FOR 'lisi'@'%';\n\n\t\t2. 授予权限：\n\t\t\t-- 授予权限\n\t\t\tgrant 权限列表 on 数据库名.表名 to '用户名'@'主机名';\n\t\t\t-- 给张三用户授予所有权限，在任意数据库任意表上\n\t\t\t\n\t\t\tGRANT ALL ON *.* TO 'zhangsan'@'localhost';\n\t\t3. 撤销权限：\n\t\t\t-- 撤销权限：\n\t\t\trevoke 权限列表 on 数据库名.表名 from '用户名'@'主机名';\n\t\t\tREVOKE UPDATE ON db3.`account` FROM 'lisi'@'%';\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"jdbc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jdbc"}},[t._v("#")]),t._v(" JDBC")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. JDBC基本概念\n2. 快速入门\n3. 对JDBC中各个接口和类详解\n")])])]),e("h3",{attrs:{id:"jdbc-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jdbc-2"}},[t._v("#")]),t._v(" JDBC：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念：Java DataBase Connectivity  Java 数据库连接， Java语言操作数据库\n\t* JDBC本质：其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口。各个数据库厂商去实现这套接口，提供数据库驱动jar包。我们可以使用这套接口（JDBC）编程，真正执行的代码是驱动jar包中的实现类。\n\n2. 快速入门：\n\t* 步骤：\n\t\t1. 导入驱动jar包 mysql-connector-java-5.1.37-bin.jar\n\t\t\t1.复制mysql-connector-java-5.1.37-bin.jar到项目的libs目录下\n\t\t\t2.右键--\x3eAdd As Library\n\t\t2. 注册驱动\n\t\t3. 获取数据库连接对象 Connection\n\t\t4. 定义sql\n\t\t5. 获取执行sql语句的对象 Statement\n\t\t6. 执行sql，接受返回结果\n\t\t7. 处理结果\n\t\t8. 释放资源\n\n\t* 代码实现：\n\t  \t//1. 导入驱动jar包\n        //2.注册驱动\n        Class.forName("com.mysql.jdbc.Driver");\n        //3.获取数据库连接对象\n        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db3", "root", "root");\n        //4.定义sql语句\n        String sql = "update account set balance = 500 where id = 1";\n        //5.获取执行sql的对象 Statement\n        Statement stmt = conn.createStatement();\n        //6.执行sql\n        int count = stmt.executeUpdate(sql);\n        //7.处理结果\n        System.out.println(count);\n        //8.释放资源\n        stmt.close();\n        conn.close();\n\n3. 详解各个对象：\n\t1. DriverManager：驱动管理对象\n\t\t* 功能：\n\t\t\t1. 注册驱动：告诉程序该使用哪一个数据库驱动jar\n\t\t\t\tstatic void registerDriver(Driver driver) :注册与给定的驱动程序 DriverManager 。 \n\t\t\t\t写代码使用：  Class.forName("com.mysql.jdbc.Driver");\n\t\t\t\t通过查看源码发现：在com.mysql.jdbc.Driver类中存在静态代码块\n\t\t\t\t static {\n\t\t\t\t        try {\n\t\t\t\t            java.sql.DriverManager.registerDriver(new Driver());\n\t\t\t\t        } catch (SQLException E) {\n\t\t\t\t            throw new RuntimeException("Can\'t register driver!");\n\t\t\t\t        }\n\t\t\t\t\t}\n\n\t\t\t\t注意：mysql5之后的驱动jar包可以省略注册驱动的步骤。\n\t\t\t2. 获取数据库连接：\n\t\t\t\t* 方法：static Connection getConnection(String url, String user, String password) \n\t\t\t\t* 参数：\n\t\t\t\t\t* url：指定连接的路径\n\t\t\t\t\t\t* 语法：jdbc:mysql://ip地址(域名):端口号/数据库名称\n\t\t\t\t\t\t* 例子：jdbc:mysql://localhost:3306/db3\n\t\t\t\t\t\t* 细节：如果连接的是本机mysql服务器，并且mysql服务默认端口是3306，则url可以简写为：jdbc:mysql:///数据库名称\n\t\t\t\t\t* user：用户名\n\t\t\t\t\t* password：密码 \n\t2. Connection：数据库连接对象\n\t\t1. 功能：\n\t\t\t1. 获取执行sql 的对象\n\t\t\t\t* Statement createStatement()\n\t\t\t\t* PreparedStatement prepareStatement(String sql)  \n\t\t\t2. 管理事务：\n\t\t\t\t* 开启事务：setAutoCommit(boolean autoCommit) ：调用该方法设置参数为false，即开启事务\n\t\t\t\t* 提交事务：commit() \n\t\t\t\t* 回滚事务：rollback() \n\t3. Statement：执行sql的对象\n\t\t1. 执行sql\n\t\t\t1. boolean execute(String sql) ：可以执行任意的sql 了解 \n\t\t\t2. int executeUpdate(String sql) ：执行DML（insert、update、delete）语句、DDL(create，alter、drop)语句\n\t\t\t\t* 返回值：影响的行数，可以通过这个影响的行数判断DML语句是否执行成功 返回值>0的则执行成功，反之，则失败。\n\t\t\t3. ResultSet executeQuery(String sql)  ：执行DQL（select)语句\n\t\t2. 练习：\n\t\t\t1. account表 添加一条记录\n\t\t\t2. account表 修改记录\n\t\t\t3. account表 删除一条记录\n\n\t\t\t代码：\n\t\t\t\tStatement stmt = null;\n\t\t        Connection conn = null;\n\t\t        try {\n\t\t            //1. 注册驱动\n\t\t            Class.forName("com.mysql.jdbc.Driver");\n\t\t            //2. 定义sql\n\t\t            String sql = "insert into account values(null,\'王五\',3000)";\n\t\t            //3.获取Connection对象\n\t\t            conn = DriverManager.getConnection("jdbc:mysql:///db3", "root", "root");\n\t\t            //4.获取执行sql的对象 Statement\n\t\t            stmt = conn.createStatement();\n\t\t            //5.执行sql\n\t\t            int count = stmt.executeUpdate(sql);//影响的行数\n\t\t            //6.处理结果\n\t\t            System.out.println(count);\n\t\t            if(count > 0){\n\t\t                System.out.println("添加成功！");\n\t\t            }else{\n\t\t                System.out.println("添加失败！");\n\t\t            }\n\t\t\n\t\t        } catch (ClassNotFoundException e) {\n\t\t            e.printStackTrace();\n\t\t        } catch (SQLException e) {\n\t\t            e.printStackTrace();\n\t\t        }finally {\n\t\t            //stmt.close();\n\t\t            //7. 释放资源\n\t\t            //避免空指针异常\n\t\t            if(stmt != null){\n\t\t                try {\n\t\t                    stmt.close();\n\t\t                } catch (SQLException e) {\n\t\t                    e.printStackTrace();\n\t\t                }\n\t\t            }\n\t\t\n\t\t            if(conn != null){\n\t\t                try {\n\t\t                    conn.close();\n\t\t                } catch (SQLException e) {\n\t\t                    e.printStackTrace();\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t\t\n\t4. ResultSet：结果集对象,封装查询结果\n\t\t* boolean next(): 游标向下移动一行，判断当前行是否是最后一行末尾(是否有数据)，如果是，则返回false，如果不是则返回true\n\t\t* getXxx(参数):获取数据\n\t\t\t* Xxx：代表数据类型   如： int getInt() ,\tString getString()\n\t\t\t* 参数：\n\t\t\t\t1. int：代表列的编号,从1开始   如： getString(1)\n\t\t\t\t2. String：代表列名称。 如： getDouble("balance")\n\t\t\n\t\t* 注意：\n\t\t\t* 使用步骤：\n\t\t\t\t1. 游标向下移动一行\n\t\t\t\t2. 判断是否有数据\n\t\t\t\t3. 获取数据\n\n\t\t\t   //循环判断游标是否是最后一行末尾。\n\t            while(rs.next()){\n\t                //获取数据\n\t                //6.2 获取数据\n\t                int id = rs.getInt(1);\n\t                String name = rs.getString("name");\n\t                double balance = rs.getDouble(3);\n\t\n\t                System.out.println(id + "---" + name + "---" + balance);\n\t            }\n\n\t\t* 练习：\n\t\t\t* 定义一个方法，查询emp表的数据将其封装为对象，然后装载集合，返回。\n\t\t\t\t1. 定义Emp类\n\t\t\t\t2. 定义方法 public List<Emp> findAll(){}\n\t\t\t\t3. 实现方法 select * from emp;\n\t\t\t\t\t\n\t5. PreparedStatement：执行sql的对象\n\t\t1. SQL注入问题：在拼接sql时，有一些sql的特殊关键字参与字符串的拼接。会造成安全性问题\n\t\t\t1. 输入用户随便，输入密码：a\' or \'a\' = \'a\n\t\t\t2. sql：select * from user where username = \'fhdsjkf\' and password = \'a\' or \'a\' = \'a\' \n\n\t\t2. 解决sql注入问题：使用PreparedStatement对象来解决\n\t\t3. 预编译的SQL：参数使用?作为占位符\n\t\t4. 步骤：\n\t\t\t1. 导入驱动jar包 mysql-connector-java-5.1.37-bin.jar\n\t\t\t2. 注册驱动\n\t\t\t3. 获取数据库连接对象 Connection\n\t\t\t4. 定义sql\n\t\t\t\t* 注意：sql的参数使用？作为占位符。 如：select * from user where username = ? and password = ?;\n\t\t\t5. 获取执行sql语句的对象 PreparedStatement  Connection.prepareStatement(String sql) \n\t\t\t6. 给？赋值：\n\t\t\t\t* 方法： setXxx(参数1,参数2)\n\t\t\t\t\t* 参数1：？的位置编号 从1 开始\n\t\t\t\t\t* 参数2：？的值\n\t\t\t7. 执行sql，接受返回结果，不需要传递sql语句\n\t\t\t8. 处理结果\n\t\t\t9. 释放资源\n\n\t\t5. 注意：后期都会使用PreparedStatement来完成增删改查的所有操作\n\t\t\t1. 可以防止SQL注入\n\t\t\t2. 效率更高\n')])])]),e("h3",{attrs:{id:"抽取jdbc工具类-jdbcutils"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#抽取jdbc工具类-jdbcutils"}},[t._v("#")]),t._v(" 抽取JDBC工具类 ： JDBCUtils")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 目的：简化书写\n* 分析：\n\t1. 注册驱动也抽取\n\t2. 抽取一个方法获取连接对象\n\t\t* 需求：不想传递参数（麻烦），还得保证工具类的通用性。\n\t\t* 解决：配置文件\n\t\t\tjdbc.properties\n\t\t\t\turl=\n\t\t\t\tuser=\n\t\t\t\tpassword=\n\n\n\t3. 抽取一个方法释放资源\n\n* 代码实现：\n\tpublic class JDBCUtils {\n    private static String url;\n    private static String user;\n    private static String password;\n    private static String driver;\n    /**\n     * 文件的读取，只需要读取一次即可拿到这些值。使用静态代码块\n     */\n    static{\n        //读取资源文件，获取值。\n\n        try {\n            //1. 创建Properties集合类。\n            Properties pro = new Properties();\n\n            //获取src路径下的文件的方式---\x3eClassLoader 类加载器\n            ClassLoader classLoader = JDBCUtils.class.getClassLoader();\n            URL res  = classLoader.getResource("jdbc.properties");\n            String path = res.getPath();\n            System.out.println(path);///D:/IdeaProjects/itcast/out/production/day04_jdbc/jdbc.properties\n            //2. 加载文件\n           // pro.load(new FileReader("D:\\\\IdeaProjects\\\\itcast\\\\day04_jdbc\\\\src\\\\jdbc.properties"));\n            pro.load(new FileReader(path));\n\n            //3. 获取数据，赋值\n            url = pro.getProperty("url");\n            user = pro.getProperty("user");\n            password = pro.getProperty("password");\n            driver = pro.getProperty("driver");\n            //4. 注册驱动\n            Class.forName(driver);\n        } catch (IOException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("    /**\n     * 获取连接\n     * @return 连接对象\n     */\n    public static Connection getConnection() throws SQLException {\n\n        return DriverManager.getConnection(url, user, password);\n    }\n\n    /**\n     * 释放资源\n     * @param stmt\n     * @param conn\n     */\n    public static void close(Statement stmt,Connection conn){\n        if( stmt != null){\n            try {\n                stmt.close();\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n        }\n\n        if( conn != null){\n            try {\n                conn.close();\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('    /**\n     * 释放资源\n     * @param stmt\n     * @param conn\n     */\n    public static void close(ResultSet rs,Statement stmt, Connection conn){\n        if( rs != null){\n            try {\n                rs.close();\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n        }\n\n        if( stmt != null){\n            try {\n                stmt.close();\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n        }\n\n        if( conn != null){\n            try {\n                conn.close();\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n}\n\n* 练习：\n\t* 需求：\n\t\t1. 通过键盘录入用户名和密码\n\t\t2. 判断用户是否登录成功\n\t\t\t* select * from user where username = "" and password = "";\n\t\t\t* 如果这个sql有查询结果，则成功，反之，则失败\n\n\t* 步骤：\n\t\t1. 创建数据库表 user\n\t\t\tCREATE TABLE USER(\n\t\t\t\tid INT PRIMARY KEY AUTO_INCREMENT,\n\t\t\t\tusername VARCHAR(32),\n\t\t\t\tPASSWORD VARCHAR(32)\n\t\t\t\n\t\t\t);\n\n\t\t\tINSERT INTO USER VALUES(NULL,\'zhangsan\',\'123\');\n\t\t\tINSERT INTO USER VALUES(NULL,\'lisi\',\'234\');\n\n\t\t2. 代码实现：\n\t\t\tpublic class JDBCDemo9 {\n\n\t\t\t    public static void main(String[] args) {\n\t\t\t        //1.键盘录入，接受用户名和密码\n\t\t\t        Scanner sc = new Scanner(System.in);\n\t\t\t        System.out.println("请输入用户名：");\n\t\t\t        String username = sc.nextLine();\n\t\t\t        System.out.println("请输入密码：");\n\t\t\t        String password = sc.nextLine();\n\t\t\t        //2.调用方法\n\t\t\t        boolean flag = new JDBCDemo9().login(username, password);\n\t\t\t        //3.判断结果，输出不同语句\n\t\t\t        if(flag){\n\t\t\t            //登录成功\n\t\t\t            System.out.println("登录成功！");\n\t\t\t        }else{\n\t\t\t            System.out.println("用户名或密码错误！");\n\t\t\t        }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t    }\n")])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t\t    /**\n\t\t\t     * 登录方法\n\t\t\t     */\n\t\t\t    public boolean login(String username ,String password){\n\t\t\t        if(username == null || password == null){\n\t\t\t            return false;\n\t\t\t        }\n\t\t\t        //连接数据库判断是否登录成功\n\t\t\t        Connection conn = null;\n\t\t\t        Statement stmt =  null;\n\t\t\t        ResultSet rs = null;\n\t\t\t        //1.获取连接\n\t\t\t        try {\n\t\t\t            conn =  JDBCUtils.getConnection();\n\t\t\t            //2.定义sql\n\t\t\t            String sql = "select * from user where username = \'"+username+"\' and password = \'"+password+"\' ";\n\t\t\t            //3.获取执行sql的对象\n\t\t\t            stmt = conn.createStatement();\n\t\t\t            //4.执行查询\n\t\t\t            rs = stmt.executeQuery(sql);\n\t\t\t            //5.判断\n\t\t\t           /* if(rs.next()){//如果有下一行，则返回true\n\t\t\t                return true;\n\t\t\t            }else{\n\t\t\t                return false;\n\t\t\t            }*/\n\t\t\t           return rs.next();//如果有下一行，则返回true\n\t\t\t\n\t\t\t        } catch (SQLException e) {\n\t\t\t            e.printStackTrace();\n\t\t\t        }finally {\n\t\t\t            JDBCUtils.close(rs,stmt,conn);\n\t\t\t        }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t        return false;\n\t\t\t    }\n\t\t\t}\n")])])]),e("h3",{attrs:{id:"jdbc控制事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jdbc控制事务"}},[t._v("#")]),t._v(" JDBC控制事务：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 事务：一个包含多个步骤的业务操作。如果这个业务操作被事务管理，则这多个步骤要么同时成功，要么同时失败。\n2. 操作：\n\t1. 开启事务\n\t2. 提交事务\n\t3. 回滚事务\n3. 使用Connection对象来管理事务\n\t* 开启事务：setAutoCommit(boolean autoCommit) ：调用该方法设置参数为false，即开启事务\n\t\t* 在执行sql之前开启事务\n\t* 提交事务：commit() \n\t\t* 当所有sql都执行完提交事务\n\t* 回滚事务：rollback() \n\t\t* 在catch中回滚事务\n\n4. 代码：\n\tpublic class JDBCDemo10 {\n\n\t    public static void main(String[] args) {\n\t        Connection conn = null;\n\t        PreparedStatement pstmt1 = null;\n\t        PreparedStatement pstmt2 = null;\n\t\n\t        try {\n\t            //1.获取连接\n\t            conn = JDBCUtils.getConnection();\n\t            //开启事务\n\t            conn.setAutoCommit(false);\n\t\n\t            //2.定义sql\n\t            //2.1 张三 - 500\n\t            String sql1 = "update account set balance = balance - ? where id = ?";\n\t            //2.2 李四 + 500\n\t            String sql2 = "update account set balance = balance + ? where id = ?";\n\t            //3.获取执行sql对象\n\t            pstmt1 = conn.prepareStatement(sql1);\n\t            pstmt2 = conn.prepareStatement(sql2);\n\t            //4. 设置参数\n\t            pstmt1.setDouble(1,500);\n\t            pstmt1.setInt(2,1);\n\t\n\t            pstmt2.setDouble(1,500);\n\t            pstmt2.setInt(2,2);\n\t            //5.执行sql\n\t            pstmt1.executeUpdate();\n\t            // 手动制造异常\n\t            int i = 3/0;\n\t\n\t            pstmt2.executeUpdate();\n\t            //提交事务\n\t            conn.commit();\n\t        } catch (Exception e) {\n\t            //事务回滚\n\t            try {\n\t                if(conn != null) {\n\t                    conn.rollback();\n\t                }\n\t            } catch (SQLException e1) {\n\t                e1.printStackTrace();\n\t            }\n\t            e.printStackTrace();\n\t        }finally {\n\t            JDBCUtils.close(pstmt1,conn);\n\t            JDBCUtils.close(pstmt2,null);\n\t        }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t    }\n\t\n\t}\n")])])]),e("p",[t._v("​")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"jdbc连接池-jdbctemplate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jdbc连接池-jdbctemplate"}},[t._v("#")]),t._v(" JDBC连接池&JDBCTemplate")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 数据库连接池\n\n2. Spring JDBC : JDBC Template\n")])])]),e("h3",{attrs:{id:"数据库连接池"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库连接池"}},[t._v("#")]),t._v(" 数据库连接池")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念：其实就是一个容器(集合)，存放数据库连接的容器。\n\t    当系统初始化好后，容器被创建，容器中会申请一些连接对象，当用户来访问数据库时，从容器中获取连接对象，用户访问完之后，会将连接对象归还给容器。\n\n2. 好处：\n\t1. 节约资源\n\t2. 用户访问高效\n\n3. 实现：\n\t1. 标准接口：DataSource   javax.sql包下的\n\t\t1. 方法：\n\t\t\t* 获取连接：getConnection()\n\t\t\t* 归还连接：Connection.close()。如果连接对象Connection是从连接池中获取的，那么调用Connection.close()方法，则不会再关闭连接了。而是归还连接\n\n\t2. 一般我们不去实现它，有数据库厂商来实现\n\t\t1. C3P0：数据库连接池技术\n\t\t2. Druid：数据库连接池实现技术，由阿里巴巴提供的\n\n\n4. C3P0：数据库连接池技术\n\t* 步骤：\n\t\t1. 导入jar包 (两个) c3p0-0.9.5.2.jar mchange-commons-java-0.2.12.jar ，\n\t\t\t* 不要忘记导入数据库驱动jar包\n\t\t2. 定义配置文件：\n\t\t\t* 名称： c3p0.properties 或者 c3p0-config.xml\n\t\t\t* 路径：直接将文件放在src目录下即可。\n\n\t\t3. 创建核心对象 数据库连接池对象 ComboPooledDataSource\n\t\t4. 获取连接： getConnection\n\t* 代码：\n\t\t //1.创建数据库连接池对象\n        DataSource ds  = new ComboPooledDataSource();\n        //2. 获取连接对象\n        Connection conn = ds.getConnection();\n5. Druid：数据库连接池实现技术，由阿里巴巴提供的\n\t1. 步骤：\n\t\t1. 导入jar包 druid-1.0.9.jar\n\t\t2. 定义配置文件：\n\t\t\t* 是properties形式的\n\t\t\t* 可以叫任意名称，可以放在任意目录下\n\t\t3. 加载配置文件。Properties\n\t\t4. 获取数据库连接池对象：通过工厂来来获取  DruidDataSourceFactory\n\t\t5. 获取连接：getConnection\n\t* 代码：\n\t\t //3.加载配置文件\n        Properties pro = new Properties();\n        InputStream is = DruidDemo.class.getClassLoader().getResourceAsStream("druid.properties");\n        pro.load(is);\n        //4.获取连接池对象\n        DataSource ds = DruidDataSourceFactory.createDataSource(pro);\n        //5.获取连接\n        Connection conn = ds.getConnection();\n\t2. 定义工具类\n\t\t1. 定义一个类 JDBCUtils\n\t\t2. 提供静态代码块加载配置文件，初始化连接池对象\n\t\t3. 提供方法\n\t\t\t1. 获取连接方法：通过数据库连接池获取连接\n\t\t\t2. 释放资源\n\t\t\t3. 获取连接池的方法\n\n\n\t* 代码：\n\t\tpublic class JDBCUtils {\n\n\t\t    //1.定义成员变量 DataSource\n\t\t    private static DataSource ds ;\n\t\t\n\t\t    static{\n\t\t        try {\n\t\t            //1.加载配置文件\n\t\t            Properties pro = new Properties();\n\t\t            pro.load(JDBCUtils.class.getClassLoader().getResourceAsStream("druid.properties"));\n\t\t            //2.获取DataSource\n\t\t            ds = DruidDataSourceFactory.createDataSource(pro);\n\t\t        } catch (IOException e) {\n\t\t            e.printStackTrace();\n\t\t        } catch (Exception e) {\n\t\t            e.printStackTrace();\n\t\t        }\n\t\t    }\n\t\t\n\t\t    /**\n\t\t     * 获取连接\n\t\t     */\n\t\t    public static Connection getConnection() throws SQLException {\n\t\t        return ds.getConnection();\n\t\t    }\n\t\t\n\t\t    /**\n\t\t     * 释放资源\n\t\t     */\n\t\t    public static void close(Statement stmt,Connection conn){\n\t\t       /* if(stmt != null){\n\t\t            try {\n\t\t                stmt.close();\n\t\t            } catch (SQLException e) {\n\t\t                e.printStackTrace();\n\t\t            }\n\t\t        }\n\t\t\n\t\t        if(conn != null){\n\t\t            try {\n\t\t                conn.close();//归还连接\n\t\t            } catch (SQLException e) {\n\t\t                e.printStackTrace();\n\t\t            }\n\t\t        }*/\n\t\t\n\t\t       close(null,stmt,conn);\n\t\t    }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t    public static void close(ResultSet rs , Statement stmt, Connection conn){\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t        if(rs != null){\n\t\t            try {\n\t\t                rs.close();\n\t\t            } catch (SQLException e) {\n\t\t                e.printStackTrace();\n\t\t            }\n\t\t        }\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t        if(stmt != null){\n\t\t            try {\n\t\t                stmt.close();\n\t\t            } catch (SQLException e) {\n\t\t                e.printStackTrace();\n\t\t            }\n\t\t        }\n\t\t\n\t\t        if(conn != null){\n\t\t            try {\n\t\t                conn.close();//归还连接\n\t\t            } catch (SQLException e) {\n\t\t                e.printStackTrace();\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t\n\t\t    /**\n\t\t     * 获取连接池方法\n\t\t     */\n\t\t\n\t\t    public static DataSource getDataSource(){\n\t\t        return  ds;\n\t\t    }\n\t\t\n\t\t}\n")])])]),e("h3",{attrs:{id:"spring-jdbc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-jdbc"}},[t._v("#")]),t._v(" Spring JDBC")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* Spring框架对JDBC的简单封装。提供了一个JDBCTemplate对象简化JDBC的开发\n* 步骤：\n\t1. 导入jar包\n\t2. 创建JdbcTemplate对象。依赖于数据源DataSource\n\t\t* JdbcTemplate template = new JdbcTemplate(ds);\n\n\t3. 调用JdbcTemplate的方法来完成CRUD的操作\n\t\t* update():执行DML语句。增、删、改语句\n\t\t* queryForMap():查询结果将结果集封装为map集合，将列名作为key，将值作为value 将这条记录封装为一个map集合\n\t\t\t* 注意：这个方法查询的结果集长度只能是1\n\t\t* queryForList():查询结果将结果集封装为list集合\n\t\t\t* 注意：将每一条记录封装为一个Map集合，再将Map集合装载到List集合中\n\t\t* query():查询结果，将结果封装为JavaBean对象\n\t\t\t* query的参数：RowMapper\n\t\t\t\t* 一般我们使用BeanPropertyRowMapper实现类。可以完成数据到JavaBean的自动封装\n\t\t\t\t* new BeanPropertyRowMapper<类型>(类型.class)\n\t\t* queryForObject：查询结果，将结果封装为对象\n\t\t\t* 一般用于聚合函数的查询\n\n\t4. 练习：\n\t\t* 需求：\n\t\t\t1. 修改1号数据的 salary 为 10000\n\t\t\t2. 添加一条记录\n\t\t\t3. 删除刚才添加的记录\n\t\t\t4. 查询id为1的记录，将其封装为Map集合\n\t\t\t5. 查询所有记录，将其封装为List\n\t\t\t6. 查询所有记录，将其封装为Emp对象的List集合\n\t\t\t7. 查询总记录数\n\n\t\t* 代码：\n\t\t\t\n\t\t\timport cn.itcast.domain.Emp;\n\t\t\timport cn.itcast.utils.JDBCUtils;\n\t\t\timport org.junit.Test;\n\t\t\timport org.springframework.jdbc.core.BeanPropertyRowMapper;\n\t\t\timport org.springframework.jdbc.core.JdbcTemplate;\n\t\t\timport org.springframework.jdbc.core.RowMapper;\n\t\t\t\n\t\t\timport java.sql.Date;\n\t\t\timport java.sql.ResultSet;\n\t\t\timport java.sql.SQLException;\n\t\t\timport java.util.List;\n\t\t\timport java.util.Map;\n\t\t\t\n\t\t\tpublic class JdbcTemplateDemo2 {\n\t\t\t\n\t\t\t    //Junit单元测试，可以让方法独立执行\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t\t    //1. 获取JDBCTemplate对象\n\t\t\t    private JdbcTemplate template = new JdbcTemplate(JDBCUtils.getDataSource());\n\t\t\t    /**\n\t\t\t     * 1. 修改1号数据的 salary 为 10000\n\t\t\t     */\n\t\t\t    @Test\n\t\t\t    public void test1(){\n\t\t\t\n\t\t\t        //2. 定义sql\n\t\t\t        String sql = "update emp set salary = 10000 where id = 1001";\n\t\t\t        //3. 执行sql\n\t\t\t        int count = template.update(sql);\n\t\t\t        System.out.println(count);\n\t\t\t    }\n\t\t\t\n\t\t\t    /**\n\t\t\t     * 2. 添加一条记录\n\t\t\t     */\n\t\t\t    @Test\n\t\t\t    public void test2(){\n\t\t\t        String sql = "insert into emp(id,ename,dept_id) values(?,?,?)";\n\t\t\t        int count = template.update(sql, 1015, "郭靖", 10);\n\t\t\t        System.out.println(count);\n\t\t\t\n\t\t\t    }\n\t\t\t\n\t\t\t    /**\n\t\t\t     * 3.删除刚才添加的记录\n\t\t\t     */\n\t\t\t    @Test\n\t\t\t    public void test3(){\n\t\t\t        String sql = "delete from emp where id = ?";\n\t\t\t        int count = template.update(sql, 1015);\n\t\t\t        System.out.println(count);\n\t\t\t    }\n\t\t\t\n\t\t\t    /**\n\t\t\t     * 4.查询id为1001的记录，将其封装为Map集合\n\t\t\t     * 注意：这个方法查询的结果集长度只能是1\n\t\t\t     */\n\t\t\t    @Test\n\t\t\t    public void test4(){\n\t\t\t        String sql = "select * from emp where id = ? or id = ?";\n\t\t\t        Map<String, Object> map = template.queryForMap(sql, 1001,1002);\n\t\t\t        System.out.println(map);\n\t\t\t        //{id=1001, ename=孙悟空, job_id=4, mgr=1004, joindate=2000-12-17, salary=10000.00, bonus=null, dept_id=20}\n\t\t\t\n\t\t\t    }\n\t\t\t\n\t\t\t    /**\n\t\t\t     * 5. 查询所有记录，将其封装为List\n\t\t\t     */\n\t\t\t    @Test\n\t\t\t    public void test5(){\n\t\t\t        String sql = "select * from emp";\n\t\t\t        List<Map<String, Object>> list = template.queryForList(sql);\n\t\t\t\n\t\t\t        for (Map<String, Object> stringObjectMap : list) {\n\t\t\t            System.out.println(stringObjectMap);\n\t\t\t        }\n\t\t\t    }\n\t\t\t\n\t\t\t    /**\n\t\t\t     * 6. 查询所有记录，将其封装为Emp对象的List集合\n\t\t\t     */\n\t\t\t\n\t\t\t    @Test\n\t\t\t    public void test6(){\n\t\t\t        String sql = "select * from emp";\n\t\t\t        List<Emp> list = template.query(sql, new RowMapper<Emp>() {\n\t\t\t\n\t\t\t            @Override\n\t\t\t            public Emp mapRow(ResultSet rs, int i) throws SQLException {\n\t\t\t                Emp emp = new Emp();\n\t\t\t                int id = rs.getInt("id");\n\t\t\t                String ename = rs.getString("ename");\n\t\t\t                int job_id = rs.getInt("job_id");\n\t\t\t                int mgr = rs.getInt("mgr");\n\t\t\t                Date joindate = rs.getDate("joindate");\n\t\t\t                double salary = rs.getDouble("salary");\n\t\t\t                double bonus = rs.getDouble("bonus");\n\t\t\t                int dept_id = rs.getInt("dept_id");\n\t\t\t\n\t\t\t                emp.setId(id);\n\t\t\t                emp.setEname(ename);\n\t\t\t                emp.setJob_id(job_id);\n\t\t\t                emp.setMgr(mgr);\n\t\t\t                emp.setJoindate(joindate);\n\t\t\t                emp.setSalary(salary);\n\t\t\t                emp.setBonus(bonus);\n\t\t\t                emp.setDept_id(dept_id);\n\t\t\t\n\t\t\t                return emp;\n\t\t\t            }\n\t\t\t        });\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t\t        for (Emp emp : list) {\n\t\t\t            System.out.println(emp);\n\t\t\t        }\n\t\t\t    }\n\t\t\t\n\t\t\t    /**\n\t\t\t     * 6. 查询所有记录，将其封装为Emp对象的List集合\n\t\t\t     */\n\t\t\t\n\t\t\t    @Test\n\t\t\t    public void test6_2(){\n\t\t\t        String sql = "select * from emp";\n\t\t\t        List<Emp> list = template.query(sql, new BeanPropertyRowMapper<Emp>(Emp.class));\n\t\t\t        for (Emp emp : list) {\n\t\t\t            System.out.println(emp);\n\t\t\t        }\n\t\t\t    }\n\t\t\t\n\t\t\t    /**\n\t\t\t     * 7. 查询总记录数\n\t\t\t     */\n\t\t\t\n\t\t\t    @Test\n\t\t\t    public void test7(){\n\t\t\t        String sql = "select count(id) from emp";\n\t\t\t        Long total = template.queryForObject(sql, Long.class);\n\t\t\t        System.out.println(total);\n\t\t\t    }\n\t\t\t\n\t\t\t}\n')])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"html"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. web概念概述\n2. HTML\n")])])]),e("h3",{attrs:{id:"web概念概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web概念概述"}},[t._v("#")]),t._v(" web概念概述")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* JavaWeb：\n\t* 使用Java语言开发基于互联网的项目\n\n* 软件架构：\n\t1. C/S: Client/Server 客户端/服务器端\n\t\t* 在用户本地有一个客户端程序，在远程有一个服务器端程序\n\t\t* 如：QQ，迅雷...\n\t\t* 优点：\n\t\t\t1. 用户体验好\n\t\t* 缺点：\n\t\t\t1. 开发、安装，部署，维护 麻烦\n\t2. B/S: Browser/Server 浏览器/服务器端\n\t\t* 只需要一个浏览器，用户通过不同的网址(URL)，客户访问不同的服务器端程序\n\t\t* 优点：\n\t\t\t1. 开发、安装，部署，维护 简单\n\t\t* 缺点：\n\t\t\t1. 如果应用过大，用户的体验可能会受到影响\n\t\t\t2. 对硬件要求过高\n\n* B/S架构详解\n\t* 资源分类：\n\t\t1. 静态资源：\n\t\t\t* 使用静态网页开发技术发布的资源。\n\t\t\t* 特点：\n\t\t\t\t* 所有用户访问，得到的结果是一样的。\n\t\t\t\t* 如：文本，图片，音频、视频, HTML,CSS,JavaScript\n\t\t\t\t* 如果用户请求的是静态资源，那么服务器会直接将静态资源发送给浏览器。浏览器中内置了静态资源的解析引擎，可以展示静态资源\n\t\t2. 动态资源：\n\t\t\t* 使用动态网页及时发布的资源。\n\t\t\t* 特点：\n\t\t\t\t* 所有用户访问，得到的结果可能不一样。\n\t\t\t\t* 如：jsp/servlet,php,asp...\n\t\t\t\t* 如果用户请求的是动态资源，那么服务器会执行动态资源，转换为静态资源，再发送给浏览器\n\n\n\t* 我们要学习动态资源，必须先学习静态资源！\n\n\t* 静态资源：\n\t\t* HTML：用于搭建基础网页，展示页面的内容\n\t\t* CSS：用于美化页面，布局页面\n\t\t* JavaScript：控制页面的元素，让页面有一些动态的效果\n")])])]),e("h3",{attrs:{id:"html-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html-2"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念：是最基础的网页开发语言\n\t* Hyper Text Markup Language 超文本标记语言\n\t\t* 超文本:\n\t\t\t* 超文本是用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本.\n\t\t* 标记语言:\n\t\t\t* 由标签构成的语言。<标签名称> 如 html，xml\n\t\t\t* 标记语言不是编程语言\n\n2. 快速入门：\n\t* 语法：\n\t\t1. html文档后缀名 .html 或者 .htm\n\t\t2. 标签分为\n\t\t\t1. 围堵标签：有开始标签和结束标签。如 <html> </html>\n\t\t\t2. 自闭和标签：开始标签和结束标签在一起。如 <br/>\n\n\t\t3. 标签可以嵌套：\n\t\t\t需要正确嵌套，不能你中有我，我中有你\n\t\t\t错误：<a><b></a></b>\n\t\t\t正确：<a><b></b></a>\n\n\t\t4. 在开始标签中可以定义属性。属性是由键值对构成，值需要用引号(单双都可)引起来\n\t\t5. html的标签不区分大小写，但是建议使用小写。\n\n\t* 代码：\n\t\t<html>\n\t\t\n\t\t\t<head>\n\t\t\t\t<title>title</title>\n\t\t\t</head>\n\t\t\t\n\t\t\t<body>\n\t\t\t\t<FONT color=\'red\'>Hello World</font><br/>\n\t\t\t\t\n\t\t\t\t<font color=\'green\'>Hello World</font>\n\t\t\t\n\t\t\t</body>\n\t\n\t\t</html>\n\n3. 标签学习：\n\t1. 文件标签：构成html最基本的标签\n\t\t* html:html文档的根标签\n\t\t* head：头标签。用于指定html文档的一些属性。引入外部的资源\n\t\t* title：标题标签。\n\t\t* body：体标签\n\t\t* <!DOCTYPE html>：html5中定义该文档是html文档\n\t2. 文本标签：和文本有关的标签\n\t\t* 注释：\x3c!-- 注释内容 --\x3e\n\t\t* <h1> to <h6>：标题标签\n\t\t\t* h1~h6:字体大小逐渐递减\n\t\t* <p>：段落标签\n\t\t* <br>：换行标签\n\t\t* <hr>：展示一条水平线\n\t\t\t* 属性：\n\t\t\t\t* color：颜色\n\t\t\t\t* width：宽度\n\t\t\t\t* size：高度\n\t\t\t\t* align：对其方式\n\t\t\t\t\t* center：居中\n\t\t\t\t\t* left：左对齐\n\t\t\t\t\t* right：右对齐\n\t\t* <b>：字体加粗\n\t\t* <i>：字体斜体\n\t\t* <font>:字体标签\n\t\t* <center>:文本居中\n\t\t\t* 属性：\n\t\t\t\t* color：颜色\n\t\t\t\t* size：大小\n\t\t\t\t* face：字体\n\n\t\t* 属性定义：\n\t\t\t* color：\n\t\t\t\t1. 英文单词：red,green,blue\n\t\t\t\t2. rgb(值1，值2，值3)：值的范围：0~255  如  rgb(0,0,255)\n\t\t\t\t3. #值1值2值3：值的范围：00~FF之间。如： #FF00FF\n\t\t\t* width：\n\t\t\t\t1. 数值：width=\'20\' ,数值的单位，默认是 px(像素)\n\t\t\t\t2. 数值%：占比相对于父元素的比例\n\n\t\t* 案例：公司简介\n\t\t\t<!DOCTYPE html>\n\t\t\t<html lang="ch">\n\t\t\t<head>\n\t\t\t    <meta charset="UTF-8">\n\t\t\t    <title>黑马程序员简介</title>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\n\t\t\t<h1>\n\t\t\t    公司简介\n\t\t\t</h1>\n\t\t\t<hr color="#ffd700">\n\t\t\t\n\t\t\t<p>\n\t\t\t<font color="#FF0000">"中关村黑马程序员训练营"</font>是由<b><i>传智播客</i></b>联合中关村软件园、CSDN， 并委托传智播客进行教学实施的软件开发高端培训机构，致力于服务各大软件企业，解决当前软件开发技术飞速发展， 而企业招不到优秀人才的困扰。\n\t\t\t</p>\n\t\t\t\n\t\t\t<p>\n\t\t\t目前，“中关村黑马程序员训练营”已成长为行业“学员质量好、课程内容深、企业满意”的移动开发高端训练基地， 并被评为中关村软件园重点扶持人才企业。\n\t\t\t</p>\n\t\t\t\n\t\t\t<p>\n\t\t\t\n\t\t\t黑马程序员的学员多为大学毕业后，有理想、有梦想，想从事IT行业，而没有环境和机遇改变自己命运的年轻人。 黑马程序员的学员筛选制度，远比现在90%以上的企业招聘流程更为严格。任何一名学员想成功入学“黑马程序员”， 必须经历长达2个月的面试流程，这些流程中不仅包括严格的技术测试、自学能力测试，还包括性格测试、压力测试、 品德测试等等测试。毫不夸张地说，黑马程序员训练营所有学员都是精挑细选出来的。百里挑一的残酷筛选制度确 保学员质量，并降低企业的用人风险。\n\t\t\t中关村黑马程序员训练营不仅着重培养学员的基础理论知识，更注重培养项目实施管理能力，并密切关注技术革新， 不断引入先进的技术，研发更新技术课程，确保学员进入企业后不仅能独立从事开发工作，更能给企业带来新的技术体系和理念。\n\t\t\t</p>\n\t\t\t\n\t\t\t<p>\n\t\t\t\n\t\t\t一直以来，黑马程序员以技术视角关注IT产业发展，以深度分享推进产业技术成长，致力于弘扬技术创新，倡导分享、 开放和协作，努力打造高质量的IT人才服务平台。\n\t\t\t</p>\n\t\t\t\n\t\t\t<hr color="#ffd700">\n\t\t\t\n\t\t\t<font color="gray" size="2">\n\t\t\t    <center>\n\t\t\t        江苏传智播客教育科技股份有限公司<br>\n\t\t\t        版权所有Copyright 2006-2018&copy;, All Rights Reserved 苏ICP备16007882\n\t\t\t    </center>\n\t\t\t</font>\n')])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t\t</body>\n\t\t\t</html>\n\n\t3. 图片标签：\n\t\t* img：展示图片\n\t\t\t* 属性：\n\t\t\t\t* src：指定图片的位置\n\n\t\t* 代码：\n\t\t\t \x3c!--展示一张图片 img--\x3e\n\n\t\t    <img src="image/jingxuan_2.jpg" align="right" alt="古镇" width="500" height="500"/>\n\t\t\n\t\t    \x3c!--\n\t\t        相对路径\n\t\t            * 以.开头的路径\n\t\t                * ./：代表当前目录  ./image/1.jpg\n\t\t                * ../:代表上一级目录\n\t\t     --\x3e\n\t\t\n\t\t    <img src="./image/jiangwai_1.jpg">\n\t\t\n\t\t    <img src="../image/jiangwai_1.jpg">\n\t4. 列表标签：\n\t\t* 有序列表：\n\t\t\t* ol:\n\t\t\t* li:\n\t\t* 无序列表：\n\t\t\t* ul:\n\t\t\t* li:\n\t5. 链接标签：\n\t\t* a:定义一个超链接\n\t\t\t* 属性：\n\t\t\t\t* href：指定访问资源的URL(统一资源定位符)\n\t\t\t\t* target：指定打开资源的方式\n\t\t\t\t\t* _self:默认值，在当前页面打开\n\t\t\t\t\t* _blank：在空白页面打开\n\n\t\t* 代码：\n\t\t\t \x3c!--超链接  a--\x3e\n\n\t\t    <a href="http://www.itcast.cn">点我</a>\n\t\t    <br>\n\t\t\n\t\t    <a href="http://www.itcast.cn" target="_self">点我</a>\n\t\t    <br>\n\t\t    <a href="http://www.itcast.cn" target="_blank">点我</a>\n\t\t\n\t\t    <br>\n\t\t\n\t\t    <a href="./5_列表标签.html">列表标签</a><br>\n\t\t    <a href="mailto:itcast@itcast.cn">联系我们</a>\n\t\t\n\t\t    <br>\n\t\t    <a href="http://www.itcast.cn"><img src="image/jiangwai_1.jpg"></a>\n\t6. div和span：\n\t\t* div:每一个div占满一整行。块级标签\n    \t* span：文本信息在一行展示，行内标签 内联标签\n\n\t7. 语义化标签：html5中为了提高程序的可读性，提供了一些标签。\n\t\t1. <header>：页眉\n\t\t2. <footer>：页脚\n\n\n\t8. 表格标签：\n\t\t* table：定义表格\n\t\t\t* width：宽度\n\t\t\t* border：边框\n\t\t\t* cellpadding：定义内容和单元格的距离\n\t\t\t* cellspacing：定义单元格之间的距离。如果指定为0，则单元格的线会合为一条、\n\t\t\t* bgcolor：背景色\n\t\t\t* align：对齐方式\n\t\t* tr：定义行\n\t\t\t* bgcolor：背景色\n\t\t\t* align：对齐方式\n\t\t* td：定义单元格\n\t\t\t* colspan：合并列\n\t\t\t* rowspan：合并行\n\t\t* th：定义表头单元格\n\t\t* <caption>：表格标题\n\t\t* <thead>：表示表格的头部分\n\t\t* <tbody>：表示表格的体部分\n\t\t* <tfoot>：表示表格的脚部分\n')])])]),e("h3",{attrs:{id:"案例-旅游网站首页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例-旅游网站首页"}},[t._v("#")]),t._v(" 案例：旅游网站首页")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 确定使用table来完成布局\t\n2. 如果某一行只有一个单元格，则使用<tr><td></td></tr>\n3. 如果某一行有多个单元格，则使用\n\t<tr>\n\t\t<td>\n\t\t\t<table></table>\n\t\t</td>\n\t</tr>\n\n4. 代码实现\n\n\t<!DOCTYPE html>\n\t<html lang="en">\n\t<head>\n\t    <meta charset="UTF-8">\n\t    <title>黑马旅游网</title>\n\t</head>\n\t<body>\n\t\n\t    \x3c!--采用table来完成布局--\x3e\n\t    \x3c!--最外层的table，用于整个页面的布局--\x3e\n\t    <table width="100%" align="center">\n\t       \x3c!-- 第1行 --\x3e\n\t        <tr>\n\t            <td>\n\t                <img src="image/top_banner.jpg" width="100%" alt="">\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第2行 --\x3e\n\t        <tr>\n\t            <td>\n\t                <table width="100%" align="center">\n\t                    <tr>\n\t                        <td>\n\t                            <img src="image/logo.jpg" alt="">\n\t                        </td>\n\t                        <td>\n\t                            <img src="image/search.png" alt="">\n\t                        </td>\n\t                        <td>\n\t                            <img src="image/hotel_tel.png" alt="">\n\t                        </td>\n\t                    </tr>\n\t                </table>\n\t\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第3行 --\x3e\n\t        <tr>\n\t            <td>\n\t                <table width="100%" align="center">\n\t                    <tr bgcolor="#ffd700" align="center" height="45" >\n\t                        <td>\n\t                            <a href="">首页</a>\n\t                        </td>\n\t\n\t                        <td>\n\t                            门票\n\t                        </td>\n\t\n\t                        <td>\n\t                            门票\n\t                        </td>\n\t\n\t                        <td>\n\t                            门票\n\t                        </td>\n\t\n\t                        <td>\n\t                            门票\n\t                        </td>\n\t\n\t                        <td>\n\t                            门票\n\t                        </td>\n\t\n\t                        <td>\n\t                            门票\n\t                        </td>\n\t\n\t                        <td>\n\t                            门票\n\t                        </td>\n\t\n\t                        <td>\n\t                            门票\n\t                        </td>\n\t\n\t                        <td>\n\t                            门票\n\t                        </td>\n\t                    </tr>\n\t                </table>\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第4行 轮播图 --\x3e\n\t        <tr>\n\t            <td>\n\t                <img src="image/banner_3.jpg" alt="" width="100%">\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第5行 黑马精选--\x3e\n\t        <tr>\n\t            <td>\n\t                <img src="image/icon_5.jpg" alt="">\n\t                黑马精选\n\t                <hr  color="#ffd700" >\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第6行 --\x3e\n\t        <tr>\n\t            <td>\n\t                <table align="center" width="95%">\n\t                    <tr>\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_1.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 899</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_1.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 899</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_1.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 899</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_1.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 899</font>\n\t                        </td>\n\t                    </tr>\n\t                </table>\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第7行 国内游 --\x3e\n\t        <tr>\n\t            <td>\n\t                <img src="image/icon_6.jpg" alt="">\n\t                国内游\n\t                <hr  color="#ffd700" >\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第8行 --\x3e\n\t        <tr>\n\t            <td>\n\t                <table align="center" width="95%">\n\t                    <tr>\n\t                        <td rowspan="2">\n\t                            <img src="image/guonei_1.jpg" alt="">\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_2.jpg" alt="" height="100%">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_2.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_2.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t                    </tr>\n\t\n\t                    <tr>\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_2.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_2.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_2.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t                    </tr>\n\t                </table>\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第9行 境外游 --\x3e\n\t        <tr>\n\t            <td>\n\t                <img src="image/icon_7.jpg" alt="">\n\t                境外游\n\t                <hr  color="#ffd700" >\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第10行 --\x3e\n\t        <tr>\n\t            <td>\n\t                <table align="center" width="95%">\n\t                    <tr>\n\t                        <td rowspan="2">\n\t                            <img src="image/jiangwai_1.jpg" alt="">\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                            <img src="image/jiangxuan_3.jpg" alt="" height="100%">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                           <img src="image/jiangxuan_3.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                           <img src="image/jiangxuan_3.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t                    </tr>\n\t\n\t                    <tr>\n\t                        <td>\n\t\n\t                           <img src="image/jiangxuan_3.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                           <img src="image/jiangxuan_3.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n\t\n\t                        <td>\n\t\n\t                           <img src="image/jiangxuan_3.jpg" alt="">\n\t                            <p>上海飞三亚五天4晚自由行(春节销售+亲子+蜜月+自由行)</p>\n\t                            <font color="red">&yen; 699</font>\n\t                        </td>\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t                    </tr>\n\t                </table>\n\t            </td>\n\t        </tr>\n\t        \x3c!-- 第11行 --\x3e\n\t        <tr>\n\t            <td>\n\t                <img src="image/footer_service.png" alt="" width="100%">\n\t            </td>\n\t        </tr>\n\t\n\t        \x3c!-- 第12行 --\x3e\n\t        <tr>\n\t            <td align="center" bgcolor="#ffd700" height="40">\n\t                <font color="gray" size="2">\n\t                江苏传智播客教育科技股份有限公司\n\t                版权所有Copyright 2006-2018&copy;, All Rights Reserved 苏ICP备16007882\n\t                </font>\n\t            </td>\n\t        </tr>\n\t        \n\t    </table>\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t</body>\n\t</html>\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"html-css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html-css"}},[t._v("#")]),t._v(" HTML&CSS")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. HTML标签：表单标签\n\n2. CSS：\n")])])]),e("h3",{attrs:{id:"html标签-表单标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html标签-表单标签"}},[t._v("#")]),t._v(" HTML标签：表单标签")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 表单：\n\t* 概念：用于采集用户输入的数据的。用于和服务器进行交互。\n\t* form：用于定义表单的。可以定义一个范围，范围代表采集用户数据的范围\n        * 属性：\n            * action：指定提交数据的URL\n            * method:指定提交方式\n                * 分类：一共7种，2种比较常用\n                   * get：\n                        1. 请求参数会在地址栏中显示。会封装到请求行中(HTTP协议后讲解)。\n                        2. 请求参数大小是有限制的。\n                        3. 不太安全。\n                   * post：\n                        2. 请求参数不会再地址栏中显示。会封装在请求体中(HTTP协议后讲解)\n                        2. 请求参数的大小没有限制。\n                        3. 较为安全。\n\n        * 表单项中的数据要想被提交：必须指定其name属性\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t* 表单项标签：\n\t\t* input：可以通过type属性值，改变元素展示的样式\n\t\t\t* type属性：\n\t\t\t\t* text：文本输入框，默认值\n\t\t\t\t\t* placeholder：指定输入框的提示信息，当输入框的内容发生变化，会自动清空提示信息\t\n\t\t\t\t* password：密码输入框\n\t\t\t\t* radio:单选框\n\t\t\t\t\t* 注意：\n\t\t\t\t\t\t1. 要想让多个单选框实现单选的效果，则多个单选框的name属性值必须一样。\n\t\t\t\t\t\t2. 一般会给每一个单选框提供value属性，指定其被选中后提交的值\n\t\t\t\t\t\t3. checked属性，可以指定默认值\n\t\t\t\t* checkbox：复选框\n\t\t\t\t\t* 注意：\n\t\t\t\t\t\t1. 一般会给每一个单选框提供value属性，指定其被选中后提交的值\n\t\t\t\t\t\t2. checked属性，可以指定默认值\n\n\t\t\t\t* file：文件选择框\n\t\t\t\t* hidden：隐藏域，用于提交一些信息。\n\t\t\t\t* 按钮：\n\t\t\t\t\t* submit：提交按钮。可以提交表单\n\t\t\t\t\t* button：普通按钮\n\t\t\t\t\t* image：图片提交按钮\n\t\t\t\t\t\t* src属性指定图片的路径\t\n\n\t\t   * label：指定输入项的文字描述信息\n\t\t\t   * 注意：\n\t\t\t\t   * label的for属性一般会和 input 的 id属性值 对应。如果对应了，则点击label区域，会让input输入框获取焦点。\n\t\t* select: 下拉列表\n\t\t\t* 子元素：option，指定列表项\n\t\t\t\n\t\t* textarea：文本域\n\t\t\t* cols：指定列数，每一行有多少个字符\n\t\t\t* rows：默认多少行。\n")])])]),e("h3",{attrs:{id:"css-页面美化和布局控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-页面美化和布局控制"}},[t._v("#")]),t._v(" CSS：页面美化和布局控制")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念： Cascading Style Sheets 层叠样式表\n\t* 层叠：多个样式可以作用在同一个html的元素上，同时生效\n\n2. 好处：\n\t1. 功能强大\n\t2. 将内容展示和样式控制分离\n\t\t* 降低耦合度。解耦\n\t\t* 让分工协作更容易\n\t\t* 提高开发效率\n\n\n3. CSS的使用：CSS与html结合方式\n\t1. 内联样式\n\t\t * 在标签内使用style属性指定css代码\n\t\t * 如：<div style="color:red;">hello css</div>\n\t2. 内部样式\n\t\t* 在head标签内，定义style标签，style标签的标签体内容就是css代码\n\t\t* 如：\n\t\t\t<style>\n\t\t        div{\n\t\t            color:blue;\n\t\t        }\n\t\t\n\t\t    </style>\n\t\t\t<div>hello css</div>\n\t3. 外部样式\n\t\t1. 定义css资源文件。\n\t\t2. 在head标签内，定义link标签，引入外部的资源文件\n\t\t* 如：\n    \t\t* a.css文件：\n\t\t\t\tdiv{\n\t\t\t\t    color:green;\n\t\t\t\t}\n\t\t\t<link rel="stylesheet" href="css/a.css">\n\t\t\t<div>hello css</div>\n\t\t\t<div>hello css</div>\n\n\t* 注意：\n\t\t* 1,2,3种方式 css作用范围越来越大\n\t\t* 1方式不常用，后期常用2,3\n\t\t* 3种格式可以写为：\n\t\t\t<style>\n\t\t        @import "css/a.css";\n\t\t    </style>\n\n4. css语法：\n\t* 格式：\n\t\t选择器 {\n\t\t\t属性名1:属性值1;\n\t\t\t属性名2:属性值2;\n\t\t\t...\n\t\t}\n\t* 选择器:筛选具有相似特征的元素\n\t* 注意：\n\t\t* 每一对属性需要使用；隔开，最后一对属性可以不加；\n\n\n5. 选择器：筛选具有相似特征的元素\n\t* 分类：\n\t\t1. 基础选择器\n\t\t\t1. id选择器：选择具体的id属性值的元素.建议在一个html页面中id值唯一\n\t\t        * 语法：#id属性值{}\n\t\t    2. 元素选择器：选择具有相同标签名称的元素\n\t\t        * 语法： 标签名称{}\n\t\t        * 注意：id选择器优先级高于元素选择器\n\t\t    3. 类选择器：选择具有相同的class属性值的元素。\n\t\t        * 语法：.class属性值{}\n\t\t        * 注意：类选择器选择器优先级高于元素选择器\n\t\t2. 扩展选择器：\n\t\t\t1. 选择所有元素：\n\t\t\t\t* 语法： *{}\n\t\t\t2. 并集选择器：\n\t\t\t\t* 选择器1,选择器2{}\n\t\t\t\n\t\t\t3. 子选择器：筛选选择器1元素下的选择器2元素\n\t\t\t\t* 语法：  选择器1 选择器2{}\n\t\t\t4. 父选择器：筛选选择器2的父元素选择器1\n\t\t\t\t* 语法：  选择器1 > 选择器2{}\n\n\t\t\t5. 属性选择器：选择元素名称，属性名=属性值的元素\n\t\t\t\t* 语法：  元素名称[属性名="属性值"]{}\n\n\t\t\t6. 伪类选择器：选择一些元素具有的状态\n\t\t\t\t* 语法： 元素:状态{}\n\t\t\t\t* 如： <a>\n\t\t\t\t\t* 状态：\n\t\t\t\t\t\t* link：初始化的状态\n\t\t\t\t\t\t* visited：被访问过的状态\n\t\t\t\t\t\t* active：正在访问状态\n\t\t\t\t\t\t* hover：鼠标悬浮状态\n6. 属性\n\t1. 字体、文本\n\t\t* font-size：字体大小\n\t\t* color：文本颜色\n\t\t* text-align：对其方式\n\t\t* line-height：行高 \n\t2. 背景\n\t\t* background：\n\t3. 边框\n\t\t* border：设置边框，符合属性\n\t4. 尺寸\n\t\t* width：宽度\n\t\t* height：高度\n\t5. 盒子模型：控制布局\n\t\t* margin：外边距\n\t\t* padding：内边距\n\t\t\t* 默认情况下内边距会影响整个盒子的大小\n\t\t\t* box-sizing: border-box;  设置盒子的属性，让width和height就是最终盒子的大小\n\n\t\t* float：浮动\n\t\t\t* left\n\t\t\t* right\n')])])]),e("h3",{attrs:{id:"案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t<!DOCTYPE html>\n\t<html lang="en">\n\t<head>\n\t    <meta charset="UTF-8">\n\t    <title>注册页面</title>\n\t<style>\n\t    *{\n\t        margin: 0px;\n\t        padding: 0px;\n\t        box-sizing: border-box;\n\t    }\n\t    body{\n\t        background: url("img/register_bg.png") no-repeat center;\n\t        padding-top: 25px;\n\t    }\n\t\n\t    .rg_layout{\n\t        width: 900px;\n\t        height: 500px;\n\t        border: 8px solid #EEEEEE;\n\t        background-color: white;\n\t        /*让div水平居中*/\n\t        margin: auto;\n\t    }\n\t\n\t    .rg_left{\n\t        /*border: 1px solid red;*/\n\t        float: left;\n\t        margin: 15px;\n\t    }\n\t    .rg_left > p:first-child{\n\t        color:#FFD026;\n\t        font-size: 20px;\n\t    }\n\t\n\t    .rg_left > p:last-child{\n\t        color:#A6A6A6;\n\t        font-size: 20px;\n\t\n\t    }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t    .rg_center{\n\t        float: left;\n\t       /* border: 1px solid red;*/\n\t\n\t    }\n\t\n\t    .rg_right{\n\t        /*border: 1px solid red;*/\n\t        float: right;\n\t        margin: 15px;\n\t    }\n\t\n\t    .rg_right > p:first-child{\n\t        font-size: 15px;\n\t\n\t    }\n\t    .rg_right p a {\n\t        color:pink;\n\t    }\n\t\n\t    .td_left{\n\t        width: 100px;\n\t        text-align: right;\n\t        height: 45px;\n\t    }\n\t    .td_right{\n\t        padding-left: 50px ;\n\t    }\n\t\n\t    #username,#password,#email,#name,#tel,#birthday,#checkcode{\n\t        width: 251px;\n\t        height: 32px;\n\t        border: 1px solid #A6A6A6 ;\n\t        /*设置边框圆角*/\n\t        border-radius: 5px;\n\t        padding-left: 10px;\n\t    }\n\t    #checkcode{\n\t        width: 110px;\n\t    }\n\t\n\t    #img_check{\n\t        height: 32px;\n\t        vertical-align: middle;\n\t    }\n\t\n\t    #btn_sub{\n\t        width: 150px;\n\t        height: 40px;\n\t        background-color: #FFD026;\n\t        border: 1px solid #FFD026 ;\n\t    }\n\t\n\t</style>\n\t\n\t</head>\n\t<body>\n\t\n\t<div class="rg_layout">\n\t    <div class="rg_left">\n\t        <p>新用户注册</p>\n\t        <p>USER REGISTER</p>\n\t\n\t    </div>\n\t\n\t    <div class="rg_center">\n\t        <div class="rg_form">\n\t            \x3c!--定义表单 form--\x3e\n\t            <form action="#" method="post">\n\t                <table>\n\t                    <tr>\n\t                        <td class="td_left"><label for="username">用户名</label></td>\n\t                        <td class="td_right"><input type="text" name="username" id="username" placeholder="请输入用户名"></td>\n\t                    </tr>\n\t\n\t                    <tr>\n\t                        <td class="td_left"><label for="password">密码</label></td>\n\t                        <td class="td_right"><input type="password" name="password" id="password" placeholder="请输入密码"></td>\n\t                    </tr>\n\t\n\t                    <tr>\n\t                        <td class="td_left"><label for="email">Email</label></td>\n\t                        <td class="td_right"><input type="email" name="email" id="email" placeholder="请输入邮箱"></td>\n\t                    </tr>\n\t\n\t                    <tr>\n\t                        <td class="td_left"><label for="name">姓名</label></td>\n\t                        <td class="td_right"><input type="text" name="name" id="name" placeholder="请输入姓名"></td>\n\t                    </tr>\n\t\n\t                    <tr>\n\t                        <td class="td_left"><label for="tel">手机号</label></td>\n\t                        <td class="td_right"><input type="text" name="tel" id="tel" placeholder="请输入手机号"></td>\n\t                    </tr>\n\t\n\t                    <tr>\n\t                        <td class="td_left"><label>性别</label></td>\n\t                        <td class="td_right">\n\t                            <input type="radio" name="gender" value="male"> 男\n\t                            <input type="radio" name="gender" value="female"> 女\n\t                        </td>\n\t                    </tr>\n\t\n\t                    <tr>\n\t                        <td class="td_left"><label for="birthday">出生日期</label></td>\n\t                        <td class="td_right"><input type="date" name="birthday" id="birthday" placeholder="请输入出生日期"></td>\n\t                    </tr>\n\t\n\t                    <tr>\n\t                        <td class="td_left"><label for="checkcode" >验证码</label></td>\n\t                        <td class="td_right"><input type="text" name="checkcode" id="checkcode" placeholder="请输入验证码">\n\t                            <img id="img_check" src="img/verify_code.jpg">\n\t                        </td>\n\t                    </tr>\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t                    <tr>\n\t                        <td colspan="2" align="center"><input type="submit" id="btn_sub" value="注册"></td>\n\t                    </tr>\n\t                </table>\n\t\n\t            </form>\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t        </div>\n\t\n\t    </div>\n\t\n\t    <div class="rg_right">\n\t        <p>已有账号?<a href="#">立即登录</a></p>\n\t    </div>\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t</div>\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t</body>\n\t</html>\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"javascript基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript基础"}},[t._v("#")]),t._v(" JavaScript基础")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. JavaScript基础\n")])])]),e("h3",{attrs:{id:"javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 概念：\t一门客户端脚本语言\n\t* 运行在客户端浏览器中的。每一个浏览器都有JavaScript的解析引擎\n\t* 脚本语言：不需要编译，直接就可以被浏览器解析执行了\n\n* 功能：\n\t* 可以来增强用户和html页面的交互过程，可以来控制html元素，让页面有一些动态的效果，增强用户的体验。\n\n* JavaScript发展史：\n\t1. 1992年，Nombase公司，开发出第一门客户端脚本语言，专门用于表单的校验。命名为 ： C--\t，后来更名为：ScriptEase\n\t2. 1995年，Netscape(网景)公司，开发了一门客户端脚本语言：LiveScript。后来，请来SUN公司的专家，修改LiveScript，命名为JavaScript\n\t3. 1996年，微软抄袭JavaScript开发出JScript语言\n\t4. 1997年，ECMA(欧洲计算机制造商协会)，制定出客户端脚本语言的标准：ECMAScript，就是统一了所有客户端脚本语言的编码方式。\n\n\t* JavaScript = ECMAScript + JavaScript自己特有的东西(BOM+DOM)\n\n* ECMAScript：客户端脚本语言的标准\n\t1. 基本语法：\n\t\t1. 与html结合方式\n\t\t\t1. 内部JS：\n\t\t\t\t* 定义<script>，标签体内容就是js代码\n\t\t\t2. 外部JS：\n\t\t\t\t* 定义<script>，通过src属性引入外部的js文件\n\n\t\t\t* 注意：\n\t\t\t\t1. <script>可以定义在html页面的任何地方。但是定义的位置会影响执行顺序。\n\t\t\t\t2. <script>可以定义多个。\n\t\t2. 注释\n\t\t\t1. 单行注释：//注释内容\n\t\t\t2. 多行注释：/*注释内容*/\n\t\t3. 数据类型：\n\t\t\t1. 原始数据类型(基本数据类型)：\n\t\t\t\t1. number：数字。 整数/小数/NaN(not a number 一个不是数字的数字类型)\n\t\t\t\t2. string：字符串。 字符串  "abc" "a" \'abc\'\n\t\t\t\t3. boolean: true和false\n\t\t\t\t4. null：一个对象为空的占位符\n\t\t\t\t5. undefined：未定义。如果一个变量没有给初始化值，则会被默认赋值为undefined\n\t\t\t\t\n\t\t\t2. 引用数据类型：对象\n\t\t\t\n\t\t4. 变量\n\t\t\t* 变量：一小块存储数据的内存空间\n\t\t\t* Java语言是强类型语言，而JavaScript是弱类型语言。\n\t\t\t\t* 强类型：在开辟变量存储空间时，定义了空间将来存储的数据的数据类型。只能存储固定类型的数据\n\t\t\t\t* 弱类型：在开辟变量存储空间时，不定义空间将来的存储数据类型，可以存放任意类型的数据。\n\t\t\t* 语法：\n\t\t\t\t* var 变量名 = 初始化值;\n\t\t\t\n\t\t\t* typeof运算符：获取变量的类型。\n\t\t\t\t* 注：null运算后得到的是object\n\t\t5. 运算符\n\t\t\t1. 一元运算符：只有一个运算数的运算符\n\t\t\t\t++，-- ， +(正号)  \n\t\t\t\t* ++ --: 自增(自减)\n\t\t\t\t\t* ++(--) 在前，先自增(自减)，再运算\n\t\t\t\t\t* ++(--) 在后，先运算，再自增(自减)\n\t\t\t\t* +(-)：正负号\n\t\t\t    * 注意：在JS中，如果运算数不是运算符所要求的类型，那么js引擎会自动的将运算数进行类型转换\n                    * 其他类型转number：\n                        * string转number：按照字面值转换。如果字面值不是数字，则转为NaN（不是数字的数字）\n                        * boolean转number：true转为1，false转为0\n\t\t\t2. 算数运算符\n\t\t\t\t+ - * / % ...\n\n\t\t\t3. 赋值运算符\n\t\t\t\t= += -+....\n\n\t\t\t4. 比较运算符\n\t\t\t\t> < >= <= == ===(全等于)\n\t\t\t\t* 比较方式\n                  1. 类型相同：直接比较\n                      * 字符串：按照字典顺序比较。按位逐一比较，直到得出大小为止。\n                  2. 类型不同：先进行类型转换，再比较\n                      * ===：全等于。在比较之前，先判断类型，如果类型不一样，则直接返回false\n\n\n\t\t\t5. 逻辑运算符\n\t\t\t\t&& || !\n\t\t\t\t* 其他类型转boolean：\n                   1. number：0或NaN为假，其他为真\n                   2. string：除了空字符串("")，其他都是true\n                   3. null&undefined:都是false\n                   4. 对象：所有对象都为true\n\t\t\t\n\t\t\t6. 三元运算符\n\t\t\t\t? : 表达式\n\t\t\t\tvar a = 3;\n\t\t        var b = 4;\n\t\t\n\t\t        var c = a > b ? 1:0;\n\t\t\t\t* 语法：\n\t\t\t\t\t* 表达式? 值1:值2;\n\t\t\t\t\t* 判断表达式的值，如果是true则取值1，如果是false则取值2；\n\t\t\t\n\t\t6. 流程控制语句：\n\t\t\t1. if...else...\n\t\t\t2. switch:\n\t\t\t\t* 在java中，switch语句可以接受的数据类型： byte int shor char,枚举(1.5) ,String(1.7)\n\t\t\t\t\t* switch(变量):\n\t\t\t\t\t\tcase 值:\n\t\t\t\t* 在JS中,switch语句可以接受任意的原始数据类型\n\t\t\t3. while\n\t\t\t4. do...while\n\t\t\t5. for\n\t\t7. JS特殊语法：\n\t\t\t1. 语句以;结尾，如果一行只有一条语句则 ;可以省略 (不建议)\n\t\t\t2. 变量的定义使用var关键字，也可以不使用\n        \t\t* 用： 定义的变量是局部变量\n                * 不用：定义的变量是全局变量(不建议)\n\n\t\t8. 练习：99乘法表\n\t\t<!DOCTYPE html>\n\t\t<html lang="en">\n\t\t<head>\n\t\t    <meta charset="UTF-8">\n\t\t    <title>99乘法表</title>\n\t\t    <style>\n\t\t        td{\n\t\t            border: 1px solid;\n\t\t        }\n\t\t\n\t\t    </style>\n\t\t\n\t\t    <script>\n\t\t\n\t\t        document.write("<table  align=\'center\'>");\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t        //1.完成基本的for循环嵌套，展示乘法表\n\t\t        for (var i = 1; i <= 9 ; i++) {\n\t\t            document.write("<tr>");\n\t\t            for (var j = 1; j <=i ; j++) {\n\t\t                document.write("<td>");\n\t\t\n\t\t                //输出  1 * 1 = 1\n\t\t                document.write(i + " * " + j + " = " + ( i*j) +"&nbsp;&nbsp;&nbsp;");\n\t\t\n\t\t                document.write("</td>");\n\t\t            }\n\t\t            /*//输出换行\n\t\t            document.write("<br>");*/\n\t\t\n\t\t            document.write("</tr>");\n\t\t        }\n\t\t\n\t\t        //2.完成表格嵌套\n\t\t        document.write("</table>");\n\t\t\n\t\t    <\/script>\n\t\t</head>\n\t\t<body>\n\t\t\n\t\t</body>\n\t\t</html>\n\n\t2. 基本对象：\n\t\t1. Function：函数(方法)对象\n            1. 创建：\n                1. var fun = new Function(形式参数列表,方法体);  //忘掉吧\n                2. \n                    function 方法名称(形式参数列表){\n                        方法体\n                    }\n\n                3. \n                   var 方法名 = function(形式参数列表){\n                        方法体\n                   }\n            2. 方法：\n\n            3. 属性：\n                length:代表形参的个数\n            4. 特点：\n                1. 方法定义是，形参的类型不用写,返回值类型也不写。\n                2. 方法是一个对象，如果定义名称相同的方法，会覆盖\n                3. 在JS中，方法的调用只与方法的名称有关，和参数列表无关\n                4. 在方法声明中有一个隐藏的内置对象（数组），arguments,封装所有的实际参数\n            5. 调用：\n                方法名称(实际参数列表);\n\t\t\n\t\t2. Array:数组对象\n            1. 创建：\n                1. var arr = new Array(元素列表);\n                2. var arr = new Array(默认长度);\n                3. var arr = [元素列表];\n            2. 方法\n                join(参数):将数组中的元素按照指定的分隔符拼接为字符串\n                push()\t向数组的末尾添加一个或更多元素，并返回新的长度。\n            3. 属性\n                length:数组的长度\n            4. 特点：\n                1. JS中，数组元素的类型可变的。\n                2. JS中，数组长度可变的。\n\t\t3. Boolean\n\t\t4. Date：日期对象\n            1. 创建：\n                var date = new Date();\n\n            2. 方法：\n                toLocaleString()：返回当前date对象对应的时间本地字符串格式\n                getTime():获取毫秒值。返回当前如期对象描述的时间到1970年1月1日零点的毫秒值差\n\t\t5. Math：数学对象\n            1. 创建：\n                * 特点：Math对象不用创建，直接使用。  Math.方法名();\n\n            2. 方法：\n                random():返回 0 ~ 1 之间的随机数。 含0不含1\n                ceil(x)：对数进行上舍入。\n                floor(x)：对数进行下舍入。\n                round(x)：把数四舍五入为最接近的整数。\n            3. 属性：\n                PI\n\t\t6. Number\n\t\t7. String\n\t\t8. RegExp：正则表达式对象\n\t\t\t1. 正则表达式：定义字符串的组成规则。\n\t\t\t\t1. 单个字符:[]\n\t\t\t\t\t如： [a] [ab] [a-zA-Z0-9_]\n\t\t\t\t\t* 特殊符号代表特殊含义的单个字符:\n\t\t\t\t\t\t\\d:单个数字字符 [0-9]\n\t\t\t\t\t\t\\w:单个单词字符[a-zA-Z0-9_]\n\t\t\t\t2. 量词符号：\n\t\t\t\t\t?：表示出现0次或1次\n\t\t\t\t\t*：表示出现0次或多次\n\t\t\t\t\t+：出现1次或多次\n\t\t\t\t\t{m,n}:表示 m<= 数量 <= n\n\t\t\t\t\t\t* m如果缺省： {,n}:最多n次\n\t\t\t\t\t\t* n如果缺省：{m,} 最少m次\n\t\t\t\t3. 开始结束符号\n\t\t\t\t\t* ^:开始\n\t\t\t\t\t* $:结束\n\t\t\t2. 正则对象：\n\t\t\t\t1. 创建\n\t\t\t\t\t1. var reg = new RegExp("正则表达式");\n\t\t\t\t\t2. var reg = /正则表达式/;\n\t\t\t\t2. 方法\t\n\t\t\t\t\t1. test(参数):验证指定的字符串是否符合正则定义的规范\t\n\t\t9. Global\n\t\t\t1. 特点：全局对象，这个Global中封装的方法不需要对象就可以直接调用。  方法名();\n\t\t\t2. 方法：\n\t\t\t    encodeURI():url编码\n\t\t\t    decodeURI():url解码\n\n\t\t\t    encodeURIComponent():url编码,编码的字符更多\n\t\t\t    decodeURIComponent():url解码\n\n\t\t\t    parseInt():将字符串转为数字\n\t\t\t        * 逐一判断每一个字符是否是数字，直到不是数字为止，将前边数字部分转为number\n\t\t\t    isNaN():判断一个值是否是NaN\n\t\t\t        * NaN六亲不认，连自己都不认。NaN参与的==比较全部问false\n\n\t\t\t    eval():讲 JavaScript 字符串，并把它作为脚本代码来执行。\n            3. URL编码\n               传智播客 =  %E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2\n\n* BOM\n\n* DOM\n')])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"javascript高级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript高级"}},[t._v("#")]),t._v(" JavaScript高级")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. JavaScript：\n\t1. ECMAScript：\n\t2. BOM：\n\t3. DOM：\n\t\t1. 事件\n")])])]),e("h3",{attrs:{id:"dom简单学习-为了满足案例要求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom简单学习-为了满足案例要求"}},[t._v("#")]),t._v(" DOM简单学习：为了满足案例要求")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 功能：控制html文档的内容\n* 获取页面标签(元素)对象：Element\n\t* document.getElementById("id值"):通过元素的id获取元素对象\n\n* 操作Element对象：\n\t1. 修改属性值：\n\t\t1. 明确获取的对象是哪一个？\n\t\t2. 查看API文档，找其中有哪些属性可以设置\n\t2. 修改标签体内容：\n\t\t* 属性：innerHTML\n\t\t1. 获取元素对象\n\t\t2. 使用innerHTML属性修改标签体内容\n')])])]),e("h3",{attrs:{id:"事件简单学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件简单学习"}},[t._v("#")]),t._v(" 事件简单学习")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 功能： 某些组件被执行了某些操作后，触发某些代码的执行。\n\t* 造句：  xxx被xxx,我就xxx\n\t\t* 我方水晶被摧毁后，我就责备对友。\n\t\t* 敌方水晶被摧毁后，我就夸奖自己。\n\n* 如何绑定事件\n\t1. 直接在html标签上，指定事件的属性(操作)，属性值就是js代码\n\t\t1. 事件：onclick--- 单击事件\n\n\t2. 通过js获取元素对象，指定事件属性，设置一个函数\n\n\t* 代码：\n\t\t<body>\n\t\t\t<img id="light" src="img/off.gif"  onclick="fun();">\n\t\t\t<img id="light2" src="img/off.gif">\n\t\t\t\n\t\t\t<script>\n\t\t\t    function fun(){\n\t\t\t        alert(\'我被点了\');\n\t\t\t        alert(\'我又被点了\');\n\t\t\t    }\n\t\t\t\n\t\t\t    function fun2(){\n\t\t\t        alert(\'咋老点我？\');\n\t\t\t    }\n\t\t\t\n\t\t\t    //1.获取light2对象\n\t\t\t    var light2 = document.getElementById("light2");\n\t\t\t    //2.绑定事件\n\t\t\t    light2.onclick = fun2;\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t\t<\/script>\n\t\t</body>\n\n* 案例1：电灯开关\n\t<!DOCTYPE html>\n\t<html lang="en">\n\t<head>\n\t    <meta charset="UTF-8">\n\t    <title>电灯开关</title>\n\t\n\t</head>\n\t<body>\n\t\n\t<img id="light" src="img/off.gif">\n\t\n\t<script>\n\t    /*\n\t        分析：\n\t            1.获取图片对象\n\t            2.绑定单击事件\n\t            3.每次点击切换图片\n\t                * 规则：\n\t                    * 如果灯是开的 on,切换图片为 off\n\t                    * 如果灯是关的 off,切换图片为 on\n\t                * 使用标记flag来完成\n\t\n\t     */\n\t\n\t    //1.获取图片对象\n\t    var light = document.getElementById("light");\n\t\n\t    var flag = false;//代表灯是灭的。 off图片\n\t\n\t    //2.绑定单击事件\n\t    light.onclick = function(){\n\t        if(flag){//判断如果灯是开的，则灭掉\n\t            light.src = "img/off.gif";\n\t            flag = false;\n\t\n\t        }else{\n\t            //如果灯是灭的，则打开\n\t\n\t            light.src = "img/on.gif";\n\t            flag = true;\n\t        }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t    }\n\t    \n\t<\/script>\n\t</body>\n\t</html>\n")])])]),e("h2",{attrs:{id:"bom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 概念：Browser Object Model 浏览器对象模型\n\t* 将浏览器的各个组成部分封装成对象。\n\n2. 组成：\n\t* Window：窗口对象\n\t* Navigator：浏览器对象\n\t* Screen：显示器屏幕对象\n\t* History：历史记录对象\n\t* Location：地址栏对象\n\n3. Window：窗口对象\n    1. 创建\n    2. 方法\n         1. 与弹出框有关的方法：\n            alert()\t显示带有一段消息和一个确认按钮的警告框。\n            confirm()\t显示带有一段消息以及确认按钮和取消按钮的对话框。\n                * 如果用户点击确定按钮，则方法返回true\n                * 如果用户点击取消按钮，则方法返回false\n            prompt()\t显示可提示用户输入的对话框。\n                * 返回值：获取用户输入的值\n         2. 与打开关闭有关的方法：\n            close()\t关闭浏览器窗口。\n                * 谁调用我 ，我关谁\n            open()\t打开一个新的浏览器窗口\n                * 返回新的Window对象\n         3. 与定时器有关的方式\n            setTimeout()\t在指定的毫秒数后调用函数或计算表达式。\n                * 参数：\n                    1. js代码或者方法对象\n                    2. 毫秒值\n                * 返回值：唯一标识，用于取消定时器\n            clearTimeout()\t取消由 setTimeout() 方法设置的 timeout。\n\n            setInterval()\t按照指定的周期（以毫秒计）来调用函数或计算表达式。\n            clearInterval()\t取消由 setInterval() 设置的 timeout。\n\n    3. 属性：\n        1. 获取其他BOM对象：\n            history\n            location\n            Navigator\n            Screen:\n        2. 获取DOM对象\n            document\n    4. 特点\n        * Window对象不需要创建可以直接使用 window使用。 window.方法名();\n        * window引用可以省略。  方法名();\n\n\n4. Location：地址栏对象\n\t1. 创建(获取)：\n\t\t1. window.location\n\t\t2. location\n\n\t2. 方法：\n\t\t* reload()\t重新加载当前文档。刷新\n\t3. 属性\n\t\t* href\t设置或返回完整的 URL。\n\n\n5. History：历史记录对象\n    1. 创建(获取)：\n        1. window.history\n        2. history\n\n    2. 方法：\n        * back()\t加载 history 列表中的前一个 URL。\n        * forward()\t加载 history 列表中的下一个 URL。\n        * go(参数)\t加载 history 列表中的某个具体页面。\n            * 参数：\n                * 正数：前进几个历史记录\n                * 负数：后退几个历史记录\n    3. 属性：\n        * length\t返回当前窗口历史列表中的 URL 数量。\n")])])]),e("h3",{attrs:{id:"dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 概念： Document Object Model 文档对象模型\n\t* 将标记语言文档的各个组成部分，封装为对象。可以使用这些对象，对标记语言文档进行CRUD的动态操作\n\n* W3C DOM 标准被分为 3 个不同的部分：\n\n\t* 核心 DOM - 针对任何结构化文档的标准模型\n\t\t* Document：文档对象\n\t\t* Element：元素对象\n\t\t* Attribute：属性对象\n\t\t* Text：文本对象\n\t\t* Comment:注释对象\n\n\t\t* Node：节点对象，其他5个的父对象\n\t* XML DOM - 针对 XML 文档的标准模型\n\t* HTML DOM - 针对 HTML 文档的标准模型\n\n\n\n\n\n* 核心DOM模型：\n\t* Document：文档对象\n\t\t1. 创建(获取)：在html dom模型中可以使用window对象来获取\n\t\t\t1. window.document\n\t\t\t2. document\n\t\t2. 方法：\n\t\t\t1. 获取Element对象：\n\t\t\t\t1. getElementById()\t： 根据id属性值获取元素对象。id属性值一般唯一\n\t\t\t\t2. getElementsByTagName()：根据元素名称获取元素对象们。返回值是一个数组\n\t\t\t\t3. getElementsByClassName():根据Class属性值获取元素对象们。返回值是一个数组\n\t\t\t\t4. getElementsByName(): 根据name属性值获取元素对象们。返回值是一个数组\n\t\t\t2. 创建其他DOM对象：\n\t\t\t\tcreateAttribute(name)\n            \tcreateComment()\n            \tcreateElement()\n            \tcreateTextNode()\n\t\t3. 属性\n\t* Element：元素对象\n\t\t1. 获取/创建：通过document来获取和创建\n\t\t2. 方法：\n\t\t\t1. removeAttribute()：删除属性\n\t\t\t2. setAttribute()：设置属性\n\t* Node：节点对象，其他5个的父对象\n\t\t* 特点：所有dom对象都可以被认为是一个节点\n\t\t* 方法：\n\t\t\t* CRUD dom树：\n\t\t\t\t* appendChild()：向节点的子节点列表的结尾添加新的子节点。\n\t\t\t\t* removeChild()\t：删除（并返回）当前节点的指定子节点。\n\t\t\t\t* replaceChild()：用新节点替换一个子节点。\n\t\t* 属性：\n\t\t\t* parentNode 返回节点的父节点。\n\n\n* HTML DOM\n\t1. 标签体的设置和获取：innerHTML\n\t2. 使用html元素对象的属性\n\t3. 控制元素样式\n\t\t1. 使用元素的style属性来设置\n\t\t\t如：\n\t\t\t\t //修改样式方式1\n\t\t        div1.style.border = "1px solid red";\n\t\t        div1.style.width = "200px";\n\t\t        //font-size--\x3e fontSize\n\t\t        div1.style.fontSize = "20px";\n\t\t2. 提前定义好类选择器的样式，通过元素的className属性来设置其class属性值。\n')])])]),e("h3",{attrs:{id:"事件监听机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件监听机制"}},[t._v("#")]),t._v(" 事件监听机制：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 概念：某些组件被执行了某些操作后，触发某些代码的执行。\t\n\t* 事件：某些操作。如： 单击，双击，键盘按下了，鼠标移动了\n\t* 事件源：组件。如： 按钮 文本输入框...\n\t* 监听器：代码。\n\t* 注册监听：将事件，事件源，监听器结合在一起。 当事件源上发生了某个事件，则触发执行某个监听器代码。\n\n\n* 常见的事件：\n\t1. 点击事件：\n\t\t1. onclick：单击事件\n\t\t2. ondblclick：双击事件\n\t2. 焦点事件\n\t\t1. onblur：失去焦点\n\t\t2. onfocus:元素获得焦点。\n\n\t3. 加载事件：\n\t\t1. onload：一张页面或一幅图像完成加载。\n\n\t4. 鼠标事件：\n\t\t1. onmousedown\t鼠标按钮被按下。\n\t\t2. onmouseup\t鼠标按键被松开。\n\t\t3. onmousemove\t鼠标被移动。\n\t\t4. onmouseover\t鼠标移到某元素之上。\n\t\t5. onmouseout\t鼠标从某元素移开。\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t5. 键盘事件：\n\t\t1. onkeydown\t某个键盘按键被按下。\t\n\t\t2. onkeyup\t\t某个键盘按键被松开。\n\t\t3. onkeypress\t某个键盘按键被按下并松开。\n\n\t6. 选择和改变\n\t\t1. onchange\t域的内容被改变。\n\t\t2. onselect\t文本被选中。\n\n\t7. 表单事件：\n\t\t1. onsubmit\t确认按钮被点击。\n\t\t2. onreset\t重置按钮被点击。\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"bootstrap笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap笔记"}},[t._v("#")]),t._v(" BootStrap笔记")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. Bootstrap\n")])])]),e("h3",{attrs:{id:"bootstrap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap"}},[t._v("#")]),t._v(" Bootstrap：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念： 一个前端开发的框架，Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷。\n\t* 框架:一个半成品软件，开发人员可以在框架基础上，在进行开发，简化编码。\n\t* 好处：\n\t\t1. 定义了很多的css样式和js插件。我们开发人员直接可以使用这些样式和插件得到丰富的页面效果。\n\t\t2. 响应式布局。\n\t\t\t* 同一套页面可以兼容不同分辨率的设备。\n\n\n2. 快速入门\n\t1. 下载Bootstrap\n\t2. 在项目中将这三个文件夹复制\n\t3. 创建html页面，引入必要的资源文件\n\n\n\t<!DOCTYPE html>\n\t<html lang="zh-CN">\n\t<head>\n\t    <meta charset="utf-8">\n\t    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n\t    <meta name="viewport" content="width=device-width, initial-scale=1">\n\t    \x3c!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --\x3e\n\t    <title>Bootstrap HelloWorld</title>\n\t\n\t    \x3c!-- Bootstrap --\x3e\n\t    <link href="css/bootstrap.min.css" rel="stylesheet">\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t    \x3c!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --\x3e\n\t    <script src="js/jquery-3.2.1.min.js"><\/script>\n\t    \x3c!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --\x3e\n\t    <script src="js/bootstrap.min.js"><\/script>\n\t</head>\n\t<body>\n\t<h1>你好，世界！</h1>\n\t\n\t</body>\n\t</html>\n')])])]),e("h3",{attrs:{id:"响应式布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应式布局"}},[t._v("#")]),t._v(" 响应式布局")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 同一套页面可以兼容不同分辨率的设备。\n* 实现：依赖于栅格系统：将一行平均分成12个格子，可以指定元素占几个格子\n* 步骤：\n\t1. 定义容器。相当于之前的table、\n\t\t* 容器分类：\n\t\t\t1. container：两边留白\n\t\t\t2. container-fluid：每一种设备都是100%宽度\n\t2. 定义行。相当于之前的tr   样式：row\n\t3. 定义元素。指定该元素在不同的设备上，所占的格子数目。样式：col-设备代号-格子数目\n\t\t* 设备代号：\n\t\t\t1. xs：超小屏幕 手机 (<768px)：col-xs-12\n\t\t\t2. sm：小屏幕 平板 (≥768px)\n\t\t\t3. md：中等屏幕 桌面显示器 (≥992px)\n\t\t\t4. lg：大屏幕 大桌面显示器 (≥1200px)\n\n\t* 注意：\n\t\t1. 一行中如果格子数目超过12，则超出部分自动换行。\n\t\t2. 栅格类属性可以向上兼容。栅格类适用于与屏幕宽度大于或等于分界点大小的设备。\n\t\t3. 如果真实设备宽度小于了设置栅格类属性的设备代码的最小值，会一个元素沾满一整行。\n")])])]),e("h3",{attrs:{id:"css样式和js插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css样式和js插件"}},[t._v("#")]),t._v(" CSS样式和JS插件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 全局CSS样式：\n\t* 按钮：class="btn btn-default"\n\t* 图片：\n\t\t*  class="img-responsive"：图片在任意尺寸都占100%\n\t\t*  图片形状\n\t\t\t*  <img src="..." alt="..." class="img-rounded">：方形\n\t\t\t*  <img src="..." alt="..." class="img-circle"> ： 圆形\n\t\t\t*  <img src="..." alt="..." class="img-thumbnail"> ：相框\n\t* 表格\n\t\t* table\n\t\t* table-bordered\n\t\t* table-hover\n\t* 表单\n\t\t* 给表单项添加：class="form-control" \n2. 组件：\n\t* 导航条\n\t* 分页条\n3. 插件：\n\t* 轮播图\n')])])]),e("h3",{attrs:{id:"案例-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例-2"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n    <meta charset="utf-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    \x3c!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --\x3e\n    <title>Bootstrap HelloWorld</title>\n\n    \x3c!-- Bootstrap --\x3e\n    <link href="css/bootstrap.min.css" rel="stylesheet">\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('    \x3c!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --\x3e\n    <script src="js/jquery-3.2.1.min.js"><\/script>\n    \x3c!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --\x3e\n    <script src="js/bootstrap.min.js"><\/script>\n    <style>\n        .paddtop{\n            padding-top: 10px;\n        }\n        .search-btn{\n            float: left;\n            border:1px solid #ffc900;\n            width: 90px;\n            height: 35px;\n            background-color:#ffc900 ;\n            text-align: center;\n            line-height: 35px;\n            margin-top: 15px;\n        }\n\n        .search-input{\n            float: left;\n            border:2px solid #ffc900;\n            width: 400px;\n            height: 35px;\n            padding-left: 5px;\n            margin-top: 15px;\n        }\n        .jx{\n            border-bottom: 2px solid #ffc900;\n            padding: 5px;\n        }\n        .company{\n            height: 40px;\n            background-color: #ffc900;\n            text-align: center;\n            line-height:40px ;\n            font-size: 8px;\n        }\n    </style>\n</head>\n<body>\n\n   \x3c!-- 1.页眉部分--\x3e\n   <header class="container-fluid">\n       <div class="row">\n           <img src="img/top_banner.jpg" class="img-responsive">\n       </div>\n       <div class="row paddtop">\n           <div class="col-md-3">\n               <img src="img/logo.jpg" class="img-responsive">\n           </div>\n           <div class="col-md-5">\n               <input class="search-input" placeholder="请输入线路名称">\n               <a class="search-btn" href="#">搜索</a>\n           </div>\n           <div class="col-md-4">\n               <img src="img/hotel_tel.png" class="img-responsive">\n           </div>\n\n       </div>\n       \x3c!--导航栏--\x3e\n       <div class="row">\n           <nav class="navbar navbar-default">\n               <div class="container-fluid">\n                   \x3c!-- Brand and toggle get grouped for better mobile display --\x3e\n                   <div class="navbar-header">\n                       \x3c!-- 定义汉堡按钮 --\x3e\n                       <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">\n                           <span class="sr-only">Toggle navigation</span>\n                           <span class="icon-bar"></span>\n                           <span class="icon-bar"></span>\n                           <span class="icon-bar"></span>\n                       </button>\n                       <a class="navbar-brand" href="#">首页</a>\n                   </div>\n\n                   \x3c!-- Collect the nav links, forms, and other content for toggling --\x3e\n                   <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n                       <ul class="nav navbar-nav">\n                           <li class="active"><a href="#">Link <span class="sr-only">(current)</span></a></li>\n                           <li><a href="#">Link</a></li>\n                           <li><a href="#">Link</a></li>\n                           <li><a href="#">Link</a></li>\n                           <li><a href="#">Link</a></li>\n                           <li><a href="#">Link</a></li>\n\n                       </ul>\n                   </div>\x3c!-- /.navbar-collapse --\x3e\n               </div>\x3c!-- /.container-fluid --\x3e\n           </nav>\n\n       </div>\n\n       \x3c!--轮播图--\x3e\n       <div class="row">\n           <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">\n               \x3c!-- Indicators --\x3e\n               <ol class="carousel-indicators">\n                   <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>\n                   <li data-target="#carousel-example-generic" data-slide-to="1"></li>\n                   <li data-target="#carousel-example-generic" data-slide-to="2"></li>\n               </ol>\n\n               \x3c!-- Wrapper for slides --\x3e\n               <div class="carousel-inner" role="listbox">\n                   <div class="item active">\n                       <img src="img/banner_1.jpg" alt="...">\n                   </div>\n                   <div class="item">\n                       <img src="img/banner_2.jpg" alt="...">\n                   </div>\n                   <div class="item">\n                       <img src="img/banner_3.jpg" alt="...">\n                   </div>\n\n               </div>\n\n               \x3c!-- Controls --\x3e\n               <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">\n                   <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n                   <span class="sr-only">Previous</span>\n               </a>\n               <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">\n                   <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n                   <span class="sr-only">Next</span>\n               </a>\n           </div>\n')])])]),e("p",[t._v("​\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('       </div>\n\n   </header>\n   \x3c!-- 2.主体部分--\x3e\n   <div class="container">\n        <div class="row jx">\n            <img src="img/icon_5.jpg">\n            <span>黑马精选</span>\n        </div>\n\n       <div class="row paddtop">\n           <div class="col-md-3">\n                <div class="thumbnail">\n                    <img src="img/jiangxuan_3.jpg" alt="">\n                    <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                    <font color="red">&yen; 699</font>\n                </div>\n           </div>\n           <div class="col-md-3">\n               <div class="thumbnail">\n                   <img src="img/jiangxuan_3.jpg" alt="">\n                   <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                   <font color="red">&yen; 699</font>\n               </div>\n\n           </div>\n           <div class="col-md-3">\n\n               <div class="thumbnail">\n                   <img src="img/jiangxuan_3.jpg" alt="">\n                   <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                   <font color="red">&yen; 699</font>\n               </div>\n           </div>\n           <div class="col-md-3">\n\n               <div class="thumbnail">\n                   <img src="img/jiangxuan_3.jpg" alt="">\n                   <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                   <font color="red">&yen; 699</font>\n               </div>\n           </div>\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('       </div>\n       <div class="row jx">\n           <img src="img/icon_6.jpg">\n           <span>国内游</span>\n       </div>\n       <div class="row paddtop">\n           <div class="col-md-4">\n               <img src="img/guonei_1.jpg">\n           </div>\n           <div class="col-md-8">\n               <div class="row">\n                   <div class="col-md-4">\n                       <div class="thumbnail">\n                           <img src="img/jiangxuan_3.jpg" alt="">\n                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                           <font color="red">&yen; 699</font>\n                       </div>\n                   </div>\n                   <div class="col-md-4">\n                       <div class="thumbnail">\n                           <img src="img/jiangxuan_3.jpg" alt="">\n                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                           <font color="red">&yen; 699</font>\n                       </div>\n\n                   </div>\n                   <div class="col-md-4">\n\n                       <div class="thumbnail">\n                           <img src="img/jiangxuan_3.jpg" alt="">\n                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                           <font color="red">&yen; 699</font>\n                       </div>\n                   </div>\n\n               </div>\n               <div class="row">\n                   <div class="col-md-4">\n                       <div class="thumbnail">\n                           <img src="img/jiangxuan_3.jpg" alt="">\n                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                           <font color="red">&yen; 699</font>\n                       </div>\n                   </div>\n                   <div class="col-md-4">\n                       <div class="thumbnail">\n                           <img src="img/jiangxuan_3.jpg" alt="">\n                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                           <font color="red">&yen; 699</font>\n                       </div>\n\n                   </div>\n                   <div class="col-md-4">\n\n                       <div class="thumbnail">\n                           <img src="img/jiangxuan_3.jpg" alt="">\n                           <p>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)</p>\n                           <font color="red">&yen; 699</font>\n                       </div>\n                   </div>\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('               </div>\n\n           </div>\n\n       </div>\n   </div>\n   \x3c!-- 3.页脚部分--\x3e\n   <footer class="container-fluid">\n       <div class="row">\n           <img src="img/footer_service.png" class="img-responsive">\n       </div>\n       <div class="row company">\n           江苏传智播客教育科技股份有限公司 版权所有Copyright 2006-2018, All Rights Reserved 苏ICP备16007882\n       </div>\n\n   </footer>\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("</body>\n</html>\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"xml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xml"}},[t._v("#")]),t._v(" XML")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. XML\n\t1. 概念\n\t2. 语法\n\t3. 解析\n")])])]),e("h3",{attrs:{id:"xml-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xml-2"}},[t._v("#")]),t._v(" XML：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 概念：Extensible Markup Language 可扩展标记语言\n\t* 可扩展：标签都是自定义的。 <user>  <student>\n\n\t* 功能\n\t\t* 存储数据\n\t\t\t1. 配置文件\n\t\t\t2. 在网络中传输\n\t* xml与html的区别\n\t\t1. xml标签都是自定义的，html标签是预定义。\n\t\t2. xml的语法严格，html语法松散\n\t\t3. xml是存储数据的，html是展示数据\n\n\t* w3c:万维网联盟\n\n2. 语法：\n\t* 基本语法：\n\t\t1. xml文档的后缀名 .xml\n\t\t2. xml第一行必须定义为文档声明\n\t\t3. xml文档中有且仅有一个根标签\n\t\t4. 属性值必须使用引号(单双都可)引起来\n\t\t5. 标签必须正确关闭\n\t\t6. xml标签名称区分大小写\n\t* 快速入门：\n\t\t<?xml version='1.0' ?>\n\t\t<users>\n\t\t\t<user id='1'>\n\t\t\t\t<name>zhangsan</name>\n\t\t\t\t<age>23</age>\n\t\t\t\t<gender>male</gender>\n\t\t\t\t<br/>\n\t\t\t</user>\n\t\t\t\n\t\t\t<user id='2'>\n\t\t\t\t<name>lisi</name>\n\t\t\t\t<age>24</age>\n\t\t\t\t<gender>female</gender>\n\t\t\t</user>\n\t\t</users>\n\t\t\n\t* 组成部分：\n\t\t1. 文档声明\n\t\t\t1. 格式：<?xml 属性列表 ?>\n\t\t\t2. 属性列表：\n\t\t\t\t* version：版本号，必须的属性\n\t\t\t\t* encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1\n\t\t\t\t* standalone：是否独立\n\t\t\t\t\t* 取值：\n\t\t\t\t\t\t* yes：不依赖其他文件\n\t\t\t\t\t\t* no：依赖其他文件\n\t\t2. 指令(了解)：结合css的\n\t\t\t* <?xml-stylesheet type=\"text/css\" href=\"a.css\" ?>\n\t\t3. 标签：标签名称自定义的\n\t\t\t* 规则：\n\t\t\t\t* 名称可以包含字母、数字以及其他的字符 \n\t\t\t\t* 名称不能以数字或者标点符号开始 \n\t\t\t\t* 名称不能以字母 xml（或者 XML、Xml 等等）开始 \n\t\t\t\t* 名称不能包含空格 \n\n\t\t4. 属性：\n\t\t\tid属性值唯一\n\t\t5. 文本：\n\t\t\t* CDATA区：在该区域中的数据会被原样展示\n\t\t\t\t* 格式：  <![CDATA[ 数据 ]]>\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t* 约束：规定xml文档的书写规则\n\t\t* 作为框架的使用者(程序员)：\n\t\t\t1. 能够在xml中引入约束文档\n\t\t\t2. 能够简单的读懂约束文档\n\t\t\n\t\t* 分类：\n\t\t\t1. DTD:一种简单的约束技术\n\t\t\t2. Schema:一种复杂的约束技术\n\n\n\t\t* DTD：\n\t\t\t* 引入dtd文档到xml文档中\n\t\t\t\t* 内部dtd：将约束规则定义在xml文档中\n\t\t\t\t* 外部dtd：将约束的规则定义在外部的dtd文件中\n\t\t\t\t\t* 本地：<!DOCTYPE 根标签名 SYSTEM "dtd文件的位置">\n\t\t\t\t\t* 网络：<!DOCTYPE 根标签名 PUBLIC "dtd文件名字" "dtd文件的位置URL">\n\n\n\t\t* Schema:\n\t\t\t* 引入：\n\t\t\t\t1.填写xml文档的根元素\n\t\t\t\t2.引入xsi前缀.  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n\t\t\t\t3.引入xsd文件命名空间.  xsi:schemaLocation="http://www.itcast.cn/xml  student.xsd"\n\t\t\t\t4.为每一个xsd约束声明一个前缀,作为标识  xmlns="http://www.itcast.cn/xml" \n\n\t\t\t<students   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n\t\t\t\txmlns="http://www.itcast.cn/xml"\n\t\t\t\txsi:schemaLocation="http://www.itcast.cn/xml  student.xsd">\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("3. 解析：操作xml文档，将文档中的数据读取到内存中\n\t* 操作xml文档\n\t\t1. 解析(读取)：将文档中的数据读取到内存中\n\t\t2. 写入：将内存中的数据保存到xml文档中。持久化的存储\n\n\t* 解析xml的方式：\n\t\t1. DOM：将标记语言文档一次性加载进内存，在内存中形成一颗dom树\n\t\t\t* 优点：操作方便，可以对文档进行CRUD的所有操作\n\t\t\t* 缺点：占内存\n\t\t2. SAX：逐行读取，基于事件驱动的。\n\t\t\t* 优点：不占内存。\n\t\t\t* 缺点：只能读取，不能增删改\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t* xml常见的解析器：\n\t\t1. JAXP：sun公司提供的解析器，支持dom和sax两种思想\n\t\t2. DOM4J：一款非常优秀的解析器\n\t\t3. Jsoup：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。\n\t\t4. PULL：Android操作系统内置的解析器，sax方式的。\n\n\n\t* Jsoup：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。\n\t\t* 快速入门：\n\t\t\t* 步骤：\n\t\t\t\t1. 导入jar包\n\t\t\t\t2. 获取Document对象\n\t\t\t\t3. 获取对应的标签Element对象\n\t\t\t\t4. 获取数据\n\n\t\t* 代码：\n\t\t\t //2.1获取student.xml的path\n\t        String path = JsoupDemo1.class.getClassLoader().getResource("student.xml").getPath();\n\t        //2.2解析xml文档，加载文档进内存，获取dom树---\x3eDocument\n\t        Document document = Jsoup.parse(new File(path), "utf-8");\n\t        //3.获取元素对象 Element\n\t        Elements elements = document.getElementsByTag("name");\n\t\n\t        System.out.println(elements.size());\n\t        //3.1获取第一个name的Element对象\n\t        Element element = elements.get(0);\n\t        //3.2获取数据\n\t        String name = element.text();\n\t        System.out.println(name);\n\n\t* 对象的使用：\n\t\t1. Jsoup：工具类，可以解析html或xml文档，返回Document\n\t\t\t* parse：解析html或xml文档，返回Document\n\t\t\t\t* parse​(File in, String charsetName)：解析xml或html文件的。\n\t\t\t\t* parse​(String html)：解析xml或html字符串\n\t\t\t\t* parse​(URL url, int timeoutMillis)：通过网络路径获取指定的html或xml的文档对象\n\t\t2. Document：文档对象。代表内存中的dom树\n\t\t\t* 获取Element对象\n\t\t\t\t* getElementById​(String id)：根据id属性值获取唯一的element对象\n\t\t\t\t* getElementsByTag​(String tagName)：根据标签名称获取元素对象集合\n\t\t\t\t* getElementsByAttribute​(String key)：根据属性名称获取元素对象集合\n\t\t\t\t* getElementsByAttributeValue​(String key, String value)：根据对应的属性名和属性值获取元素对象集合\n\t\t3. Elements：元素Element对象的集合。可以当做 ArrayList<Element>来使用\n\t\t4. Element：元素对象\n\t\t\t1. 获取子元素对象\n\t\t\t\t* getElementById​(String id)：根据id属性值获取唯一的element对象\n\t\t\t\t* getElementsByTag​(String tagName)：根据标签名称获取元素对象集合\n\t\t\t\t* getElementsByAttribute​(String key)：根据属性名称获取元素对象集合\n\t\t\t\t* getElementsByAttributeValue​(String key, String value)：根据对应的属性名和属性值获取元素对象集合\n\n\t\t\t2. 获取属性值\n\t\t\t\t* String attr(String key)：根据属性名称获取属性值\n\t\t\t3. 获取文本内容\n\t\t\t\t* String text():获取文本内容\n\t\t\t\t* String html():获取标签体的所有内容(包括字标签的字符串内容)\n\t\t5. Node：节点对象\n\t\t\t* 是Document和Element的父类\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t* 快捷查询方式：\n\t\t1. selector:选择器\n\t\t\t* 使用的方法：Elements\tselect​(String cssQuery)\n\t\t\t\t* 语法：参考Selector类中定义的语法\n\t\t2. XPath：XPath即为XML路径语言，它是一种用来确定XML（标准通用标记语言的子集）文档中某部分位置的语言\n\t\t\t* 使用Jsoup的Xpath需要额外导入jar包。\n\t\t\t* 查询w3cshool参考手册，使用xpath的语法完成查询\n\t\t\t* 代码：\n\t\t\t\t//1.获取student.xml的path\n\t\t        String path = JsoupDemo6.class.getClassLoader().getResource("student.xml").getPath();\n\t\t        //2.获取Document对象\n\t\t        Document document = Jsoup.parse(new File(path), "utf-8");\n\t\t\n\t\t        //3.根据document对象，创建JXDocument对象\n\t\t        JXDocument jxDocument = new JXDocument(document);\n\t\t\n\t\t        //4.结合xpath语法查询\n\t\t        //4.1查询所有student标签\n\t\t        List<JXNode> jxNodes = jxDocument.selN("//student");\n\t\t        for (JXNode jxNode : jxNodes) {\n\t\t            System.out.println(jxNode);\n\t\t        }\n\t\t\n\t\t        System.out.println("--------------------");\n\t\t\n\t\t        //4.2查询所有student标签下的name标签\n\t\t        List<JXNode> jxNodes2 = jxDocument.selN("//student/name");\n\t\t        for (JXNode jxNode : jxNodes2) {\n\t\t            System.out.println(jxNode);\n\t\t        }\n\t\t\n\t\t        System.out.println("--------------------");\n\t\t\n\t\t        //4.3查询student标签下带有id属性的name标签\n\t\t        List<JXNode> jxNodes3 = jxDocument.selN("//student/name[@id]");\n\t\t        for (JXNode jxNode : jxNodes3) {\n\t\t            System.out.println(jxNode);\n\t\t        }\n\t\t        System.out.println("--------------------");\n\t\t        //4.4查询student标签下带有id属性的name标签 并且id属性值为itcast\n\t\t\n\t\t        List<JXNode> jxNodes4 = jxDocument.selN("//student/name[@id=\'itcast\']");\n\t\t        for (JXNode jxNode : jxNodes4) {\n\t\t            System.out.println(jxNode);\n\t\t        }\n')])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"tomcat-servlet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-servlet"}},[t._v("#")]),t._v(" Tomcat&Servlet")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. web相关概念回顾\n2. web服务器软件：Tomcat\n3. Servlet入门学习\n")])])]),e("h3",{attrs:{id:"web相关概念回顾"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web相关概念回顾"}},[t._v("#")]),t._v(" web相关概念回顾")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 软件架构\n\t1. C/S：客户端/服务器端\n\t2. B/S：浏览器/服务器端\n\n2. 资源分类\n\t1. 静态资源：所有用户访问后，得到的结果都是一样的，称为静态资源.静态资源可以直接被浏览器解析\n\t\t* 如： html,css,JavaScript\n\t2. 动态资源:每个用户访问相同资源后，得到的结果可能不一样。称为动态资源。动态资源被访问后，需要先转换为静态资源，在返回给浏览器\n\t\t* 如：servlet/jsp,php,asp....\n\n\n3. 网络通信三要素\n\t1. IP：电子设备(计算机)在网络中的唯一标识。\n\t2. 端口：应用程序在计算机中的唯一标识。 0~65536\n\t3. 传输协议：规定了数据传输的规则\n\t\t1. 基础协议：\n\t\t\t1. tcp:安全协议，三次握手。 速度稍慢\n\t\t\t2. udp：不安全协议。 速度快\n")])])]),e("h3",{attrs:{id:"web服务器软件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web服务器软件"}},[t._v("#")]),t._v(" web服务器软件：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 服务器：安装了服务器软件的计算机\n* 服务器软件：接收用户的请求，处理请求，做出响应\n* web服务器软件：接收用户的请求，处理请求，做出响应。\n\t* 在web服务器软件中，可以部署web项目，让用户通过浏览器来访问这些项目\n\t* web容器\n\n\n* 常见的java相关的web服务器软件：\n\t* webLogic：oracle公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。\n\t* webSphere：IBM公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。\n\t* JBOSS：JBOSS公司的，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。\n\t* Tomcat：Apache基金组织，中小型的JavaEE服务器，仅仅支持少量的JavaEE规范servlet/jsp。开源的，免费的。\n\n\n* JavaEE：Java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范\n\n* Tomcat：web服务器软件\n\t1. 下载：http://tomcat.apache.org/\n\t2. 安装：解压压缩包即可。\n\t\t* 注意：安装目录建议不要有中文和空格\n\t3. 卸载：删除目录就行了\n\t4. 启动：\n\t\t* bin/startup.bat ,双击运行该文件即可\n\t\t* 访问：浏览器输入：http://localhost:8080 回车访问自己\n\t\t\t\t\t\t  http://别人的ip:8080 访问别人\n\t\t\n\t\t* 可能遇到的问题：\n\t\t\t1. 黑窗口一闪而过：\n\t\t\t\t* 原因： 没有正确配置JAVA_HOME环境变量\n\t\t\t\t* 解决方案：正确配置JAVA_HOME环境变量\n\n\t\t\t2. 启动报错：\n\t\t\t\t1. 暴力：找到占用的端口号，并且找到对应的进程，杀死该进程\n\t\t\t\t\t* netstat -ano\n\t\t\t\t2. 温柔：修改自身的端口号\n\t\t\t\t\t* conf/server.xml\n\t\t\t\t\t* <Connector port="8888" protocol="HTTP/1.1"\n\t\t               connectionTimeout="20000"\n\t\t               redirectPort="8445" />\n\t\t\t\t\t* 一般会将tomcat的默认端口号修改为80。80端口号是http协议的默认端口号。\n\t\t\t\t\t\t* 好处：在访问时，就不用输入端口号\n\t5. 关闭：\n\t\t1. 正常关闭：\n\t\t\t* bin/shutdown.bat\n\t\t\t* ctrl+c\n\t\t2. 强制关闭：\n\t\t\t* 点击启动窗口的×\n\t6. 配置:\n\t\t* 部署项目的方式：\n\t\t\t1. 直接将项目放到webapps目录下即可。\n\t\t\t\t* /hello：项目的访问路径--\x3e虚拟目录\n\t\t\t\t* 简化部署：将项目打成一个war包，再将war包放置到webapps目录下。\n\t\t\t\t\t* war包会自动解压缩\n\n\t\t\t2. 配置conf/server.xml文件\n\t\t\t\t在<Host>标签体中配置\n\t\t\t\t<Context docBase="D:\\hello" path="/hehe" />\n\t\t\t\t* docBase:项目存放的路径\n\t\t\t\t* path：虚拟目录\n\n\t\t\t3. 在conf\\Catalina\\localhost创建任意名称的xml文件。在文件中编写\n\t\t\t\t<Context docBase="D:\\hello" />\n\t\t\t\t* 虚拟目录：xml文件的名称\n\t\t\n\t\t* 静态项目和动态项目：\n\t\t\t* 目录结构\n\t\t\t\t* java动态项目的目录结构：\n\t\t\t\t\t-- 项目的根目录\n\t\t\t\t\t\t-- WEB-INF目录：\n\t\t\t\t\t\t\t-- web.xml：web项目的核心配置文件\n\t\t\t\t\t\t\t-- classes目录：放置字节码文件的目录\n\t\t\t\t\t\t\t-- lib目录：放置依赖的jar包\n\n\n\t\t* 将Tomcat集成到IDEA中，并且创建JavaEE的项目，部署项目。\n')])])]),e("h3",{attrs:{id:"servlet-server-applet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#servlet-server-applet"}},[t._v("#")]),t._v(" Servlet：  server applet")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 概念：运行在服务器端的小程序\n\t* Servlet就是一个接口，定义了Java类被浏览器访问到(tomcat识别)的规则。\n\t* 将来我们自定义一个类，实现Servlet接口，复写方法。\n\n\n* 快速入门：\n\t1. 创建JavaEE项目\n\t2. 定义一个类，实现Servlet接口\n\t\t* public class ServletDemo1 implements Servlet\n\t3. 实现接口中的抽象方法\n\t4. 配置Servlet\n\t\t 在web.xml中配置：\n\t    \x3c!--配置Servlet --\x3e\n\t    <servlet>\n\t        <servlet-name>demo1</servlet-name>\n\t        <servlet-class>cn.itcast.web.servlet.ServletDemo1</servlet-class>\n\t    </servlet>\n\t\n\t    <servlet-mapping>\n\t        <servlet-name>demo1</servlet-name>\n\t        <url-pattern>/demo1</url-pattern>\n\t    </servlet-mapping>\n\n* 执行原理：\n\t1. 当服务器接受到客户端浏览器的请求后，会解析请求URL路径，获取访问的Servlet的资源路径\n\t2. 查找web.xml文件，是否有对应的<url-pattern>标签体内容。\n\t3. 如果有，则在找到对应的<servlet-class>全类名\n\t4. tomcat会将字节码文件加载进内存，并且创建其对象\n\t5. 调用其方法\n\n* Servlet中的生命周期方法：\n\t1. 被创建：执行init方法，只执行一次\n\t\t* Servlet什么时候被创建？\n\t\t\t* 默认情况下，第一次被访问时，Servlet被创建\n\t\t\t* 可以配置执行Servlet的创建时机。\n\t\t\t\t* 在<servlet>标签下配置\n\t\t\t\t\t1. 第一次被访问时，创建\n                \t\t* <load-on-startup>的值为负数\n\t\t            2. 在服务器启动时，创建\n\t\t                * <load-on-startup>的值为0或正整数\n\n\n\t\t* Servlet的init方法，只执行一次，说明一个Servlet在内存中只存在一个对象，Servlet是单例的\n\t\t\t* 多个用户同时访问时，可能存在线程安全问题。\n\t\t\t* 解决：尽量不要在Servlet中定义成员变量。即使定义了成员变量，也不要对修改值\n\n\t2. 提供服务：执行service方法，执行多次\n\t\t* 每次访问Servlet时，Service方法都会被调用一次。\n\t3. 被销毁：执行destroy方法，只执行一次\n\t\t* Servlet被销毁时执行。服务器关闭时，Servlet被销毁\n\t\t* 只有服务器正常关闭时，才会执行destroy方法。\n\t\t* destroy方法在Servlet被销毁之前执行，一般用于释放资源\n\n* Servlet3.0：\n\t* 好处：\n\t\t* 支持注解配置。可以不需要web.xml了。\n\n\t* 步骤：\n\t\t1. 创建JavaEE项目，选择Servlet的版本3.0以上，可以不创建web.xml\n\t\t2. 定义一个类，实现Servlet接口\n\t\t3. 复写方法\n\t\t4. 在类上使用@WebServlet注解，进行配置\n\t\t\t* @WebServlet("资源路径")\n\n\n\t\t\t@Target({ElementType.TYPE})\n\t\t\t@Retention(RetentionPolicy.RUNTIME)\n\t\t\t@Documented\n\t\t\tpublic @interface WebServlet {\n\t\t\t    String name() default "";//相当于<Servlet-name>\n\t\t\t\n\t\t\t    String[] value() default {};//代表urlPatterns()属性配置\n\t\t\t\n\t\t\t    String[] urlPatterns() default {};//相当于<url-pattern>\n\t\t\t\n\t\t\t    int loadOnStartup() default -1;//相当于<load-on-startup>\n\t\t\t\n\t\t\t    WebInitParam[] initParams() default {};\n\t\t\t\n\t\t\t    boolean asyncSupported() default false;\n\t\t\t\n\t\t\t    String smallIcon() default "";\n\t\t\t\n\t\t\t    String largeIcon() default "";\n\t\t\t\n\t\t\t    String description() default "";\n\t\t\t\n\t\t\t    String displayName() default "";\n\t\t\t}\n')])])]),e("h3",{attrs:{id:"idea与tomcat的相关配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#idea与tomcat的相关配置"}},[t._v("#")]),t._v(" IDEA与tomcat的相关配置")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. IDEA会为每一个tomcat部署的项目单独建立一份配置文件\n\t* 查看控制台的log：Using CATALINA_BASE:   "C:\\Users\\fqy\\.IntelliJIdea2018.1\\system\\tomcat\\_itcast"\n\n2. 工作空间项目    和     tomcat部署的web项目\n\t* tomcat真正访问的是“tomcat部署的web项目”，"tomcat部署的web项目"对应着"工作空间项目" 的web目录下的所有资源\n\t* WEB-INF目录下的资源不能被浏览器直接访问。\n3. 断点调试：使用"小虫子"启动 dubug 启动\n')])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"servlet-http-request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#servlet-http-request"}},[t._v("#")]),t._v(" Servlet&HTTP&Request")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. Servlet\n2. HTTP协议\n3. Request\n")])])]),e("h3",{attrs:{id:"servlet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#servlet"}},[t._v("#")]),t._v(" Servlet：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念\n2. 步骤\n3. 执行原理\n4. 生命周期\n5. Servlet3.0 注解配置\n6. Servlet的体系结构\t\n\tServlet -- 接口\n\t\t|\n\tGenericServlet -- 抽象类\n\t\t|\n\tHttpServlet  -- 抽象类\n\n\t* GenericServlet：将Servlet接口中其他的方法做了默认空实现，只将service()方法作为抽象\n\t\t* 将来定义Servlet类时，可以继承GenericServlet，实现service()方法即可\n\n\t* HttpServlet：对http协议的一种封装，简化操作\n\t\t1. 定义类继承HttpServlet\n\t\t2. 复写doGet/doPost方法\n\n7. Servlet相关配置\n\t1. urlpartten:Servlet访问路径\n\t\t1. 一个Servlet可以定义多个访问路径 ： @WebServlet({"/d4","/dd4","/ddd4"})\n\t\t2. 路径定义规则：\n\t\t\t1. /xxx：路径匹配\n\t\t\t2. /xxx/xxx:多层路径，目录结构\n\t\t\t3. *.do：扩展名匹配\n')])])]),e("h3",{attrs:{id:"http"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 概念：Hyper Text Transfer Protocol 超文本传输协议\n\t* 传输协议：定义了，客户端和服务器端通信时，发送数据的格式\n\t* 特点：\n\t\t1. 基于TCP/IP的高级协议\n\t\t2. 默认端口号:80\n\t\t3. 基于请求/响应模型的:一次请求对应一次响应\n\t\t4. 无状态的：每次请求之间相互独立，不能交互数据\n\n\t* 历史版本：\n\t\t* 1.0：每一次请求响应都会建立新的连接\n\t\t* 1.1：复用连接\n\n* 请求消息数据格式\n\t1. 请求行\n\t\t请求方式 请求url 请求协议/版本\n\t\tGET /login.html\tHTTP/1.1\n\n\t\t* 请求方式：\n\t\t\t* HTTP协议有7中请求方式，常用的有2种\n\t\t\t\t* GET：\n\t\t\t\t\t1. 请求参数在请求行中，在url后。\n\t\t\t\t\t2. 请求的url长度有限制的\n\t\t\t\t\t3. 不太安全\n\t\t\t\t* POST：\n\t\t\t\t\t1. 请求参数在请求体中\n\t\t\t\t\t2. 请求的url长度没有限制的\n\t\t\t\t\t3. 相对安全\n\t2. 请求头：客户端浏览器告诉服务器一些信息\n\t\t请求头名称: 请求头值\n\t\t* 常见的请求头：\n\t\t\t1. User-Agent：浏览器告诉服务器，我访问你使用的浏览器版本信息\n\t\t\t\t* 可以在服务器端获取该头的信息，解决浏览器的兼容性问题\n\n\t\t\t2. Referer：http://localhost/login.html\n\t\t\t\t* 告诉服务器，我(当前请求)从哪里来？\n\t\t\t\t\t* 作用：\n\t\t\t\t\t\t1. 防盗链：\n\t\t\t\t\t\t2. 统计工作：\n\t3. 请求空行\n\t\t空行，就是用于分割POST请求的请求头，和请求体的。\n\t4. 请求体(正文)：\n\t\t* 封装POST请求消息的请求参数的\n\n\t* 字符串格式：\n\t\tPOST /login.html\tHTTP/1.1\n\t\tHost: localhost\n\t\tUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0\n\t\tAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\n\t\tAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\n\t\tAccept-Encoding: gzip, deflate\n\t\tReferer: http://localhost/login.html\n\t\tConnection: keep-alive\n\t\tUpgrade-Insecure-Requests: 1\n\t\t\n\t\tusername=zhangsan\t\n\n\n* 响应消息数据格式\n")])])]),e("h3",{attrs:{id:"request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request"}},[t._v("#")]),t._v(" Request：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. request对象和response对象的原理\n\t1. request和response对象是由服务器创建的。我们来使用它们\n\t2. request对象是来获取请求消息，response对象是来设置响应消息\n\n2. request对象继承体系结构：\t\n\tServletRequest\t\t--\t接口\n\t\t|\t继承\n\tHttpServletRequest\t-- 接口\n\t\t|\t实现\n\torg.apache.catalina.connector.RequestFacade 类(tomcat)\n\n3. request功能：\n\t1. 获取请求消息数据\n\t\t1. 获取请求行数据\n\t\t\t* GET /day14/demo1?name=zhangsan HTTP/1.1\n\t\t\t* 方法：\n\t\t\t\t1. 获取请求方式 ：GET\n\t\t\t\t\t* String getMethod()  \n\t\t\t\t2. (*)获取虚拟目录：/day14\n\t\t\t\t\t* String getContextPath()\n\t\t\t\t3. 获取Servlet路径: /demo1\n\t\t\t\t\t* String getServletPath()\n\t\t\t\t4. 获取get方式请求参数：name=zhangsan\n\t\t\t\t\t* String getQueryString()\n\t\t\t\t5. (*)获取请求URI：/day14/demo1\n\t\t\t\t\t* String getRequestURI():\t\t/day14/demo1\n\t\t\t\t\t* StringBuffer getRequestURL()  :http://localhost/day14/demo1\n\n\t\t\t\t\t* URL:统一资源定位符 ： http://localhost/day14/demo1\t中华人民共和国\n\t\t\t\t\t* URI：统一资源标识符 : /day14/demo1\t\t\t\t\t共和国\n\t\t\t\t\n\t\t\t\t6. 获取协议及版本：HTTP/1.1\n\t\t\t\t\t* String getProtocol()\n\n\t\t\t\t7. 获取客户机的IP地址：\n\t\t\t\t\t* String getRemoteAddr()\n\t\t\t\t\n\t\t2. 获取请求头数据\n\t\t\t* 方法：\n\t\t\t\t* (*)String getHeader(String name):通过请求头的名称获取请求头的值\n\t\t\t\t* Enumeration<String> getHeaderNames():获取所有的请求头名称\n\t\t\t\n\t\t3. 获取请求体数据:\n\t\t\t* 请求体：只有POST请求方式，才有请求体，在请求体中封装了POST请求的请求参数\n\t\t\t* 步骤：\n\t\t\t\t1. 获取流对象\n\t\t\t\t\t*  BufferedReader getReader()：获取字符输入流，只能操作字符数据\n\t\t\t\t\t*  ServletInputStream getInputStream()：获取字节输入流，可以操作所有类型数据\n\t\t\t\t\t\t* 在文件上传知识点后讲解\n\n\t\t\t\t2. 再从流对象中拿数据\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t2. 其他功能：\n\t\t1. 获取请求参数通用方式：不论get还是post请求方式都可以使用下列方法来获取请求参数\n\t\t\t1. String getParameter(String name):根据参数名称获取参数值    username=zs&password=123\n\t\t\t2. String[] getParameterValues(String name):根据参数名称获取参数值的数组  hobby=xx&hobby=game\n\t\t\t3. Enumeration<String> getParameterNames():获取所有请求的参数名称\n\t\t\t4. Map<String,String[]> getParameterMap():获取所有参数的map集合\n\n\t\t\t* 中文乱码问题：\n\t\t\t\t* get方式：tomcat 8 已经将get方式乱码问题解决了\n\t\t\t\t* post方式：会乱码\n\t\t\t\t\t* 解决：在获取参数前，设置request的编码request.setCharacterEncoding("utf-8");\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t2. 请求转发：一种在服务器内部的资源跳转方式\n\t\t\t1. 步骤：\n\t\t\t\t1. 通过request对象获取请求转发器对象：RequestDispatcher getRequestDispatcher(String path)\n\t\t\t\t2. 使用RequestDispatcher对象来进行转发：forward(ServletRequest request, ServletResponse response) \n\n\t\t\t2. 特点：\n\t\t\t\t1. 浏览器地址栏路径不发生变化\n\t\t\t\t2. 只能转发到当前服务器内部资源中。\n\t\t\t\t3. 转发是一次请求\n\n\n\t\t3. 共享数据：\n\t\t\t* 域对象：一个有作用范围的对象，可以在范围内共享数据\n\t\t\t* request域：代表一次请求的范围，一般用于请求转发的多个资源中共享数据\n\t\t\t* 方法：\n\t\t\t\t1. void setAttribute(String name,Object obj):存储数据\n\t\t\t\t2. Object getAttitude(String name):通过键获取值\n\t\t\t\t3. void removeAttribute(String name):通过键移除键值对\n\n\t\t4. 获取ServletContext：\n\t\t\t* ServletContext getServletContext()\n")])])]),e("h3",{attrs:{id:"案例-用户登录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例-用户登录"}},[t._v("#")]),t._v(" 案例：用户登录")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 用户登录案例需求：\n\t1.编写login.html登录页面\n\t\tusername & password 两个输入框\n\t2.使用Druid数据库连接池技术,操作mysql，day14数据库中user表\n\t3.使用JdbcTemplate技术封装JDBC\n\t4.登录成功跳转到SuccessServlet展示：登录成功！用户名,欢迎您\n\t5.登录失败跳转到FailServlet展示：登录失败，用户名或密码错误\n\n\n* 分析\n\n* 开发步骤\n\t1. 创建项目，导入html页面，配置文件，jar包\n\t2. 创建数据库环境\n\t\tCREATE DATABASE day14;\n\t\tUSE day14;\n\t\tCREATE TABLE USER(\n\t\t\n\t\t\tid INT PRIMARY KEY AUTO_INCREMENT,\n\t\t\tusername VARCHAR(32) UNIQUE NOT NULL,\n\t\t\tPASSWORD VARCHAR(32) NOT NULL\n\t\t);\n\n\t3. 创建包cn.itcast.domain,创建类User\n\t\tpackage cn.itcast.domain;\n\t\t/**\n\t\t * 用户的实体类\n\t\t */\n\t\tpublic class User {\n\t\t\n\t\t    private int id;\n\t\t    private String username;\n\t\t    private String password;\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t    public int getId() {\n\t\t        return id;\n\t\t    }\n\t\t\n\t\t    public void setId(int id) {\n\t\t        this.id = id;\n\t\t    }\n\t\t\n\t\t    public String getUsername() {\n\t\t        return username;\n\t\t    }\n\t\t\n\t\t    public void setUsername(String username) {\n\t\t        this.username = username;\n\t\t    }\n\t\t\n\t\t    public String getPassword() {\n\t\t        return password;\n\t\t    }\n\t\t\n\t\t    public void setPassword(String password) {\n\t\t        this.password = password;\n\t\t    }\n\t\t\n\t\t    @Override\n\t\t    public String toString() {\n\t\t        return \"User{\" +\n\t\t                \"id=\" + id +\n\t\t                \", username='\" + username + '\\'' +\n\t\t                \", password='\" + password + '\\'' +\n\t\t                '}';\n\t\t    }\n\t\t}\n\t4. 创建包cn.itcast.util,编写工具类JDBCUtils\n\t\tpackage cn.itcast.util;\n\n\t\timport com.alibaba.druid.pool.DruidDataSourceFactory;\n\t\t\n\t\timport javax.sql.DataSource;\n\t\timport javax.xml.crypto.Data;\n\t\timport java.io.IOException;\n\t\timport java.io.InputStream;\n\t\timport java.sql.Connection;\n\t\timport java.sql.SQLException;\n\t\timport java.util.Properties;\n\t\t\n\t\t/**\n\t\t * JDBC工具类 使用Durid连接池\n\t\t */\n\t\tpublic class JDBCUtils {\n\t\t\n\t\t    private static DataSource ds ;\n\t\t\n\t\t    static {\n\t\t\n\t\t        try {\n\t\t            //1.加载配置文件\n\t\t            Properties pro = new Properties();\n\t\t            //使用ClassLoader加载配置文件，获取字节输入流\n\t\t            InputStream is = JDBCUtils.class.getClassLoader().getResourceAsStream(\"druid.properties\");\n\t\t            pro.load(is);\n\t\t\n\t\t            //2.初始化连接池对象\n\t\t            ds = DruidDataSourceFactory.createDataSource(pro);\n\t\t\n\t\t        } catch (IOException e) {\n\t\t            e.printStackTrace();\n\t\t        } catch (Exception e) {\n\t\t            e.printStackTrace();\n\t\t        }\n\t\t    }\n\t\t\n\t\t    /**\n\t\t     * 获取连接池对象\n\t\t     */\n\t\t    public static DataSource getDataSource(){\n\t\t        return ds;\n\t\t    }\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t    /**\n\t\t     * 获取连接Connection对象\n\t\t     */\n\t\t    public static Connection getConnection() throws SQLException {\n\t\t        return  ds.getConnection();\n\t\t    }\n\t\t}\n\t5. 创建包cn.itcast.dao,创建类UserDao,提供login方法\n\t\t\n\t\tpackage cn.itcast.dao;\n\n\t\timport cn.itcast.domain.User;\n\t\timport cn.itcast.util.JDBCUtils;\n\t\timport org.springframework.dao.DataAccessException;\n\t\timport org.springframework.jdbc.core.BeanPropertyRowMapper;\n\t\timport org.springframework.jdbc.core.JdbcTemplate;\n\t\t\n\t\t/**\n\t\t * 操作数据库中User表的类\n\t\t */\n\t\tpublic class UserDao {\n\t\t\n\t\t    //声明JDBCTemplate对象共用\n\t\t    private JdbcTemplate template = new JdbcTemplate(JDBCUtils.getDataSource());\n\t\t\n\t\t    /**\n\t\t     * 登录方法\n\t\t     * @param loginUser 只有用户名和密码\n\t\t     * @return user包含用户全部数据,没有查询到，返回null\n\t\t     */\n\t\t    public User login(User loginUser){\n\t\t        try {\n\t\t            //1.编写sql\n\t\t            String sql = "select * from user where username = ? and password = ?";\n\t\t            //2.调用query方法\n\t\t            User user = template.queryForObject(sql,\n\t\t                    new BeanPropertyRowMapper<User>(User.class),\n\t\t                    loginUser.getUsername(), loginUser.getPassword());\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t            return user;\n\t\t        } catch (DataAccessException e) {\n\t\t            e.printStackTrace();//记录日志\n\t\t            return null;\n\t\t        }\n\t\t    }\n\t\t}\n\t\n\t6. 编写cn.itcast.web.servlet.LoginServlet类\n\t\tpackage cn.itcast.web.servlet;\n\n\t\timport cn.itcast.dao.UserDao;\n\t\timport cn.itcast.domain.User;\n\t\t\n\t\timport javax.servlet.ServletException;\n\t\timport javax.servlet.annotation.WebServlet;\n\t\timport javax.servlet.http.HttpServlet;\n\t\timport javax.servlet.http.HttpServletRequest;\n\t\timport javax.servlet.http.HttpServletResponse;\n\t\timport java.io.IOException;\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t@WebServlet("/loginServlet")\n\t\tpublic class LoginServlet extends HttpServlet {\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t    @Override\n\t\t    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\t\t        //1.设置编码\n\t\t        req.setCharacterEncoding("utf-8");\n\t\t        //2.获取请求参数\n\t\t        String username = req.getParameter("username");\n\t\t        String password = req.getParameter("password");\n\t\t        //3.封装user对象\n\t\t        User loginUser = new User();\n\t\t        loginUser.setUsername(username);\n\t\t        loginUser.setPassword(password);\n\t\t\n\t\t        //4.调用UserDao的login方法\n\t\t        UserDao dao = new UserDao();\n\t\t        User user = dao.login(loginUser);\n\t\t\n\t\t        //5.判断user\n\t\t        if(user == null){\n\t\t            //登录失败\n\t\t            req.getRequestDispatcher("/failServlet").forward(req,resp);\n\t\t        }else{\n\t\t            //登录成功\n\t\t            //存储数据\n\t\t            req.setAttribute("user",user);\n\t\t            //转发\n\t\t            req.getRequestDispatcher("/successServlet").forward(req,resp);\n\t\t        }\n\t\t\n\t\t    }\n\t\t\n\t\t    @Override\n\t\t    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\t\t        this.doGet(req,resp);\n\t\t    }\n\t\t}\n\n\t7. 编写FailServlet和SuccessServlet类\n\t\t@WebServlet("/successServlet")\n\t\tpublic class SuccessServlet extends HttpServlet {\n\t\t    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t        //获取request域中共享的user对象\n\t\t        User user = (User) request.getAttribute("user");\n\t\t\n\t\t        if(user != null){\n\t\t            //给页面写一句话\n\t\t\n\t\t            //设置编码\n\t\t            response.setContentType("text/html;charset=utf-8");\n\t\t            //输出\n\t\t            response.getWriter().write("登录成功！"+user.getUsername()+",欢迎您");\n\t\t        }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t    }\t\t\n\n\n\t\t@WebServlet("/failServlet")\n\t\tpublic class FailServlet extends HttpServlet {\n\t\t    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t        //给页面写一句话\n\t\t\n\t\t        //设置编码\n\t\t        response.setContentType("text/html;charset=utf-8");\n\t\t        //输出\n\t\t        response.getWriter().write("登录失败，用户名或密码错误");\n\t\t\n\t\t    }\n\t\t\n\t\t    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t        this.doPost(request,response);\n\t\t    }\n\t\t}\n\n\n\n\t8. login.html中form表单的action路径的写法\n\t\t* 虚拟目录+Servlet的资源路径\n\n\t9. BeanUtils工具类，简化数据封装\n\t\t* 用于封装JavaBean的\n\t\t1. JavaBean：标准的Java类\n\t\t\t1. 要求：\n\t\t\t\t1. 类必须被public修饰\n\t\t\t\t2. 必须提供空参的构造器\n\t\t\t\t3. 成员变量必须使用private修饰\n\t\t\t\t4. 提供公共setter和getter方法\n\t\t\t2. 功能：封装数据\n\n\n\t\t2. 概念：\n\t\t\t成员变量：\n\t\t\t属性：setter和getter方法截取后的产物\n\t\t\t\t例如：getUsername() --\x3e Username--\x3e username\n\n\n\t\t3. 方法：\n\t\t\t1. setProperty()\n\t\t\t2. getProperty()\n\t\t\t3. populate(Object obj , Map map):将map集合的键值对信息，封装到对应的JavaBean对象中\n')])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"response"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[t._v("#")]),t._v(" Response")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. HTTP协议：响应消息\n2. Response对象\n3. ServletContext对象\n")])])]),e("h3",{attrs:{id:"http协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http协议"}},[t._v("#")]),t._v(" HTTP协议：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 请求消息：客户端发送给服务器端的数据\n\t* 数据格式：\n\t\t1. 请求行\n\t\t2. 请求头\n\t\t3. 请求空行\n\t\t4. 请求体\n2. 响应消息：服务器端发送给客户端的数据\n\t* 数据格式：\n\t\t1. 响应行\n\t\t\t1. 组成：协议/版本 响应状态码 状态码描述\n\t\t\t2. 响应状态码：服务器告诉客户端浏览器本次请求和响应的一个状态。\n\t\t\t\t1. 状态码都是3位数字 \n\t\t\t\t2. 分类：\n\t\t\t\t\t1. 1xx：服务器就收客户端消息，但没有接受完成，等待一段时间后，发送1xx多状态码\n\t\t\t\t\t2. 2xx：成功。代表：200\n\t\t\t\t\t3. 3xx：重定向。代表：302(重定向)，304(访问缓存)\n\t\t\t\t\t4. 4xx：客户端错误。\n\t\t\t\t\t\t* 代表：\n\t\t\t\t\t\t\t* 404（请求路径没有对应的资源） \n\t\t\t\t\t\t\t* 405：请求方式没有对应的doXxx方法\n\t\t\t\t\t5. 5xx：服务器端错误。代表：500(服务器内部出现异常)\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t2. 响应头：\n\t\t\t1. 格式：头名称： 值\n\t\t\t2. 常见的响应头：\n\t\t\t\t1. Content-Type：服务器告诉客户端本次响应体数据格式以及编码格式\n\t\t\t\t2. Content-disposition：服务器告诉客户端以什么格式打开响应体数据\n\t\t\t\t\t* 值：\n\t\t\t\t\t\t* in-line:默认值,在当前页面内打开\n\t\t\t\t\t\t* attachment;filename=xxx：以附件形式打开响应体。文件下载\n\t\t3. 响应空行\n\t\t4. 响应体:传输的数据\n\n\n\t* 响应字符串格式\n\t\tHTTP/1.1 200 OK\n\t\tContent-Type: text/html;charset=UTF-8\n\t\tContent-Length: 101\n\t\tDate: Wed, 06 Jun 2018 07:08:42 GMT\n\n\t\t<html>\n\t\t  <head>\n\t\t    <title>$Title$</title>\n\t\t  </head>\n\t\t  <body>\n\t\t  hello , response\n\t\t  </body>\n\t\t</html>\n")])])]),e("h3",{attrs:{id:"response对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#response对象"}},[t._v("#")]),t._v(" Response对象")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 功能：设置响应消息\n\t1. 设置响应行\n\t\t1. 格式：HTTP/1.1 200 ok\n\t\t2. 设置状态码：setStatus(int sc) \n\t2. 设置响应头：setHeader(String name, String value) \n\t\t\n\t3. 设置响应体：\n\t\t* 使用步骤：\n\t\t\t1. 获取输出流\n\t\t\t\t* 字符输出流：PrintWriter getWriter()\n\n\t\t\t\t* 字节输出流：ServletOutputStream getOutputStream()\n\n\t\t\t2. 使用输出流，将数据输出到客户端浏览器\n\n\n* 案例：\n\t1. 完成重定向\n\t\t* 重定向：资源跳转的方式\n\t\t* 代码实现：\n\t\t\t//1. 设置状态码为302\n\t        response.setStatus(302);\n\t        //2.设置响应头location\n\t        response.setHeader("location","/day15/responseDemo2");\n\n\n\t        //简单的重定向方法\n\t        response.sendRedirect("/day15/responseDemo2");\n\n\t\t* 重定向的特点:redirect\n\t\t\t1. 地址栏发生变化\n\t\t\t2. 重定向可以访问其他站点(服务器)的资源\n\t\t\t3. 重定向是两次请求。不能使用request对象来共享数据\n\t\t* 转发的特点：forward\n\t\t\t1. 转发地址栏路径不变\n\t\t\t2. 转发只能访问当前服务器下的资源\n\t\t\t3. 转发是一次请求，可以使用request对象来共享数据\n\t\t\n\t\t* forward 和  redirect 区别\n\t\t\t\n\t\t* 路径写法：\n\t\t\t1. 路径分类\n\t\t\t\t1. 相对路径：通过相对路径不可以确定唯一资源\n\t\t\t\t\t* 如：./index.html\n\t\t\t\t\t* 不以/开头，以.开头路径\n\n\t\t\t\t\t* 规则：找到当前资源和目标资源之间的相对位置关系\n\t\t\t\t\t\t* ./：当前目录\n\t\t\t\t\t\t* ../:后退一级目录\n\t\t\t\t2. 绝对路径：通过绝对路径可以确定唯一资源\n\t\t\t\t\t* 如：http://localhost/day15/responseDemo2\t\t/day15/responseDemo2\n\t\t\t\t\t* 以/开头的路径\n\n\t\t\t\t\t* 规则：判断定义的路径是给谁用的？判断请求将来从哪儿发出\n\t\t\t\t\t\t* 给客户端浏览器使用：需要加虚拟目录(项目的访问路径)\n\t\t\t\t\t\t\t* 建议虚拟目录动态获取：request.getContextPath()\n\t\t\t\t\t\t\t* <a> , <form> 重定向...\n\t\t\t\t\t\t* 给服务器使用：不需要加虚拟目录\n\t\t\t\t\t\t\t* 转发路径\n')])])]),e("p",[t._v("​\t\t\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t2. 服务器输出字符数据到浏览器\n\t\t* 步骤：\n\t\t\t1. 获取字符输出流\n\t\t\t2. 输出数据\n\n\t\t* 注意：\n\t\t\t* 乱码问题：\n\t\t\t\t1. PrintWriter pw = response.getWriter();获取的流的默认编码是ISO-8859-1\n\t\t\t\t2. 设置该流的默认编码\n\t\t\t\t3. 告诉浏览器响应体使用的编码\n\n\t\t\t\t//简单的形式，设置编码，是在获取流之前设置\n    \t\t\tresponse.setContentType("text/html;charset=utf-8");\n\t3. 服务器输出字节数据到浏览器\n\t\t* 步骤：\n\t\t\t1. 获取字节输出流\n\t\t\t2. 输出数据\n\n\t4. 验证码\n\t\t1. 本质：图片\n\t\t2. 目的：防止恶意表单注册\n')])])]),e("h3",{attrs:{id:"servletcontext对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#servletcontext对象"}},[t._v("#")]),t._v(" ServletContext对象：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念：代表整个web应用，可以和程序的容器(服务器)来通信\n2. 获取：\n\t1. 通过request对象获取\n\t\trequest.getServletContext();\n\t2. 通过HttpServlet获取\n\t\tthis.getServletContext();\n3. 功能：\n\t1. 获取MIME类型：\n\t\t* MIME类型:在互联网通信过程中定义的一种文件数据类型\n\t\t\t* 格式： 大类型/小类型   text/html\t\timage/jpeg\n\n\t\t* 获取：String getMimeType(String file)  \n\t2. 域对象：共享数据\n\t\t1. setAttribute(String name,Object value)\n\t\t2. getAttribute(String name)\n\t\t3. removeAttribute(String name)\n\n\t\t* ServletContext对象范围：所有用户所有请求的数据\n\t3. 获取文件的真实(服务器)路径\n\t\t1. 方法：String getRealPath(String path)  \n\t\t\t String b = context.getRealPath("/b.txt");//web目录下资源访问\n\t         System.out.println(b);\n\t\n\t        String c = context.getRealPath("/WEB-INF/c.txt");//WEB-INF目录下的资源访问\n\t        System.out.println(c);\n\t\n\t        String a = context.getRealPath("/WEB-INF/classes/a.txt");//src目录下的资源访问\n\t        System.out.println(a);\n')])])]),e("h3",{attrs:{id:"案例-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例-3"}},[t._v("#")]),t._v(" 案例：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 文件下载需求：\n\t1. 页面显示超链接\n\t2. 点击超链接后弹出下载提示框\n\t3. 完成图片文件下载\n\n\n* 分析：\n\t1. 超链接指向的资源如果能够被浏览器解析，则在浏览器中展示，如果不能解析，则弹出下载提示框。不满足需求\n\t2. 任何资源都必须弹出下载提示框\n\t3. 使用响应头设置资源的打开方式：\n\t\t* content-disposition:attachment;filename=xxx\n\n\n* 步骤：\n\t1. 定义页面，编辑超链接href属性，指向Servlet，传递资源名称filename\n\t2. 定义Servlet\n\t\t1. 获取文件名称\n\t\t2. 使用字节输入流加载文件进内存\n\t\t3. 指定response的响应头： content-disposition:attachment;filename=xxx\n\t\t4. 将数据写出到response输出流\n\n\n* 问题：\n\t* 中文文件问题\n\t\t* 解决思路：\n\t\t\t1. 获取客户端使用的浏览器版本信息\n\t\t\t2. 根据不同的版本信息，设置filename的编码方式不同\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"cookie-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-session"}},[t._v("#")]),t._v(" Cookie&Session")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 会话技术\n\t1. Cookie\n\t2. Session\n2. JSP：入门学习\n")])])]),e("h3",{attrs:{id:"会话技术"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#会话技术"}},[t._v("#")]),t._v(" 会话技术")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 会话：一次会话中包含多次请求和响应。\n\t* 一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止\n2. 功能：在一次会话的范围内的多次请求间，共享数据\n3. 方式：\n\t1. 客户端会话技术：Cookie\n\t2. 服务器端会话技术：Session\n")])])]),e("h3",{attrs:{id:"cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念：客户端会话技术，将数据保存到客户端\n\n2. 快速入门：\n\t* 使用步骤：\n\t\t1. 创建Cookie对象，绑定数据\n\t\t\t* new Cookie(String name, String value) \n\t\t2. 发送Cookie对象\n\t\t\t* response.addCookie(Cookie cookie) \n\t\t3. 获取Cookie，拿到数据\n\t\t\t* Cookie[]  request.getCookies()  \n\n\n3. 实现原理\n\t* 基于响应头set-cookie和请求头cookie实现\n\n4. cookie的细节\n\t1. 一次可不可以发送多个cookie?\n\t\t* 可以\n\t\t* 可以创建多个Cookie对象，使用response调用多次addCookie方法发送cookie即可。\n\t2. cookie在浏览器中保存多长时间？\n\t\t1. 默认情况下，当浏览器关闭后，Cookie数据被销毁\n\t\t2. 持久化存储：\n\t\t\t* setMaxAge(int seconds)\n\t\t\t\t1. 正数：将Cookie数据写到硬盘的文件中。持久化存储。并指定cookie存活时间，时间到后，cookie文件自动失效\n\t\t\t\t2. 负数：默认值\n\t\t\t\t3. 零：删除cookie信息\n\t3. cookie能不能存中文？\n\t\t* 在tomcat 8 之前 cookie中不能直接存储中文数据。\n\t\t\t* 需要将中文数据转码---一般采用URL编码(%E3)\n\t\t* 在tomcat 8 之后，cookie支持中文数据。特殊字符还是不支持，建议使用URL编码存储，URL解码解析\n\t4. cookie共享问题？\n\t\t1. 假设在一个tomcat服务器中，部署了多个web项目，那么在这些web项目中cookie能不能共享？\n\t\t\t* 默认情况下cookie不能共享\n\n\t\t\t* setPath(String path):设置cookie的获取范围。默认情况下，设置当前的虚拟目录\n\t\t\t\t* 如果要共享，则可以将path设置为"/"\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t2. 不同的tomcat服务器间cookie共享问题？\n\t\t\t* setDomain(String path):如果设置一级域名相同，那么多个服务器之间cookie可以共享\n\t\t\t\t* setDomain(".baidu.com"),那么tieba.baidu.com和news.baidu.com中cookie可以共享\n\n\n5. Cookie的特点和作用\n\t1. cookie存储数据在客户端浏览器\n\t2. 浏览器对于单个cookie 的大小有限制(4kb) 以及 对同一个域名下的总cookie数量也有限制(20个)\n\n\t* 作用：\n\t\t1. cookie一般用于存出少量的不太敏感的数据\n\t\t2. 在不登录的情况下，完成服务器对客户端的身份识别\n\n6. 案例：记住上一次访问时间\n\t1. 需求：\n\t\t1. 访问一个Servlet，如果是第一次访问，则提示：您好，欢迎您首次访问。\n\t\t2. 如果不是第一次访问，则提示：欢迎回来，您上次访问时间为:显示时间字符串\n\n\t2. 分析：\n\t\t1. 可以采用Cookie来完成\n\t\t2. 在服务器中的Servlet判断是否有一个名为lastTime的cookie\n\t\t\t1. 有：不是第一次访问\n\t\t\t\t1. 响应数据：欢迎回来，您上次访问时间为:2018年6月10日11:50:20\n\t\t\t\t2. 写回Cookie：lastTime=2018年6月10日11:50:01\n\t\t\t2. 没有：是第一次访问\n\t\t\t\t1. 响应数据：您好，欢迎您首次访问\n\t\t\t\t2. 写回Cookie：lastTime=2018年6月10日11:50:01\n\n\t3. 代码实现：\n\t\tpackage cn.itcast.cookie;\n\n\t\timport javax.servlet.ServletException;\n\t\timport javax.servlet.annotation.WebServlet;\n\t\timport javax.servlet.http.Cookie;\n\t\timport javax.servlet.http.HttpServlet;\n\t\timport javax.servlet.http.HttpServletRequest;\n\t\timport javax.servlet.http.HttpServletResponse;\n\t\timport java.io.IOException;\n\t\timport java.net.URLDecoder;\n\t\timport java.net.URLEncoder;\n\t\timport java.text.SimpleDateFormat;\n\t\timport java.util.Date;\n\n\n\t@WebServlet("/cookieTest")\n\tpublic class CookieTest extends HttpServlet {\n\t    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t        //设置响应的消息体的数据格式以及编码\n\t        response.setContentType("text/html;charset=utf-8");\n\t\n\t        //1.获取所有Cookie\n\t        Cookie[] cookies = request.getCookies();\n\t        boolean flag = false;//没有cookie为lastTime\n\t        //2.遍历cookie数组\n\t        if(cookies != null && cookies.length > 0){\n\t            for (Cookie cookie : cookies) {\n\t                //3.获取cookie的名称\n\t                String name = cookie.getName();\n\t                //4.判断名称是否是：lastTime\n\t                if("lastTime".equals(name)){\n\t                    //有该Cookie，不是第一次访问\n\t\n\t                    flag = true;//有lastTime的cookie\n\t\n\t                    //设置Cookie的value\n\t                    //获取当前时间的字符串，重新设置Cookie的值，重新发送cookie\n\t                    Date date  = new Date();\n\t                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy年MM月dd日 HH:mm:ss");\n\t                    String str_date = sdf.format(date);\n\t                    System.out.println("编码前："+str_date);\n\t                    //URL编码\n\t                    str_date = URLEncoder.encode(str_date,"utf-8");\n\t                    System.out.println("编码后："+str_date);\n\t                    cookie.setValue(str_date);\n\t                    //设置cookie的存活时间\n\t                    cookie.setMaxAge(60 * 60 * 24 * 30);//一个月\n\t                    response.addCookie(cookie);\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t                    //响应数据\n\t                    //获取Cookie的value，时间\n\t                    String value = cookie.getValue();\n\t                    System.out.println("解码前："+value);\n\t                    //URL解码：\n\t                    value = URLDecoder.decode(value,"utf-8");\n\t                    System.out.println("解码后："+value);\n\t                    response.getWriter().write("<h1>欢迎回来，您上次访问时间为:"+value+"</h1>");\n\t\n\t                    break;\n\t\n\t                }\n\t            }\n\t        }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t        if(cookies == null || cookies.length == 0 || flag == false){\n\t            //没有，第一次访问\n\t\n\t            //设置Cookie的value\n\t            //获取当前时间的字符串，重新设置Cookie的值，重新发送cookie\n\t            Date date  = new Date();\n\t            SimpleDateFormat sdf = new SimpleDateFormat("yyyy年MM月dd日 HH:mm:ss");\n\t            String str_date = sdf.format(date);\n\t            System.out.println("编码前："+str_date);\n\t            //URL编码\n\t            str_date = URLEncoder.encode(str_date,"utf-8");\n\t            System.out.println("编码后："+str_date);\n\t\n\t            Cookie cookie = new Cookie("lastTime",str_date);\n\t            //设置cookie的存活时间\n\t            cookie.setMaxAge(60 * 60 * 24 * 30);//一个月\n\t            response.addCookie(cookie);\n\t\n\t            response.getWriter().write("<h1>您好，欢迎您首次访问</h1>");\n\t        }\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t    }\n\t\n\t    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t        this.doPost(request, response);\n\t    }\n\t}\n")])])]),e("h3",{attrs:{id:"jsp-入门学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsp-入门学习"}},[t._v("#")]),t._v(" JSP：入门学习")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 概念：\n\t* Java Server Pages： java服务器端页面\n\t\t* 可以理解为：一个特殊的页面，其中既可以指定定义html标签，又可以定义java代码\n\t\t* 用于简化书写！！！\n\n\n2. 原理\n\t* JSP本质上就是一个Servlet\n\n3. JSP的脚本：JSP定义Java代码的方式\n\t1. <%  代码 %>：定义的java代码，在service方法中。service方法中可以定义什么，该脚本中就可以定义什么。\n\t2. <%! 代码 %>：定义的java代码，在jsp转换后的java类的成员位置。\n\t3. <%= 代码 %>：定义的java代码，会输出到页面上。输出语句中可以定义什么，该脚本中就可以定义什么。\n\n\n4. JSP的内置对象：\n\t* 在jsp页面中不需要获取和创建，可以直接使用的对象\n\t* jsp一共有9个内置对象。\n\t* 今天学习3个：\n\t\t* request\n\t\t* response\n\t\t* out：字符输出流对象。可以将数据输出到页面上。和response.getWriter()类似\n\t\t\t* response.getWriter()和out.write()的区别：\n\t\t\t\t* 在tomcat服务器真正给客户端做出响应之前，会先找response缓冲区数据，再找out缓冲区数据。\n\t\t\t\t* response.getWriter()数据输出永远在out.write()之前\n\t\t\t\n5. 案例:改造Cookie案例\n")])])]),e("h3",{attrs:{id:"session-主菜"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#session-主菜"}},[t._v("#")]),t._v(" Session：主菜")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 概念：服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。HttpSession\n2. 快速入门：\n\t1. 获取HttpSession对象：\n\t\tHttpSession session = request.getSession();\n\t2. 使用HttpSession对象：\n\t\tObject getAttribute(String name)  \n\t\tvoid setAttribute(String name, Object value)\n\t\tvoid removeAttribute(String name)  \n\n3. 原理\n\t* Session的实现是依赖于Cookie的。\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('4. 细节：\n\t1. 当客户端关闭后，服务器不关闭，两次获取session是否为同一个？\n\t\t* 默认情况下。不是。\n\t\t* 如果需要相同，则可以创建Cookie,键为JSESSIONID，设置最大存活时间，让cookie持久化保存。\n\t\t\t Cookie c = new Cookie("JSESSIONID",session.getId());\n\t         c.setMaxAge(60*60);\n\t         response.addCookie(c);\n\n\t2. 客户端不关闭，服务器关闭后，两次获取的session是同一个吗？\n\t\t* 不是同一个，但是要确保数据不丢失。tomcat自动完成以下工作\n\t\t\t* session的钝化：\n\t\t\t\t* 在服务器正常关闭之前，将session对象系列化到硬盘上\n\t\t\t* session的活化：\n\t\t\t\t* 在服务器启动后，将session文件转化为内存中的session对象即可。\n\t\t\t\n\t3. session什么时候被销毁？\n\t\t1. 服务器关闭\n\t\t2. session对象调用invalidate() 。\n\t\t3. session默认失效时间 30分钟\n\t\t\t选择性配置修改\t\n\t\t\t<session-config>\n\t\t        <session-timeout>30</session-timeout>\n\t\t    </session-config>\n\n 5. session的特点\n\t 1. session用于存储一次会话的多次请求的数据，存在服务器端\n\t 2. session可以存储任意类型，任意大小的数据\n\n\t* session与Cookie的区别：\n\t\t1. session存储数据在服务器端，Cookie在客户端\n\t\t2. session没有数据大小限制，Cookie有\n\t\t3. session数据安全，Cookie相对于不安全\n')])])]),e("h3",{attrs:{id:"案例-验证码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例-验证码"}},[t._v("#")]),t._v(" 案例：验证码")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 案例需求：\n\t1. 访问带有验证码的登录页面login.jsp\n\t2. 用户输入用户名，密码以及验证码。\n\t\t* 如果用户名和密码输入有误，跳转登录页面，提示:用户名或密码错误\n\t\t* 如果验证码输入有误，跳转登录页面，提示：验证码错误\n\t\t* 如果全部输入正确，则跳转到主页success.jsp，显示：用户名,欢迎您\n\n\n2. 分析：\n")])])]),e("p",[t._v("​")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"el-jstl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#el-jstl"}},[t._v("#")]),t._v(" EL&JSTL")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. JSP:\n\t1. 指令\n\t2. 注释\n\t3. 内置对象\n\n2. MVC开发模式\n3. EL表达式\n4. JSTL标签\n5. 三层架构\n")])])]),e("h3",{attrs:{id:"jsp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsp"}},[t._v("#")]),t._v(" JSP:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 指令\n\t* 作用：用于配置JSP页面，导入资源文件\n\t* 格式：\n\t\t<%@ 指令名称 属性名1=属性值1 属性名2=属性值2 ... %>\n\t* 分类：\n\t\t1. page\t\t： 配置JSP页面的\n\t\t\t* contentType：等同于response.setContentType()\n\t\t\t\t1. 设置响应体的mime类型以及字符集\n\t\t\t\t2. 设置当前jsp页面的编码（只能是高级的IDE才能生效，如果使用低级工具，则需要设置pageEncoding属性设置当前页面的字符集）\n\t\t\t* import：导包\n\t\t\t* errorPage：当前页面发生异常后，会自动跳转到指定的错误页面\n\t\t\t* isErrorPage：标识当前也是是否是错误页面。\n\t\t\t\t* true：是，可以使用内置对象exception\n\t\t\t\t* false：否。默认值。不可以使用内置对象exception\n\n\n\t\t2. include\t： 页面包含的。导入页面的资源文件\n\t\t\t* <%@include file="top.jsp"%>\n\t\t3. taglib\t： 导入资源\n\t\t\t* <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>\n\t\t\t\t* prefix：前缀，自定义的\n2. 注释:\n\t1. html注释：\n\t\t\x3c!-- --\x3e:只能注释html代码片段\n\t2. jsp注释：推荐使用\n\t\t<%-- --%>：可以注释所有\n\n\n3. 内置对象\n\t* 在jsp页面中不需要创建，直接使用的对象\n\t* 一共有9个：\n\t\t\t变量名\t\t\t\t\t真实类型\t\t\t\t\t\t作用\n\t\t* pageContext\t\t\t\tPageContext\t\t\t\t\t当前页面共享数据，还可以获取其他八个内置对象\n\t\t* request\t\t\t\t\tHttpServletRequest\t\t\t一次请求访问的多个资源(转发)\n\t\t* session\t\t\t\t\tHttpSession\t\t\t\t\t一次会话的多个请求间\n\t\t* application\t\t\t\tServletContext\t\t\t\t所有用户间共享数据\n\t\t* response\t\t\t\t\tHttpServletResponse\t\t\t响应对象\n\t\t* page\t\t\t\t\t\tObject\t\t\t\t\t\t当前页面(Servlet)的对象  this\n\t\t* out\t\t\t\t\t\tJspWriter\t\t\t\t\t输出对象，数据输出到页面上\n\t\t* config\t\t\t\t\tServletConfig\t\t\t\tServlet的配置对象\n\t\t* exception\t\t\t\t\tThrowable\t\t\t\t\t异常对象\n')])])]),e("p",[t._v("​")]),t._v(" "),e("h3",{attrs:{id:"mvc-开发模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvc-开发模式"}},[t._v("#")]),t._v(" MVC：开发模式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. jsp演变历史\n\t1. 早期只有servlet，只能使用response输出标签数据，非常麻烦\n\t2. 后来又jsp，简化了Servlet的开发，如果过度使用jsp，在jsp中即写大量的java代码，有写html表，造成难于维护，难于分工协作\n\t3. 再后来，java的web开发，借鉴mvc开发模式，使得程序的设计更加合理性\n\n2. MVC：\n\t1. M：Model，模型。JavaBean\n\t\t* 完成具体的业务操作，如：查询数据库，封装对象\n\t2. V：View，视图。JSP\n\t\t* 展示数据\n\t3. C：Controller，控制器。Servlet\n\t\t* 获取用户的输入\n\t\t* 调用模型\n\t\t* 将数据交给视图进行展示\n\n\n\t* 优缺点：\n\t\t1. 优点：\n\t\t\t1. 耦合性低，方便维护，可以利于分工协作\n\t\t\t2. 重用性高\n\n\t\t2. 缺点：\n\t\t\t1. 使得项目架构变得复杂，对开发人员要求高\n")])])]),e("h3",{attrs:{id:"el表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#el表达式"}},[t._v("#")]),t._v(" EL表达式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念：Expression Language 表达式语言\n2. 作用：替换和简化jsp页面中java代码的编写\n3. 语法：${表达式}\n4. 注意：\n\t* jsp默认支持el表达式的。如果要忽略el表达式\n\t\t1. 设置jsp中page指令中：isELIgnored="true" 忽略当前jsp页面中所有的el表达式\n\t\t2. \\${表达式} ：忽略当前这个el表达式\n\n\n5. 使用：\n\t1. 运算：\n\t\t* 运算符：\n\t\t\t1. 算数运算符： + - * /(div) %(mod)\n\t\t\t2. 比较运算符： > < >= <= == !=\n\t\t\t3. 逻辑运算符： &&(and) ||(or) !(not)\n\t\t\t4. 空运算符： empty\n\t\t\t\t* 功能：用于判断字符串、集合、数组对象是否为null或者长度是否为0\n\t\t\t\t* ${empty list}:判断字符串、集合、数组对象是否为null或者长度为0\n\t\t\t\t* ${not empty str}:表示判断字符串、集合、数组对象是否不为null 并且 长度>0\n\t2. 获取值\n\t\t1. el表达式只能从域对象中获取值\n\t\t2. 语法：\n\t\t\t1. ${域名称.键名}：从指定域中获取指定键的值\n\t\t\t\t* 域名称：\n\t\t\t\t\t1. pageScope\t\t--\x3e pageContext\n\t\t\t\t\t2. requestScope \t--\x3e request\n\t\t\t\t\t3. sessionScope \t--\x3e session\n\t\t\t\t\t4. applicationScope --\x3e application（ServletContext）\n\t\t\t\t* 举例：在request域中存储了name=张三\n\t\t\t\t* 获取：${requestScope.name}\n\n\t\t\t2. ${键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。\n')])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t\t3. 获取对象、List集合、Map集合的值\n\t\t\t\t1. 对象：${域名称.键名.属性名}\n\t\t\t\t\t* 本质上会去调用对象的getter方法\n\n\t\t\t\t2. List集合：${域名称.键名[索引]}\n\n\t\t\t\t3. Map集合：\n\t\t\t\t\t* ${域名称.键名.key名称}\n\t\t\t\t\t* ${域名称.键名["key名称"]}\n\n\n\t3. 隐式对象：\n\t\t* el表达式中有11个隐式对象\n\t\t* pageContext：\n\t\t\t* 获取jsp其他八个内置对象\n\t\t\t\t* ${pageContext.request.contextPath}：动态获取虚拟目录\n')])])]),e("p",[t._v("​")]),t._v(" "),e("h3",{attrs:{id:"jstl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jstl"}},[t._v("#")]),t._v(" JSTL")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 概念：JavaServer Pages Tag Library  JSP标准标签库\n\t* 是由Apache组织提供的开源的免费的jsp标签\t\t<标签>\n\n2. 作用：用于简化和替换jsp页面上的java代码\t\t\n\n3. 使用步骤：\n\t1. 导入jstl相关jar包\n\t2. 引入标签库：taglib指令：  <%@ taglib %>\n\t3. 使用标签\n\n4. 常用的JSTL标签\n\t1. if:相当于java代码的if语句\n\t\t1. 属性：\n            * test 必须属性，接受boolean表达式\n                * 如果表达式为true，则显示if标签体内容，如果为false，则不显示标签体内容\n                * 一般情况下，test属性值会结合el表达式一起使用\n   \t\t 2. 注意：\n       \t\t * c:if标签没有else情况，想要else情况，则可以在定义一个c:if标签\n\t2. choose:相当于java代码的switch语句\n\t\t1. 使用choose标签声明         \t\t\t相当于switch声明\n        2. 使用when标签做判断         \t\t\t相当于case\n        3. 使用otherwise标签做其他情况的声明    \t相当于default\n\n\t3. foreach:相当于java代码的for语句\n\n5. 练习：\n\t* 需求：在request域中有一个存有User对象的List集合。需要使用jstl+el将list集合数据展示到jsp页面的表格table中\n")])])]),e("h3",{attrs:{id:"三层架构-软件设计架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三层架构-软件设计架构"}},[t._v("#")]),t._v(" 三层架构：软件设计架构")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 界面层(表示层)：用户看的得界面。用户可以通过界面上的组件和服务器进行交互\n2. 业务逻辑层：处理业务逻辑的。\n3. 数据访问层：操作数据存储文件。\n")])])]),e("h3",{attrs:{id:"案例-用户信息列表展示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例-用户信息列表展示"}},[t._v("#")]),t._v(" 案例：用户信息列表展示")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. 需求：用户信息的增删改查操作\n2. 设计：\n\t1. 技术选型：Servlet+JSP+MySQL+JDBCTempleat+Duird+BeanUtilS+tomcat\n\t2. 数据库设计：\n\t\tcreate database day17; -- 创建数据库\n\t\tuse day17; \t\t\t   -- 使用数据库\n\t\tcreate table user(   -- 创建表\n\t\t\tid int primary key auto_increment,\n\t\t\tname varchar(20) not null,\n\t\t\tgender varchar(5),\n\t\t\tage int,\n\t\t\taddress varchar(32),\n\t\t\tqq\tvarchar(20),\n\t\t\temail varchar(50)\n\t\t);\n\n3. 开发：\n\t1. 环境搭建\n\t\t1. 创建数据库环境\n\t\t2. 创建项目，导入需要的jar包\n\n\t2. 编码\n\n\n4. 测试\n5. 部署运维\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"filter-listener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filter-listener"}},[t._v("#")]),t._v(" Filter&Listener")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. Filter：过滤器\n2. Listener：监听器\n")])])]),e("h2",{attrs:{id:"filter-过滤器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filter-过滤器"}},[t._v("#")]),t._v(" Filter：过滤器")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念：\n\t* 生活中的过滤器：净水器,空气净化器，土匪、\n\t* web中的过滤器：当访问服务器的资源时，过滤器可以将请求拦截下来，完成一些特殊的功能。\n\t* 过滤器的作用：\n\t\t* 一般用于完成通用的操作。如：登录验证、统一编码处理、敏感字符过滤...\n\n2. 快速入门：\n\t1. 步骤：\n\t\t1. 定义一个类，实现接口Filter\n\t\t2. 复写方法\n\t\t3. 配置拦截路径\n\t\t\t1. web.xml\n\t\t\t2. 注解\n\t2. 代码：\n\t\t@WebFilter("/*")//访问所有资源之前，都会执行该过滤器\n\t\tpublic class FilterDemo1 implements Filter {\n\t\t    @Override\n\t\t    public void init(FilterConfig filterConfig) throws ServletException {\n\t\t\n\t\t    }\n\t\t\n\t\t    @Override\n\t\t    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n\t\t        System.out.println("filterDemo1被执行了....");\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t        //放行\n\t\t        filterChain.doFilter(servletRequest,servletResponse);\n\t\t\n\t\t    }\n\t\t\n\t\t    @Override\n\t\t    public void destroy() {\n\t\t\n\t\t    }\n\t\t}\n\n\n3. 过滤器细节：\n\t1. web.xml配置\t\n\t\t<filter>\n\t        <filter-name>demo1</filter-name>\n\t        <filter-class>cn.itcast.web.filter.FilterDemo1</filter-class>\n\t    </filter>\n\t    <filter-mapping>\n\t        <filter-name>demo1</filter-name>\n\t\t\t\x3c!-- 拦截路径 --\x3e\n\t        <url-pattern>/*</url-pattern>\n\t    </filter-mapping>\n\t2. 过滤器执行流程\n\t\t1. 执行过滤器\n\t\t2. 执行放行后的资源\n\t\t3. 回来执行过滤器放行代码下边的代码\n\t3. 过滤器生命周期方法\n\t\t1. init:在服务器启动后，会创建Filter对象，然后调用init方法。只执行一次。用于加载资源\n\t\t2. doFilter:每一次请求被拦截资源时，会执行。执行多次\n\t\t3. destroy:在服务器关闭后，Filter对象被销毁。如果服务器是正常关闭，则会执行destroy方法。只执行一次。用于释放资源\n\t4. 过滤器配置详解\n\t\t* 拦截路径配置：\n\t\t\t1. 具体资源路径： /index.jsp   只有访问index.jsp资源时，过滤器才会被执行\n\t\t\t2. 拦截目录： /user/*\t访问/user下的所有资源时，过滤器都会被执行\n\t\t\t3. 后缀名拦截： *.jsp\t\t访问所有后缀名为jsp资源时，过滤器都会被执行\n\t\t\t4. 拦截所有资源：/*\t\t访问所有资源时，过滤器都会被执行\n\t\t* 拦截方式配置：资源被访问的方式\n\t\t\t* 注解配置：\n\t\t\t\t* 设置dispatcherTypes属性\n\t\t\t\t\t1. REQUEST：默认值。浏览器直接请求资源\n\t\t\t\t\t2. FORWARD：转发访问资源\n\t\t\t\t\t3. INCLUDE：包含访问资源\n\t\t\t\t\t4. ERROR：错误跳转资源\n\t\t\t\t\t5. ASYNC：异步访问资源\n\t\t\t* web.xml配置\n\t\t\t\t* 设置<dispatcher></dispatcher>标签即可\n\t\t\t\n\t5. 过滤器链(配置多个过滤器)\n\t\t* 执行顺序：如果有两个过滤器：过滤器1和过滤器2\n\t\t\t1. 过滤器1\n\t\t\t2. 过滤器2\n\t\t\t3. 资源执行\n\t\t\t4. 过滤器2\n\t\t\t5. 过滤器1 \n\n\t\t* 过滤器先后顺序问题：\n\t\t\t1. 注解配置：按照类名的字符串比较规则比较，值小的先执行\n\t\t\t\t* 如： AFilter 和 BFilter，AFilter就先执行了。\n\t\t\t2. web.xml配置： <filter-mapping>谁定义在上边，谁先执行\n4. 案例：\n\t1. 案例1_登录验证\n\t\t* 需求：\n\t\t\t1. 访问day17_case案例的资源。验证其是否登录\n\t\t\t2. 如果登录了，则直接放行。\n\t\t\t3. 如果没有登录，则跳转到登录页面，提示"您尚未登录，请先登录"。\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t2. 案例2_敏感词汇过滤\n\t\t* 需求：\n\t\t\t1. 对day17_case案例录入的数据进行敏感词汇过滤\n\t\t\t2. 敏感词汇参考《敏感词汇.txt》\n\t\t\t3. 如果是敏感词汇，替换为 *** \n\n\t\t* 分析：\n\t\t\t1. 对request对象进行增强。增强获取参数相关方法\n\t\t\t2. 放行。传递代理对象\n\n\n\t\t* 增强对象的功能：\n\t\t\t* 设计模式：一些通用的解决固定问题的方式\n\t\t\t1. 装饰模式\n\t\t\t2. 代理模式\n\t\t\t\t* 概念：\n\t\t\t\t\t1. 真实对象：被代理的对象\n\t\t\t\t\t2. 代理对象：\n\t\t\t\t\t3. 代理模式：代理对象代理真实对象，达到增强真实对象功能的目的\n\t\t\t \t* 实现方式：\n\t\t\t\t \t1. 静态代理：有一个类文件描述代理模式\n\t\t\t\t \t2. 动态代理：在内存中形成代理类\n\t\t\t\t\t\t* 实现步骤：\n\t\t\t\t\t\t\t1. 代理对象和真实对象实现相同的接口\n\t\t\t\t\t\t\t2. 代理对象 = Proxy.newProxyInstance();\n\t\t\t\t\t\t\t3. 使用代理对象调用方法。\n\t\t\t\t\t\t\t4. 增强方法\n\n\t\t\t\t\t\t* 增强方式：\n\t\t\t\t\t\t\t1. 增强参数列表\n\t\t\t\t\t\t\t2. 增强返回值类型\n\t\t\t\t\t\t\t3. 增强方法体执行逻辑\t\n")])])]),e("h3",{attrs:{id:"listener-监听器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listener-监听器"}},[t._v("#")]),t._v(" Listener：监听器")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("* 概念：web的三大组件之一。\n\t* 事件监听机制\n\t\t* 事件\t：一件事情\n\t\t* 事件源 ：事件发生的地方\n\t\t* 监听器 ：一个对象\n\t\t* 注册监听：将事件、事件源、监听器绑定在一起。 当事件源上发生某个事件后，执行监听器代码\n\n\n* ServletContextListener:监听ServletContext对象的创建和销毁\n\t* 方法：\n\t\t* void contextDestroyed(ServletContextEvent sce) ：ServletContext对象被销毁之前会调用该方法\n\t\t* void contextInitialized(ServletContextEvent sce) ：ServletContext对象创建后会调用该方法\n\t* 步骤：\n\t\t1. 定义一个类，实现ServletContextListener接口\n\t\t2. 复写方法\n\t\t3. 配置\n\t\t\t1. web.xml\n\t\t\t\t\t<listener>\n \t\t\t\t\t <listener-class>cn.itcast.web.listener.ContextLoaderListener</listener-class>\n\n\t\t\t\t\t</listener>\n\n\t\t\t\t\t* 指定初始化参数<context-param>\n\t\t\t2. 注解：\n\t\t\t\t* @WebListener\n")])])]),e("hr"),t._v(" "),e("h3",{attrs:{id:"jquery-基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-基础"}},[t._v("#")]),t._v(" JQuery 基础")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. JQuery 基础：\n\t1. 概念\n\t2. 快速入门\n\t3. JQuery对象和JS对象区别与转换\n\t4. 选择器\n\t5. DOM操作\n\t6. 案例\n")])])]),e("h2",{attrs:{id:"jquery-基础-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-基础-2"}},[t._v("#")]),t._v(" JQuery 基础：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念： 一个JavaScript框架。简化JS开发\n\t* jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。jQuery设计的宗旨\t是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优\t化HTML文档操作、事件处理、动画设计和Ajax交互。\n\n\t* JavaScript框架：本质上就是一些js文件，封装了js的原生代码而已\n2. 快速入门\n\t1. 步骤：\n\t\t1. 下载JQuery\n\t\t\t* 目前jQuery有三个大版本：\n\t\t\t\t1.x：兼容ie678,使用最为广泛的，官方只做BUG维护，\n\t\t\t\t\t 功能不再新增。因此一般项目来说，使用1.x版本就可以了，\n\t\t\t\t\t 最终版本：1.12.4 (2016年5月20日)\n\t\t\t\t2.x：不兼容ie678，很少有人使用，官方只做BUG维护，\n\t\t\t\t\t 功能不再新增。如果不考虑兼容低版本的浏览器可以使用2.x，\n\t\t\t\t\t 最终版本：2.2.4 (2016年5月20日)\n\t\t\t\t3.x：不兼容ie678，只支持最新的浏览器。除非特殊要求，\n\t\t\t\t\t 一般不会使用3.x版本的，很多老的jQuery插件不支持这个版本。\n\t\t\t\t\t 目前该版本是官方主要更新维护的版本。最新版本：3.2.1（2017年3月20日）\n\t\t\t* jquery-xxx.js 与 jquery-xxx.min.js区别：\n\t\t\t\t1. jquery-xxx.js：开发版本。给程序员看的，有良好的缩进和注释。体积大一些\n\t\t\t\t2. jquery-xxx.min.js：生产版本。程序中使用，没有缩进。体积小一些。程序加载更快\n\n\t\t2. 导入JQuery的js文件：导入min.js文件\n\t\t3. 使用\n\t\t\tvar div1 = $("#div1");\n\n\t\t\talert(div1.html());\n\n\n3. JQuery对象和JS对象区别与转换\n\t1. JQuery对象在操作时，更加方便。\n    2. JQuery对象和js对象方法不通用的.\n    3. 两者相互转换\n        * jq -- > js : jq对象[索引] 或者 jq对象.get(索引)\n        * js -- > jq : $(js对象)\n\n\n4. 选择器：筛选具有相似特征的元素(标签)\n\n\t1. 基本操作学习：\n\t\t1. 事件绑定\n\t\t\t//1.获取b1按钮\n            $("#b1").click(function(){\n                alert("abc");\n            });\n\t\t2. 入口函数\n\t\t\t $(function () {\n\t           \n   \t\t\t });\n\t\t\t window.onload  和 $(function) 区别\n                 * window.onload 只能定义一次,如果定义多次，后边的会将前边的覆盖掉\n                 * $(function)可以定义多次的。\n\t\t3. 样式控制：css方法\n\t\t\t // $("#div1").css("background-color","red");\n      \t\t$("#div1").css("backgroundColor","pink");\n\n\n\t2. 分类\n\t\t1. 基本选择器\n\t\t\t1. 标签选择器（元素选择器）\n\t\t\t\t* 语法： $("html标签名") 获得所有匹配标签名称的元素\n\t\t\t2. id选择器 \n\t\t\t\t* 语法： $("#id的属性值") 获得与指定id属性值匹配的元素\n\t\t\t3. 类选择器\n\t\t\t\t* 语法： $(".class的属性值") 获得与指定的class属性值匹配的元素\n\t\t\t4. 并集选择器：\n\t\t\t\t* 语法： $("选择器1,选择器2....") 获取多个选择器选中的所有元素\n\t\t2. 层级选择器\n\t\t\t1. 后代选择器\n\t\t\t\t* 语法： $("A B ") 选择A元素内部的所有B元素\t\t\n\t\t\t2. 子选择器\n\t\t\t\t* 语法： $("A > B") 选择A元素内部的所有B子元素\n\t\t3. 属性选择器\n\t\t\t1. 属性名称选择器 \n\t\t\t\t* 语法： $("A[属性名]") 包含指定属性的选择器\n\t\t\t2. 属性选择器\n\t\t\t\t* 语法： $("A[属性名=\'值\']") 包含指定属性等于指定值的选择器\n\t\t\t3. 复合属性选择器\n\t\t\t\t* 语法： $("A[属性名=\'值\'][]...") 包含多个属性条件的选择器\n\t\t4. 过滤选择器\n\t\t\t1. 首元素选择器 \n\t\t\t\t* 语法： :first 获得选择的元素中的第一个元素\n\t\t\t2. 尾元素选择器 \n\t\t\t\t* 语法： :last 获得选择的元素中的最后一个元素\n\t\t\t3. 非元素选择器\n\t\t\t\t* 语法： :not(selector) 不包括指定内容的元素\n\t\t\t4. 偶数选择器\n\t\t\t\t* 语法： :even 偶数，从 0 开始计数\n\t\t\t5. 奇数选择器\n\t\t\t\t* 语法： :odd 奇数，从 0 开始计数\n\t\t\t6. 等于索引选择器\n\t\t\t\t* 语法： :eq(index) 指定索引元素\n\t\t\t7. 大于索引选择器 \n\t\t\t\t* 语法： :gt(index) 大于指定索引元素\n\t\t\t8. 小于索引选择器 \n\t\t\t\t* 语法： :lt(index) 小于指定索引元素\n\t\t\t9. 标题选择器\n\t\t\t\t* 语法： :header 获得标题（h1~h6）元素，固定写法\n\t\t5. 表单过滤选择器\n\t\t\t1. 可用元素选择器 \n\t\t\t\t* 语法： :enabled 获得可用元素\n\t\t\t2. 不可用元素选择器 \n\t\t\t\t* 语法： :disabled 获得不可用元素\n\t\t\t3. 选中选择器 \n\t\t\t\t* 语法： :checked 获得单选/复选框选中的元素\n\t\t\t4. 选中选择器 \n\t\t\t\t* 语法： :selected 获得下拉框选中的元素\n\n5. DOM操作\n\t1. 内容操作\n\t\t1. html(): 获取/设置元素的标签体内容   <a><font>内容</font></a>  --\x3e <font>内容</font>\n\t\t2. text(): 获取/设置元素的标签体纯文本内容   <a><font>内容</font></a> --\x3e 内容\n\t\t3. val()： 获取/设置元素的value属性值\n\t2. 属性操作\n\t\t1. 通用属性操作\n\t\t\t1. attr(): 获取/设置元素的属性\n\t\t\t2. removeAttr():删除属性\n\t\t\t3. prop():获取/设置元素的属性\n\t\t\t4. removeProp():删除属性\n\n\t\t\t* attr和prop区别？\n\t\t\t\t1. 如果操作的是元素的固有属性，则建议使用prop\n\t\t\t\t2. 如果操作的是元素自定义的属性，则建议使用attr\n\t\t2. 对class属性操作\n\t\t\t1. addClass():添加class属性值\n\t\t\t2. removeClass():删除class属性值\n\t\t\t3. toggleClass():切换class属性\n\t\t\t\t* toggleClass("one"): \n\t\t\t\t\t* 判断如果元素对象上存在class="one"，则将属性值one删除掉。  如果元素对象上不存在class="one"，则添加\n\t\t\t4. css():\n\t3. CRUD操作:\n\t\t1. append():父元素将子元素追加到末尾\n\t\t\t* 对象1.append(对象2): 将对象2添加到对象1元素内部，并且在末尾\n\t\t2. prepend():父元素将子元素追加到开头\n\t\t\t* 对象1.prepend(对象2):将对象2添加到对象1元素内部，并且在开头\n\t\t3. appendTo():\n\t\t\t* 对象1.appendTo(对象2):将对象1添加到对象2内部，并且在末尾\n\t\t4. prependTo()：\n\t\t\t* 对象1.prependTo(对象2):将对象1添加到对象2内部，并且在开头\n\n\n\t\t5. after():添加元素到元素后边\n\t\t\t* 对象1.after(对象2)： 将对象2添加到对象1后边。对象1和对象2是兄弟关系\n\t\t6. before():添加元素到元素前边\n\t\t\t* 对象1.before(对象2)： 将对象2添加到对象1前边。对象1和对象2是兄弟关系\n\t\t7. insertAfter()\n\t\t\t* 对象1.insertAfter(对象2)：将对象2添加到对象1后边。对象1和对象2是兄弟关系\n\t\t8. insertBefore()\n\t\t\t* 对象1.insertBefore(对象2)： 将对象2添加到对象1前边。对象1和对象2是兄弟关系\n\n\t\t9. remove():移除元素\n\t\t\t* 对象.remove():将对象删除掉\n\t\t10. empty():清空元素的所有后代元素。\n\t\t\t* 对象.empty():将对象的后代元素全部清空，但是保留当前对象以及其属性节点\n\n\n6. 案例\n')])])]),e("p",[t._v("​")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"jquery-高级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-高级"}},[t._v("#")]),t._v(" JQuery 高级")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. JQuery 高级\n\t1. 动画\n\t2. 遍历\n\t3. 事件绑定\n\t4. 案例\n\t5. 插件\n")])])]),e("h3",{attrs:{id:"jquery-高级-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery-高级-2"}},[t._v("#")]),t._v(" JQuery 高级")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 动画\n\t1. 三种方式显示和隐藏元素\n\t\t1. 默认显示和隐藏方式\n\t\t\t1. show([speed,[easing],[fn]])\n\t\t\t\t1. 参数：\n\t\t\t\t\t1. speed：动画的速度。三个预定义的值("slow","normal", "fast")或表示动画时长的毫秒数值(如：1000)\n\t\t\t\t\t2. easing：用来指定切换效果，默认是"swing"，可用参数"linear"\n\t\t\t\t\t\t* swing：动画执行时效果是 先慢，中间快，最后又慢\n\t\t\t\t\t\t* linear：动画执行时速度是匀速的\n\t\t\t\t\t3. fn：在动画完成时执行的函数，每个元素执行一次。\n\n\t\t\t2. hide([speed,[easing],[fn]])\n\t\t\t3. toggle([speed],[easing],[fn])\n\t\t\n\t\t2. 滑动显示和隐藏方式\n\t\t\t1. slideDown([speed],[easing],[fn])\n\t\t\t2. slideUp([speed,[easing],[fn]])\n\t\t\t3. slideToggle([speed],[easing],[fn])\n\n\t\t3. 淡入淡出显示和隐藏方式\n\t\t\t1. fadeIn([speed],[easing],[fn])\n\t\t\t2. fadeOut([speed],[easing],[fn])\n\t\t\t3. fadeToggle([speed,[easing],[fn]])\n\n\n2. 遍历\n\t1. js的遍历方式\n\t\t* for(初始化值;循环结束条件;步长)\n\t2. jq的遍历方式\n\t\t1. jq对象.each(callback)\n\t\t\t1. 语法：\n\t\t\t\tjquery对象.each(function(index,element){});\n\t\t\t\t\t* index:就是元素在集合中的索引\n\t\t\t\t\t* element：就是集合中的每一个元素对象\n\n\t\t\t\t\t* this：集合中的每一个元素对象\n\t\t\t2. 回调函数返回值：\n\t\t\t\t* true:如果当前function返回为false，则结束循环(break)。\n\t\t\t\t* false:如果当前function返回为true，则结束本次循环，继续下次循环(continue)\n\t\t2. $.each(object, [callback])\n\t\t3. for..of: jquery 3.0 版本之后提供的方式\n\t\t\tfor(元素对象 of 容器对象)\n\t\n3. 事件绑定\n\t1. jquery标准的绑定方式\n\t\t* jq对象.事件方法(回调函数)；\n\t\t* 注：如果调用事件方法，不传递回调函数，则会触发浏览器默认行为。\n\t\t\t* 表单对象.submit();//让表单提交\n\t2. on绑定事件/off解除绑定\n\t\t* jq对象.on("事件名称",回调函数)\n\t\t* jq对象.off("事件名称")\n\t\t\t* 如果off方法不传递任何参数，则将组件上的所有事件全部解绑\n\t3. 事件切换：toggle\n\t\t* jq对象.toggle(fn1,fn2...)\n\t\t\t* 当单击jq对象对应的组件后，会执行fn1.第二次点击会执行fn2.....\n\t\t\t\n\t\t* 注意：1.9版本 .toggle() 方法删除,jQuery Migrate（迁移）插件可以恢复此功能。\n\t\t\t <script src="../js/jquery-migrate-1.0.0.js" type="text/javascript" charset="utf-8"><\/script>\n\n\n4. 案例\n\t1. 广告显示和隐藏\n\t\t<!DOCTYPE html>\n\t\t<html>\n\t\t<head>\n\t\t    <meta charset="UTF-8">\n\t\t    <title>广告的自动显示与隐藏</title>\n\t\t    <style>\n\t\t        #content{width:100%;height:500px;background:#999}\n\t\t    </style>\n\t\t\n\t\t    \x3c!--引入jquery--\x3e\n\t\t    <script type="text/javascript" src="../js/jquery-3.3.1.min.js"><\/script>\n\t\t    <script>\n\t\t        /*\n\t\t            需求：\n\t\t                1. 当页面加载完，3秒后。自动显示广告\n\t\t                2. 广告显示5秒后，自动消失。\n\t\t\n\t\t            分析：\n\t\t                1. 使用定时器来完成。setTimeout (执行一次定时器)\n\t\t                2. 分析发现JQuery的显示和隐藏动画效果其实就是控制display\n\t\t                3. 使用  show/hide方法来完成广告的显示\n\t\t         */\n\t\t\n\t\t        //入口函数，在页面加载完成之后，定义定时器，调用这两个方法\n\t\t        $(function () {\n\t\t           //定义定时器，调用adShow方法 3秒后执行一次\n\t\t           setTimeout(adShow,3000);\n\t\t           //定义定时器，调用adHide方法，8秒后执行一次\n\t\t            setTimeout(adHide,8000);\n\t\t        });\n\t\t        //显示广告\n\t\t        function adShow() {\n\t\t            //获取广告div，调用显示方法\n\t\t            $("#ad").show("slow");\n\t\t        }\n\t\t        //隐藏广告\n\t\t        function adHide() {\n\t\t            //获取广告div，调用隐藏方法\n\t\t            $("#ad").hide("slow");\n\t\t        }\n')])])]),e("p",[t._v("​\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t    <\/script>\n\t\t</head>\n\t\t<body>\n\t\t\x3c!-- 整体的DIV --\x3e\n\t\t<div>\n\t\t    \x3c!-- 广告DIV --\x3e\n\t\t    <div id="ad" style="display: none;">\n\t\t        <img style="width:100%" src="../img/adv.jpg" />\n\t\t    </div>\n\t\t\n\t\t    \x3c!-- 下方正文部分 --\x3e\n\t\t    <div id="content">\n\t\t        正文部分\n\t\t    </div>\n\t\t</div>\n\t\t</body>\n\t\t</html>\n\n\n\n\t2. 抽奖\n\t\t<!DOCTYPE html>\n\t\t<html>\n\t\t<head>\n\t\t    <meta charset="UTF-8">\n\t\t    <title>jquery案例之抽奖</title>\n\t\t    <script type="text/javascript" src="../js/jquery-3.3.1.min.js"><\/script>\n\t\t\n\t\t    <script language=\'javascript\' type=\'text/javascript\'>\n\t\t\n\t\t        /*\n\t\t            分析：\n\t\t                1. 给开始按钮绑定单击事件\n\t\t                    1.1 定义循环定时器\n\t\t                    1.2 切换小相框的src属性\n\t\t                        * 定义数组，存放图片资源路径\n\t\t                        * 生成随机数。数组索引\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t                2. 给结束按钮绑定单击事件\n\t\t                    1.1 停止定时器\n\t\t                    1.2 给大相框设置src属性\n\t\t\n\t\t         */\n\t\t        var imgs = ["../img/man00.jpg",\n\t\t                    "../img/man01.jpg",\n\t\t                    "../img/man02.jpg",\n\t\t                    "../img/man03.jpg",\n\t\t                    "../img/man04.jpg",\n\t\t                    "../img/man05.jpg",\n\t\t                    "../img/man06.jpg",\n\t\t                    ];\n\t\t        var startId;//开始定时器的id\n\t\t        var index;//随机角标\n\t\t        $(function () {\n\t\t            //处理按钮是否可以使用的效果\n\t\t            $("#startID").prop("disabled",false);\n\t\t            $("#stopID").prop("disabled",true);\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t           //1. 给开始按钮绑定单击事件\n\t\t            $("#startID").click(function () {\n\t\t                // 1.1 定义循环定时器 20毫秒执行一次\n\t\t                startId = setInterval(function () {\n\t\t                    //处理按钮是否可以使用的效果\n\t\t                    $("#startID").prop("disabled",true);\n\t\t                    $("#stopID").prop("disabled",false);\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t                    //1.2生成随机角标 0-6\n\t\t                    index = Math.floor(Math.random() * 7);//0.000--0.999 --\x3e * 7 --\x3e 0.0-----6.9999\n\t\t                    //1.3设置小相框的src属性\n\t\t                    $("#img1ID").prop("src",imgs[index]);\n\t\t\n\t\t                },20);\n\t\t            });\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t            //2. 给结束按钮绑定单击事件\n\t\t            $("#stopID").click(function () {\n\t\t                //处理按钮是否可以使用的效果\n\t\t                $("#startID").prop("disabled",false);\n\t\t                $("#stopID").prop("disabled",true);\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t               // 1.1 停止定时器\n\t\t                clearInterval(startId);\n\t\t               // 1.2 给大相框设置src属性\n\t\t                $("#img2ID").prop("src",imgs[index]).hide();\n\t\t                //显示1秒之后\n\t\t                $("#img2ID").show(1000);\n\t\t            });\n\t\t        });\n')])])]),e("p",[t._v("​\t\t\t\n​\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t    <\/script>\n\t\t\n\t\t</head>\n\t\t<body>\n\t\t\n\t\t\x3c!-- 小像框 --\x3e\n\t\t<div style="border-style:dotted;width:160px;height:100px">\n\t\t    <img id="img1ID" src="../img/man00.jpg" style="width:160px;height:100px"/>\n\t\t</div>\n\t\t\n\t\t\x3c!-- 大像框 --\x3e\n\t\t<div\n\t\t        style="border-style:double;width:800px;height:500px;position:absolute;left:500px;top:10px">\n\t\t    <img id="img2ID" src="../img/man00.jpg" width="800px" height="500px"/>\n\t\t</div>\n\t\t\n\t\t\x3c!-- 开始按钮 --\x3e\n\t\t<input\n\t\t        id="startID"\n\t\t        type="button"\n\t\t        value="点击开始"\n\t\t        style="width:150px;height:150px;font-size:22px">\n\t\t\n\t\t\x3c!-- 停止按钮 --\x3e\n\t\t<input\n\t\t        id="stopID"\n\t\t        type="button"\n\t\t        value="点击停止"\n\t\t        style="width:150px;height:150px;font-size:22px">\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t</body>\n\t\t</html>\n\n5. 插件：增强JQuery的功能\n\t1. 实现方式：\n\t\t1. $.fn.extend(object) \n\t\t\t* 增强通过Jquery获取的对象的功能  $("#id")\n\t\t2. $.extend(object)\n\t\t\t* 增强JQeury对象自身的功能  $/jQuery\n')])])]),e("hr"),t._v(" "),e("h3",{attrs:{id:"ajax-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ajax-json"}},[t._v("#")]),t._v(" Ajax&Json")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. AJAX：\n2. JSON\n")])])]),e("h2",{attrs:{id:"ajax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" AJAX：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念： ASynchronous JavaScript And XML\t异步的JavaScript 和 XML\n\t1. 异步和同步：客户端和服务器端相互通信的基础上\n\t\t* 客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。\n\t\t* 客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。\n\n\t\tAjax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 [1] \n\t\t通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。\n\t\t传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。\n\n\t\t提升用户的体验\n\n2. 实现方式：\n\t1. 原生的JS实现方式（了解）\n\t\t\t\t //1.创建核心对象\n\t            var xmlhttp;\n\t            if (window.XMLHttpRequest)\n\t            {// code for IE7+, Firefox, Chrome, Opera, Safari\n\t                xmlhttp=new XMLHttpRequest();\n\t            }\n\t            else\n\t            {// code for IE6, IE5\n\t                xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");\n\t            }\n\t\n\t            //2. 建立连接\n\t            /*\n\t                参数：\n\t                    1. 请求方式：GET、POST\n\t                        * get方式，请求参数在URL后边拼接。send方法为空参\n\t                        * post方式，请求参数在send方法中定义\n\t                    2. 请求的URL：\n\t                    3. 同步或异步请求：true（异步）或 false（同步）\n\t\n\t             */\n\t            xmlhttp.open("GET","ajaxServlet?username=tom",true);\n\t\n\t            //3.发送请求\n\t            xmlhttp.send();\n\t\n\t            //4.接受并处理来自服务器的响应结果\n\t            //获取方式 ：xmlhttp.responseText\n\t            //什么时候获取？当服务器响应成功后再获取\n\t\n\t            //当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。\n\t            xmlhttp.onreadystatechange=function()\n\t            {\n\t                //判断readyState就绪状态是否为4，判断status响应状态码是否为200\n\t                if (xmlhttp.readyState==4 && xmlhttp.status==200)\n\t                {\n\t                   //获取服务器的响应结果\n\t                    var responseText = xmlhttp.responseText;\n\t                    alert(responseText);\n\t                }\n\t            }\n\t2. JQeury实现方式\n\t\t1. $.ajax()\n\t\t\t* 语法：$.ajax({键值对});\n\t\t\t //使用$.ajax()发送异步请求\n\t            $.ajax({\n\t                url:"ajaxServlet1111" , // 请求路径\n\t                type:"POST" , //请求方式\n\t                //data: "username=jack&age=23",//请求参数\n\t                data:{"username":"jack","age":23},\n\t                success:function (data) {\n\t                    alert(data);\n\t                },//响应成功后的回调函数\n\t                error:function () {\n\t                    alert("出错啦...")\n\t                },//表示如果请求响应出现错误，会执行的回调函数\n\t\n\t                dataType:"text"//设置接受到的响应数据的格式\n\t            });\n\t\t2. $.get()：发送get请求\n\t\t\t* 语法：$.get(url, [data], [callback], [type])\n\t\t\t\t* 参数：\n\t\t\t\t\t* url：请求路径\n\t\t\t\t\t* data：请求参数\n\t\t\t\t\t* callback：回调函数\n\t\t\t\t\t* type：响应结果的类型\n\n\t\t3. $.post()：发送post请求\n\t\t\t* 语法：$.post(url, [data], [callback], [type])\n\t\t\t\t* 参数：\n\t\t\t\t\t* url：请求路径\n\t\t\t\t\t* data：请求参数\n\t\t\t\t\t* callback：回调函数\n\t\t\t\t\t* type：响应结果的类型\n')])])]),e("h2",{attrs:{id:"json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[t._v("#")]),t._v(" JSON：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念： JavaScript Object Notation\t\tJavaScript对象表示法\n\tPerson p = new Person();\n\tp.setName("张三");\n\tp.setAge(23);\n\tp.setGender("男");\n\n\tvar p = {"name":"张三","age":23,"gender":"男"};\n\n\t* json现在多用于存储和交换文本信息的语法\n\t* 进行数据的传输\n\t* JSON 比 XML 更小、更快，更易解析。\n\n2. 语法：\n\t1. 基本规则\n\t\t* 数据在名称/值对中：json数据是由键值对构成的\n\t\t\t* 键用引号(单双都行)引起来，也可以不使用引号\n\t\t\t* 值得取值类型：\n\t\t\t\t1. 数字（整数或浮点数）\n\t\t\t\t2. 字符串（在双引号中）\n\t\t\t\t3. 逻辑值（true 或 false）\n\t\t\t\t4. 数组（在方括号中）\t{"persons":[{},{}]}\n\t\t\t\t5. 对象（在花括号中） {"address":{"province"："陕西"....}}\n\t\t\t\t6. null\n\t\t* 数据由逗号分隔：多个键值对由逗号分隔\n\t\t* 花括号保存对象：使用{}定义json 格式\n\t\t* 方括号保存数组：[]\n\t2. 获取数据:\n\t\t1. json对象.键名\n\t\t2. json对象["键名"]\n\t\t3. 数组对象[索引]\n\t\t4. 遍历\n\t\t\t\t //1.定义基本格式\n\t\t        var person = {"name": "张三", age: 23, \'gender\': true};\n\t\t\n\t\t        var ps = [{"name": "张三", "age": 23, "gender": true},\n\t\t            {"name": "李四", "age": 24, "gender": true},\n\t\t            {"name": "王五", "age": 25, "gender": false}];\n')])])]),e("p",[t._v("​\t\t\t\n​\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t        //获取person对象中所有的键和值\n\t\t        //for in 循环\n\t\t       /* for(var key in person){\n\t\t            //这样的方式获取不行。因为相当于  person."name"\n\t\t            //alert(key + ":" + person.key);\n\t\t            alert(key+":"+person[key]);\n\t\t        }*/\n\t\t\n\t\t       //获取ps中的所有值\n\t\t        for (var i = 0; i < ps.length; i++) {\n\t\t            var p = ps[i];\n\t\t            for(var key in p){\n\t\t                alert(key+":"+p[key]);\n\t\t            }\n\t\t        }\n\n\n3. JSON数据和Java对象的相互转换\n\n\t* JSON解析器：\n\t\t* 常见的解析器：Jsonlib，Gson，fastjson，jackson\n\t\n\t1. JSON转为Java对象\n\t\t1. 导入jackson的相关jar包\n\t\t2. 创建Jackson核心对象 ObjectMapper\n\t\t3. 调用ObjectMapper的相关方法进行转换\n\t\t\t1. readValue(json字符串数据,Class)\n\t2. Java对象转换JSON\n\t\t1. 使用步骤：\n\t\t\t1. 导入jackson的相关jar包\n\t\t\t2. 创建Jackson核心对象 ObjectMapper\n\t\t\t3. 调用ObjectMapper的相关方法进行转换\n\t\t\t\t1. 转换方法：\n\t\t\t\t\t* writeValue(参数1，obj):\n\t                    参数1：\n\t                        File：将obj对象转换为JSON字符串，并保存到指定的文件中\n\t                        Writer：将obj对象转换为JSON字符串，并将json数据填充到字符输出流中\n\t                        OutputStream：将obj对象转换为JSON字符串，并将json数据填充到字节输出流中\n\t                * writeValueAsString(obj):将对象转为json字符串\n\n\t\t\t\t2. 注解：\n\t\t\t\t\t1. @JsonIgnore：排除属性。\n\t\t\t\t\t2. @JsonFormat：属性值得格式化\n\t\t\t\t\t\t* @JsonFormat(pattern = "yyyy-MM-dd")\n\n\t\t\t\t3. 复杂java对象转换\n\t\t\t\t\t1. List：数组\n\t\t\t\t\t2. Map：对象格式一致\n')])])]),e("h2",{attrs:{id:"案例-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例-4"}},[t._v("#")]),t._v(" 案例：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('* 校验用户名是否存在\n\t1. 服务器响应的数据，在客户端使用时，要想当做json数据格式使用。有两种解决方案：\n\t\t1. $.get(type):将最后一个参数type指定为"json"\n\t\t2. 在服务器端设置MIME类型\n\t\t\tresponse.setContentType("application/json;charset=utf-8");\n')])])]),e("hr"),t._v(" "),e("h3",{attrs:{id:"redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("1. redis\n\t1. 概念\n\t2. 下载安装\n\t3. 命令操作\n\t\t1. 数据结构\n\t4. 持久化操作\n\t5. 使用Java客户端操作redis\n")])])]),e("h2",{attrs:{id:"redis-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-2"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('1. 概念： redis是一款高性能的NOSQL系列的非关系型数据库\n\n\n\t1.1.什么是NOSQL\n\t\tNoSQL(NoSQL = Not Only SQL)，意即“不仅仅是SQL”，是一项全新的数据库理念，泛指非关系型的数据库。\n\t\t随着互联网web2.0网站的兴起，传统的关系数据库在应付web2.0网站，特别是超大规模和高并发的SNS类型的web2.0纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。NoSQL数据库的产生就是为了解决大规模数据集合多重数据种类带来的挑战，尤其是大数据应用难题。\n\n\t\t1.1.1.\tNOSQL和关系型数据库比较\n\t\t\t优点：\n\t\t\t\t1）成本：nosql数据库简单易部署，基本都是开源软件，不需要像使用oracle那样花费大量成本购买使用，相比关系型数据库价格便宜。\n\t\t\t\t2）查询速度：nosql数据库将数据存储于缓存之中，关系型数据库将数据存储在硬盘中，自然查询速度远不及nosql数据库。\n\t\t\t\t3）存储数据的格式：nosql的存储格式是key,value形式、文档形式、图片形式等等，所以可以存储基础类型以及对象或者是集合等各种格式，而数据库则只支持基础类型。\n\t\t\t\t4）扩展性：关系型数据库有类似join这样的多表查询机制的限制导致扩展很艰难。\n\n\t\t\t缺点：\n\t\t\t\t1）维护的工具和资料有限，因为nosql是属于新的技术，不能和关系型数据库10几年的技术同日而语。\n\t\t\t\t2）不提供对sql的支持，如果不支持sql这样的工业标准，将产生一定用户的学习和使用成本。\n\t\t\t\t3）不提供关系型数据库对事务的处理。\n\n\t\t1.1.2.\t非关系型数据库的优势：\n\t\t\t1）性能NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高。\n\t\t\t2）可扩展性同样也是因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。\n\n\t\t1.1.3.\t关系型数据库的优势：\n\t\t\t1）复杂查询可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。\n\t\t\t2）事务支持使得对于安全性能很高的数据访问要求得以实现。对于这两类数据库，对方的优势就是自己的弱势，反之亦然。\n\n\t\t1.1.4.\t总结\n\t\t\t关系型数据库与NoSQL数据库并非对立而是互补的关系，即通常情况下使用关系型数据库，在适合使用NoSQL的时候使用NoSQL数据库，\n\t\t\t让NoSQL数据库对关系型数据库的不足进行弥补。\n\t\t\t一般会将数据存储在关系型数据库中，在nosql数据库中备份存储关系型数据库的数据\n\n\t1.2.主流的NOSQL产品\n\t\t•\t键值(Key-Value)存储数据库\n\t\t\t\t相关产品： Tokyo Cabinet/Tyrant、Redis、Voldemort、Berkeley DB\n\t\t\t\t典型应用： 内容缓存，主要用于处理大量数据的高访问负载。 \n\t\t\t\t数据模型： 一系列键值对\n\t\t\t\t优势： 快速查询\n\t\t\t\t劣势： 存储的数据缺少结构化\n\t\t•\t列存储数据库\n\t\t\t\t相关产品：Cassandra, HBase, Riak\n\t\t\t\t典型应用：分布式的文件系统\n\t\t\t\t数据模型：以列簇式存储，将同一列数据存在一起\n\t\t\t\t优势：查找速度快，可扩展性强，更容易进行分布式扩展\n\t\t\t\t劣势：功能相对局限\n\t\t•\t文档型数据库\n\t\t\t\t相关产品：CouchDB、MongoDB\n\t\t\t\t典型应用：Web应用（与Key-Value类似，Value是结构化的）\n\t\t\t\t数据模型： 一系列键值对\n\t\t\t\t优势：数据结构要求不严格\n\t\t\t\t劣势： 查询性能不高，而且缺乏统一的查询语法\n\t\t•\t图形(Graph)数据库\n\t\t\t\t相关数据库：Neo4J、InfoGrid、Infinite Graph\n\t\t\t\t典型应用：社交网络\n\t\t\t\t数据模型：图结构\n\t\t\t\t优势：利用图结构相关算法。\n\t\t\t\t劣势：需要对整个图做计算才能得出结果，不容易做分布式的集群方案。\n\t1.3 什么是Redis\n\t\tRedis是用C语言开发的一个开源的高性能键值对（key-value）数据库，官方提供测试数据，50个并发执行100000个请求,读的速度是110000次/s,写的速度是81000次/s ，且Redis通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型如下：\n\t\t\t1) 字符串类型 string\n\t\t\t2) 哈希类型 hash\n\t\t\t3) 列表类型 list\n\t\t\t4) 集合类型 set\n\t\t\t5) 有序集合类型 sortedset\n\t\t1.3.1 redis的应用场景\n\t\t\t•\t缓存（数据查询、短连接、新闻内容、商品内容等等）\n\t\t\t•\t聊天室的在线好友列表\n\t\t\t•\t任务队列。（秒杀、抢购、12306等等）\n\t\t\t•\t应用排行榜\n\t\t\t•\t网站访问统计\n\t\t\t•\t数据过期处理（可以精确到毫秒\n\t\t\t•\t分布式集群架构中的session分离\n\n\n2. 下载安装\n\t1. 官网：https://redis.io\n\t2. 中文网：http://www.redis.net.cn/\n\t3. 解压直接可以使用：\n\t\t* redis.windows.conf：配置文件\n\t\t* redis-cli.exe：redis的客户端\n\t\t* redis-server.exe：redis服务器端\n\t\n3. 命令操作\n\t1. redis的数据结构：\n\t\t* redis存储的是：key,value格式的数据，其中key都是字符串，value有5种不同的数据结构\n\t\t\t* value的数据结构：\n\t\t\t\t1) 字符串类型 string\n\t\t\t\t2) 哈希类型 hash ： map格式  \n\t\t\t\t3) 列表类型 list ： linkedlist格式。支持重复元素\n\t\t\t\t4) 集合类型 set  ： 不允许重复元素\n\t\t\t\t5) 有序集合类型 sortedset：不允许重复元素，且元素有顺序\n\t\n\t2. 字符串类型 string\n\t\t1. 存储： set key value\n\t\t\t127.0.0.1:6379> set username zhangsan\n\t\t\tOK\n\t\t2. 获取： get key\n\t\t\t127.0.0.1:6379> get username\n\t\t\t"zhangsan"\n\t\t3. 删除： del key\n\t\t\t127.0.0.1:6379> del age\n\t\t\t(integer) 1\n\t3. 哈希类型 hash\n\t\t1. 存储： hset key field value\n\t\t\t127.0.0.1:6379> hset myhash username lisi\n\t\t\t(integer) 1\n\t\t\t127.0.0.1:6379> hset myhash password 123\n\t\t\t(integer) 1\n\t\t2. 获取： \n\t\t\t* hget key field: 获取指定的field对应的值\n\t\t\t\t127.0.0.1:6379> hget myhash username\n\t\t\t\t"lisi"\n\t\t\t* hgetall key：获取所有的field和value\n\t\t\t\t127.0.0.1:6379> hgetall myhash\n\t\t\t\t1) "username"\n\t\t\t\t2) "lisi"\n\t\t\t\t3) "password"\n\t\t\t\t4) "123"\n\t\t\t\t\n\t\t3. 删除： hdel key field\n\t\t\t127.0.0.1:6379> hdel myhash username\n\t\t\t(integer) 1\n\t\n\t4. 列表类型 list:可以添加一个元素到列表的头部（左边）或者尾部（右边）\n\t\t1. 添加：\n\t\t\t1. lpush key value: 将元素加入列表左表\n\t\t\t\t\n\t\t\t2. rpush key value：将元素加入列表右边\n\t\t\t\t\n\t\t\t\t127.0.0.1:6379> lpush myList a\n\t\t\t\t(integer) 1\n\t\t\t\t127.0.0.1:6379> lpush myList b\n\t\t\t\t(integer) 2\n\t\t\t\t127.0.0.1:6379> rpush myList c\n\t\t\t\t(integer) 3\n\t\t2. 获取：\n\t\t\t* lrange key start end ：范围获取\n\t\t\t\t127.0.0.1:6379> lrange myList 0 -1\n\t\t\t\t1) "b"\n\t\t\t\t2) "a"\n\t\t\t\t3) "c"\n\t\t3. 删除：\n\t\t\t* lpop key： 删除列表最左边的元素，并将元素返回\n\t\t\t* rpop key： 删除列表最右边的元素，并将元素返回\n\n\n\t5. 集合类型 set ： 不允许重复元素\n\t\t1. 存储：sadd key value\n\t\t\t127.0.0.1:6379> sadd myset a\n\t\t\t(integer) 1\n\t\t\t127.0.0.1:6379> sadd myset a\n\t\t\t(integer) 0\n\t\t2. 获取：smembers key:获取set集合中所有元素\n\t\t\t127.0.0.1:6379> smembers myset\n\t\t\t1) "a"\n\t\t3. 删除：srem key value:删除set集合中的某个元素\t\n\t\t\t127.0.0.1:6379> srem myset a\n\t\t\t(integer) 1\n\t6. 有序集合类型 sortedset：不允许重复元素，且元素有顺序.每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。\n\n\t\t1. 存储：zadd key score value\n\t\t\t127.0.0.1:6379> zadd mysort 60 zhangsan\n\t\t\t(integer) 1\n\t\t\t127.0.0.1:6379> zadd mysort 50 lisi\n\t\t\t(integer) 1\n\t\t\t127.0.0.1:6379> zadd mysort 80 wangwu\n\t\t\t(integer) 1\n\t\t2. 获取：zrange key start end [withscores]\n\t\t\t127.0.0.1:6379> zrange mysort 0 -1\n\t\t\t1) "lisi"\n\t\t\t2) "zhangsan"\n\t\t\t3) "wangwu"\n\n\t\t\t127.0.0.1:6379> zrange mysort 0 -1 withscores\n\t\t\t1) "zhangsan"\n\t\t\t2) "60"\n\t\t\t3) "wangwu"\n\t\t\t4) "80"\n\t\t\t5) "lisi"\n\t\t\t6) "500"\n\t\t3. 删除：zrem key value\n\t\t\t127.0.0.1:6379> zrem mysort lisi\n\t\t\t(integer) 1\n\n\t7. 通用命令\n\t\t1. keys * : 查询所有的键\n\t\t2. type key ： 获取键对应的value的类型\n\t\t3. del key：删除指定的key value\n\n\n4. 持久化\n\t1. redis是一个内存数据库，当redis服务器重启，获取电脑重启，数据会丢失，我们可以将redis内存中的数据持久化保存到硬盘的文件中。\n\t2. redis持久化机制：\n\t\t1. RDB：默认方式，不需要进行配置，默认就使用这种机制\n\t\t\t* 在一定的间隔时间中，检测key的变化情况，然后持久化数据\n\t\t\t1. 编辑redis.windwos.conf文件\n\t\t\t\t##   after 900 sec (15 min) if at least 1 key changed\n\t\t\t\tsave 900 1\n\t\t\t\t##   after 300 sec (5 min) if at least 10 keys changed\n\t\t\t\tsave 300 10\n\t\t\t\t##   after 60 sec if at least 10000 keys changed\n\t\t\t\tsave 60 10000\n\t\t\t\t\n\t\t\t2. 重新启动redis服务器，并指定配置文件名称\n\t\t\t\tD:\\JavaWeb2018\\day23_redis\\资料\\redis\\windows-64\\redis-2.8.9>redis-server.exe redis.windows.conf\t\n\t\t\t\n\t\t2. AOF：日志记录的方式，可以记录每一条命令的操作。可以每一次命令操作后，持久化数据\n\t\t\t1. 编辑redis.windwos.conf文件\n\t\t\t\tappendonly no（关闭aof） --\x3e appendonly yes （开启aof）\n\t\t\t\t\n\t\t\t\t## appendfsync always ： 每一次操作都进行持久化\n\t\t\t\tappendfsync everysec ： 每隔一秒进行一次持久化\n\t\t\t\t## appendfsync no\t ： 不进行持久化\n\n5. Java客户端 Jedis\n\t* Jedis: 一款java操作redis数据库的工具.\n\t* 使用步骤：\n\t\t1. 下载jedis的jar包\n\t\t2. 使用\n\t\t\t//1. 获取连接\n    \t\tJedis jedis = new Jedis("localhost",6379);\n   \t\t\t//2. 操作\n   \t\t\tjedis.set("username","zhangsan");\n    \t\t//3. 关闭连接\n    \t\tjedis.close();\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t* Jedis操作各种redis中的数据结构\n\t\t1) 字符串类型 string\n\t\t\tset\n\t\t\tget\n\t\t\t\n\t\t\t //1. 获取连接\n\t        Jedis jedis = new Jedis();//如果使用空参构造，默认值 "localhost",6379端口\n\t        //2. 操作\n\t        //存储\n\t        jedis.set("username","zhangsan");\n\t        //获取\n\t        String username = jedis.get("username");\n\t        System.out.println(username);\n\t\n\t        //可以使用setex()方法存储可以指定过期时间的 key value\n\t        jedis.setex("activecode",20,"hehe");//将activecode：hehe键值对存入redis，并且20秒后自动删除该键值对\n\t\n\t        //3. 关闭连接\n\t        jedis.close();\n\n\t\t2) 哈希类型 hash ： map格式  \n\t\t\thset\n\t\t\thget\n\t\t\thgetAll\n\t\t\t//1. 获取连接\n\t        Jedis jedis = new Jedis();//如果使用空参构造，默认值 "localhost",6379端口\n\t        //2. 操作\n\t        // 存储hash\n\t        jedis.hset("user","name","lisi");\n\t        jedis.hset("user","age","23");\n\t        jedis.hset("user","gender","female");\n\t\n\t        // 获取hash\n\t        String name = jedis.hget("user", "name");\n\t        System.out.println(name);\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t        // 获取hash的所有map中的数据\n\t        Map<String, String> user = jedis.hgetAll("user");\n\t\n\t        // keyset\n\t        Set<String> keySet = user.keySet();\n\t        for (String key : keySet) {\n\t            //获取value\n\t            String value = user.get(key);\n\t            System.out.println(key + ":" + value);\n\t        }\n\t\n\t        //3. 关闭连接\n\t        jedis.close();\n\n\n\t\t3) 列表类型 list ： linkedlist格式。支持重复元素\n\t\t\tlpush / rpush\n\t\t\tlpop / rpop\n\t\t\tlrange start end : 范围获取\n\t\t\t\n\t\t\t //1. 获取连接\n\t        Jedis jedis = new Jedis();//如果使用空参构造，默认值 "localhost",6379端口\n\t        //2. 操作\n\t        // list 存储\n\t        jedis.lpush("mylist","a","b","c");//从左边存\n\t        jedis.rpush("mylist","a","b","c");//从右边存\n\t\n\t        // list 范围获取\n\t        List<String> mylist = jedis.lrange("mylist", 0, -1);\n\t        System.out.println(mylist);\n\t        \n\t        // list 弹出\n\t        String element1 = jedis.lpop("mylist");//c\n\t        System.out.println(element1);\n\t\n\t        String element2 = jedis.rpop("mylist");//c\n\t        System.out.println(element2);\n\t\n\t        // list 范围获取\n\t        List<String> mylist2 = jedis.lrange("mylist", 0, -1);\n\t        System.out.println(mylist2);\n\t\n\t        //3. 关闭连接\n\t        jedis.close();\n\n\n\t\t4) 集合类型 set  ： 不允许重复元素\n\t\t\tsadd\n\t\t\tsmembers:获取所有元素\n\n\t\t\t//1. 获取连接\n\t        Jedis jedis = new Jedis();//如果使用空参构造，默认值 "localhost",6379端口\n\t        //2. 操作\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t        // set 存储\n\t        jedis.sadd("myset","java","php","c++");\n\t\n\t        // set 获取\n\t        Set<String> myset = jedis.smembers("myset");\n\t        System.out.println(myset);\n\t\n\t        //3. 关闭连接\n\t        jedis.close();\n\t\t5) 有序集合类型 sortedset：不允许重复元素，且元素有顺序\n\t\t\tzadd\n\t\t\tzrange\n\n\t\t\t//1. 获取连接\n\t        Jedis jedis = new Jedis();//如果使用空参构造，默认值 "localhost",6379端口\n\t        //2. 操作\n\t        // sortedset 存储\n\t        jedis.zadd("mysortedset",3,"亚瑟");\n\t        jedis.zadd("mysortedset",30,"后裔");\n\t        jedis.zadd("mysortedset",55,"孙悟空");\n\t\n\t        // sortedset 获取\n\t        Set<String> mysortedset = jedis.zrange("mysortedset", 0, -1);\n\t\n\t        System.out.println(mysortedset);\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t        //3. 关闭连接\n\t        jedis.close();\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t* jedis连接池： JedisPool\n\t\t* 使用：\n\t\t\t1. 创建JedisPool连接池对象\n\t\t\t2. 调用方法 getResource()方法获取Jedis连接\n\t\t\t\t//0.创建一个配置对象\n\t\t        JedisPoolConfig config = new JedisPoolConfig();\n\t\t        config.setMaxTotal(50);\n\t\t        config.setMaxIdle(10);\n\t\t\n\t\t        //1.创建Jedis连接池对象\n\t\t        JedisPool jedisPool = new JedisPool(config,"localhost",6379);\n\t\t\n\t\t        //2.获取连接\n\t\t        Jedis jedis = jedisPool.getResource();\n\t\t        //3. 使用\n\t\t        jedis.set("hehe","heihei");\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t        //4. 关闭 归还到连接池中\n\t\t        jedis.close();\n\t\t\n\t\t* 连接池工具类\n\t\t\tpublic class JedisPoolUtils {\n\n\t\t\t    private static JedisPool jedisPool;\n\t\t\t\n\t\t\t    static{\n\t\t\t        //读取配置文件\n\t\t\t        InputStream is = JedisPoolUtils.class.getClassLoader().getResourceAsStream("jedis.properties");\n\t\t\t        //创建Properties对象\n\t\t\t        Properties pro = new Properties();\n\t\t\t        //关联文件\n\t\t\t        try {\n\t\t\t            pro.load(is);\n\t\t\t        } catch (IOException e) {\n\t\t\t            e.printStackTrace();\n\t\t\t        }\n\t\t\t        //获取数据，设置到JedisPoolConfig中\n\t\t\t        JedisPoolConfig config = new JedisPoolConfig();\n\t\t\t        config.setMaxTotal(Integer.parseInt(pro.getProperty("maxTotal")));\n\t\t\t        config.setMaxIdle(Integer.parseInt(pro.getProperty("maxIdle")));\n\t\t\t\n\t\t\t        //初始化JedisPool\n\t\t\t        jedisPool = new JedisPool(config,pro.getProperty("host"),Integer.parseInt(pro.getProperty("port")));\n')])])]),e("p",[t._v("​\t\t\t\t\n​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t    }\n")])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\t\t\t    /**\n\t\t\t     * 获取连接方法\n\t\t\t     */\n\t\t\t    public static Jedis getJedis(){\n\t\t\t        return jedisPool.getResource();\n\t\t\t    }\n\t\t\t}\n")])])]),e("h3",{attrs:{id:"案例-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例-5"}},[t._v("#")]),t._v(" 案例：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("案例需求：\n\t1. 提供index.html页面，页面中有一个省份 下拉列表\n\t2. 当 页面加载完成后 发送ajax请求，加载所有省份\n\n\n* 注意：使用redis缓存一些不经常发生变化的数据。\n\t* 数据库的数据一旦发生改变，则需要更新缓存。\n\t\t* 数据库的表执行 增删改的相关操作，需要将redis缓存数据情况，再次存入\n\t\t* 在service对应的增删改方法中，将redis数据删除。\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"maven"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#maven"}},[t._v("#")]),t._v(" maven")]),t._v(" "),e("blockquote",[e("p",[t._v("暂无")])])])}),[],!1,null,null,null);n.default=s.exports}}]);